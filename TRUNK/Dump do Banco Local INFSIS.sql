-- phpMyAdmin SQL Dump
-- version 4.0.4
-- http://www.phpmyadmin.net
--
-- Máquina: localhost
-- Data de Criação: 17-Jan-2014 às 18:31
-- Versão do servidor: 5.6.12-log
-- versão do PHP: 5.4.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Base de Dados: `infsis`
--
CREATE DATABASE IF NOT EXISTS `infsis` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
USE `infsis`;

-- --------------------------------------------------------

--
-- Estrutura da tabela `anexos`
--

CREATE TABLE IF NOT EXISTS `anexos` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Req_Segunda_Chamada_Requerimento_id` int(10) unsigned NOT NULL,
  `caminho` text COLLATE utf8_unicode_ci,
  `nome` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  KEY `Anexos_FKIndex1` (`Req_Segunda_Chamada_Requerimento_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=10 ;

--
-- Extraindo dados da tabela `anexos`
--

INSERT INTO `anexos` (`id`, `Req_Segunda_Chamada_Requerimento_id`, `caminho`, `nome`) VALUES
(3, 1000379, '/opt/sigera_files/anexos/20131202152236_turma.png', 'turma.png'),
(4, 1000392, NULL, 'Criando um novo subsite no Drupal 6.odt'),
(5, 1000393, NULL, 'Criando um novo subsite no Drupal 6.odt'),
(6, 1000403, NULL, 'Credicard.pdf'),
(7, 1000404, NULL, 'Credicard.pdf'),
(8, 1000405, NULL, 'Credicard.pdf'),
(9, 1000405, NULL, 'Boleto_Janeiro_2014_1818.pdf');

-- --------------------------------------------------------

--
-- Estrutura da tabela `configuracao`
--

CREATE TABLE IF NOT EXISTS `configuracao` (
  `id` int(10) unsigned NOT NULL,
  `data_final_ajustes_matricula` date DEFAULT NULL,
  `data_inicial_ajustes_matricula` date DEFAULT NULL,
  `data_inicial_semestre` date DEFAULT NULL,
  `data_final_semestre` date DEFAULT NULL,
  `ano_corrente` int(11) DEFAULT NULL,
  `semestre_corrente` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `configuracao`
--

INSERT INTO `configuracao` (`id`, `data_final_ajustes_matricula`, `data_inicial_ajustes_matricula`, `data_inicial_semestre`, `data_final_semestre`, `ano_corrente`, `semestre_corrente`) VALUES
(1, '2014-07-31', '2012-01-01', '2012-01-01', '2012-07-31', 2013, 2);

-- --------------------------------------------------------

--
-- Estrutura da tabela `curso`
--

CREATE TABLE IF NOT EXISTS `curso` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `prefixo` varchar(15) COLLATE utf8_unicode_ci NOT NULL,
  `cod_matriz_curricular` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,
  `nome` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `unidade_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `Curso_FKIndex1` (`unidade_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1000007 ;

--
-- Extraindo dados da tabela `curso`
--

INSERT INTO `curso` (`id`, `prefixo`, `cod_matriz_curricular`, `nome`, `unidade_id`) VALUES
(1, 'cc', '18P2IB', 'Ciência da Computação', 7),
(2, 'es', '105P1NB', 'Engenharia de Software', 7),
(3, 'ginf', '\\N', 'Gestão da Informação', 3),
(4, 'si', '109P1NB', 'Sistemas de Informação', 7),
(5, 'mat', '\\N', 'Matemática', 8),
(6, 'fis', '\\N', 'Física', 6),
(7, 'ecomp', '\\N', 'Engenharia de Computação', 1),
(8, 'eciv', '\\N', 'Engenharia Civil', 9),
(9, 'eel', '\\N', 'Engenharia Elétrica', 1),
(10, 'eflo', '\\N', 'Engenharia Florestal', 10),
(11, 'eali', '\\N', 'Engenharia de Alimentos', 10),
(12, 'agro', '\\N', 'Agronomia', 10),
(13, 'pos', '\\N', 'Pós-Graduação - Mestrado/Doutorado', 7),
(16, 'est', '\\N', 'Estatística', 8),
(17, 'equi', '\\N', 'Engenharia Química', 10),
(18, 'emec', '\\N', 'Engenharia Mecânica', 1),
(19, 'efis', '\\N', 'Engenharia Física', 6),
(20, 'fm', '\\N', 'Física Médica', 6),
(1000000, 'EspWEB', 'ESPW001', 'Especialização em Desenvolvimento de Aplicações WEB com Interfaces Ricas', 7),
(1000003, 'espbd', 'ESPBD001', 'Especialização em Banco de Dados', 7),
(1000004, 'MSC', 'MSC001', 'Mestrado em Ciência da Computação', 7),
(1000005, 'DSC', 'DSC001', 'Doutorado em Ciência da Computação', 7),
(1000006, 'espie', 'ESPIE001', 'Especialização em Informática Aplicada à Educação', 7);

-- --------------------------------------------------------

--
-- Estrutura da tabela `disciplina`
--

CREATE TABLE IF NOT EXISTS `disciplina` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `carga_horaria_pratica` int(10) unsigned DEFAULT NULL,
  `carga_horaria_teorica` int(10) unsigned DEFAULT NULL,
  `ementa` text COLLATE utf8_unicode_ci,
  `nome` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `curso_id` int(10) unsigned NOT NULL,
  `bibliografia_basica` text COLLATE utf8_unicode_ci,
  `bibliografia_complementar` text COLLATE utf8_unicode_ci,
  `objetivo_geral` text COLLATE utf8_unicode_ci,
  `codigo` char(255) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  KEY `curso_id` (`curso_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1000004 ;

--
-- Extraindo dados da tabela `disciplina`
--

INSERT INTO `disciplina` (`id`, `carga_horaria_pratica`, `carga_horaria_teorica`, `ementa`, `nome`, `curso_id`, `bibliografia_basica`, `bibliografia_complementar`, `objetivo_geral`, `codigo`) VALUES
(1, 0, 64, 'Medidas de complexidade, análise assintótica de limites de complexidade, técnicas de prova de cotas inferiores. Exemplos de análise de algoritmos iterativos e recursivos. Técnicas de projeto de algoritmos eficientes. Programação dinâmica. Algoritmos probabilísticos.', 'ANÁLISE E PROJETO DE ALGORITMOS', 1, 'LEISERSON, Charles, E. RIVEST, Ronald L. CORMEN, Thomas H. Algoritmos - Teoria e Prática, Campus, 2001.', 'BAASE, Sara. GELDER, Allen Van .Computer Algorithms: Introduction to Design and Analysis. (3rd Edition) - SZWARCFITER, Jayme Luiz & MARKENZON, Lilian. “Estrutura de Dados e seus Algoritmos”. LTC Editora. 1994. 2a Edição - MAMBER, Udi. “Introduction to Algorithms”. Addison Wesley Publishing Company. 1989.', 'A DEFINIR', ''),
(2, 16, 48, 'Entendimento dos mecanismos representação de dados; introdução à Programação em linguagem de máquina e linguagem de montagem; compreensão de instruções, Conjunto de instruções e modos de endereçamento; Compreensão dos mecanismos de controle de fluxo, pilha e subrotina; Apresentação aos mecanismos de interrupção; Comparação entre os diversos métodos de transferência de dados e dispositivos de E/S; Estudo do suporte de hardware para o desenvolvimento de software.', 'ARQUITETURA DE COMPUTADORES', 1, 'HENNESSY, J.L. and PATTERSON, D.A. Computer Architecture: A Quantitative Approach, 2nd. Edition, 1996, Morgan Kaufmann. - PATTERSON, D.A and HENNESSY, J.L. Computer Organization and Design-The hardware software interface , 3nd. Edition, 2005, Morgan Kaufmann. - TANENBAUM, A.. Structured Computer Organization, 4th . Edition, 1999, Prentice-Hall.', 'CARPINELLI, J. Computer Systems Organization & Architecture, Addison-Wesley, 2001. - STALLINGS, W. Computer Organization and Architecture: Designing for Performance, 4th Edition, 1996, Prentice-Hall.', 'A DEFINIR', ''),
(3, 16, 48, 'Conceitos fundamentais para o projeto, utilização e implementação de banco de dados. O Modelo Relacional: conceitos, restrições de integridade, introdução a álgebra relacional, cálculo relacional, SQL, normalização e dependências funcionais. Projeto de banco de dados: modelagem de dados usando o Modelo E/R; mapeamento ER-relacional; uso de normalização no projeto de BD.', 'BANCO DE DADOS', 1, 'SILBERSCHATZ, A., KORTH, H.F. and SUDARSHAN, S., Sistema de Banco de Dados, Ed. Campus, Rio de Janeiro, 2006.', 'HEUSER, C.A., Projeto de Banco de Dados, 5a edição, Ed. Sagra Luzzatto, Porto Alegre, 2004. - ELMASRI, R. e NAVATHE, S.B., Sistemas de Banco de Dados, 4a Edição, Pearson/Addison Wesley, São Paulo, 2005. - TEOREY, T., LIGHTSTONE, S. and NADEAU, T., Projeto e Modelagem de Bancos de Dados, Ed. Campus, Rio de Janeiro, 2007. - SETZER, V. W. e SILVA, F. S. C., Bancos de Dados, Ed. Edgard Blucher, São Paulo, 2005. - KORTH, H.F. and SILBERSCHATZ, A., Database System Concepts, Ed. MCGRAW-HILL Profissional, 2005. - ELMASRI, R. and NAVATHE, S.B., Fundamentals of Database Systems, 5th ed., Addison Wesley Higher Education, 2006. - KHOSHAFIAN, S., Banco de Dados Orientado a Objetos, IBPI Press, 1994. - DATE, C. J., Introdução a Sistemas de Banco de Dados, tradução da 8o edição americana, Ed. Campus, Rio de Janeiro, 2004. - DATE, C. J., Introduction to Database Systems, Eighth Edition. Addison-Wesley Publishing, 2003. - WELLING, L. and THOMSON, L., Tutorial MySQL, Ed. Ciência Moderna, 2004.', 'A DEFINIR', ''),
(4, 32, 32, 'A estrutura de um compilador; Análises léxica e sintática e semântica. Organização da tabela de símbolos. Gerenciamento de erros; Síntese de programas-objeto.', 'COMPILADORES', 1, '', '', 'A DEFINIR', ''),
(5, 32, 32, 'Dispositivos gráficos de entrada e saída. Processadores de exibição gráfica. Teoria de cor. Transformações geométricas bidimensionais e tridimensionais. Transformações entre sistemas de coordenadas bidimensionais. Transformações de projeção paralela e perceptiva. Câmera virtual. Transformações entre sistemas de coordenadas tridimensionais. Rasterização bidimensional. Recorte e seleção bidimensional. Visualização tridimensional: iluminação, eliminação de linhas superfícies escondidas, modelos de tonalização (“shading”). Aplicação de texturas. O problema do serrilhado (aliasing). Percepção visual humana, amostragem, realce, filtragem, restauração de imagem, segmentação de imagem, compressão e comunicação de imagens. Noção de visão computacional e reconhecimento de padrões.', 'COMPUTAÇÃO GRÁFICA', 1, '', '', 'A DEFINIR', ''),
(6, 0, 32, 'Estudo e análise de situações atuais envolvendo o uso de computadores e como estes afetam a sociedade. Situações específicas: conceito de ética e critérios para tomada de decisões éticas, acesso não autorizado, propriedade intelectual, erros e ameaças à segurança, saúde ocupacional, privacidade e uso de dados pessoais, regulamentação da profissão, inclusão digital, entre outros. Códigos de ética profissional. Estudos de casos', 'COMPUTADOR E SOCIEDADE', 1, 'Masiero, P Ética em Computação, Editora da USP, 1999', 'Masiero, P Ética em Computação, Editora da USP, 1999', 'A DEFINIR', ''),
(7, 32, 32, 'O papel do empreendedor no processo de criação de novas empresas. Etapas do Processo de Criação de Empresas: a pesquisa de oportunidades, estudo de tendências de mercado. O projeto de criação e início de atividades da nova empresa. Problemas de gestão de micro e pequenas empresas nascentes. Entidades de apoio a pequena e média empresa. Estruturas de cooperação entre empresas', 'EMPREENDEDORISMO', 1, 'DEGEN, Ronald. O Empreendedor - Fundamentos da Iniciativa Empresarial. Ed. McGraw-Hill, São Paulo, 1989', 'RESNIK, Paul. A Bíblia da Pequena Empresa. Makron Books Editora, São Paulo, 1988.', 'A DEFINIR', ''),
(8, 48, 16, 'Definição de requisitos, quando são produzidos, quais as relações com outros artefatos, desafios e propostas correntes. Os processos relacionados a requisitos: eliciação, análise, especificação (registro) e avaliação (validação) de requisitos. Classificação de requisitos (requisitos de sistema e de software; requisitos funcionais e não-funcionais). Qualidade de requisitos (objetividade, clareza, viabilidade técnica, verificabilidade). Normas e padrões pertinentes. Considerações práticas: aplicação de métodos e técnicas; a natureza iterativa dos processos de requisitos; gerência de mudanças; medição e rastreabilidade de requisitos.', 'ENGENHARIA DE REQUISITOS', 1, 'SOMMERVILLE, Ian. Software Engineering. 8th edition. Addison-Wesley, 2006', 'IEEE. Std 830 – Recommended Practice for Software Requirements Specifications, 1998. - IEEE. Std 1362 – Guide for Information Technology – System Definition – Concept of Operations (ConOps) Document, 1998. - IEEE. Guide to the Software Engineering Body of Knowledge. Cap. 2 – Software Requirements, 2004.', 'A DEFINIR', ''),
(9, 48, 16, 'Visão geral da engenharia de software, suas subáreas, objetivos, desafios e propostas correntes. Dificuldades essenciais e acidentais da Engenharia de Software. Caracterização de software (produto). Processos do Ciclo de Vida do software. Gerência de projetos de software. Garantia da Qualidade de software. Gerência de configuração de software. Paradigmas de Desenvolvimento e Manutenção de software. Teste de software. Ferramentas de apoio à Engenharia de Software (CASE). Considerações práticas: métodos e técnicas para Engenharia de Software.', 'ENGENHARIA DE SOFTWARE', 1, 'SOMMERVILLE, Ian. Software Engineering. 8th edition. Addison-Wesley, 2006', 'ABNT/ISO/IEC. Norma 12207 - Tecnologia de informação – Processos de ciclo de vida de software, 1998. - IEEE. Guide to the Software Engineering Body of Knowledge, 2004.', 'A DEFINIR', ''),
(10, 16, 48, 'Tipos abstratos de Dados. Listas: tipos de listas, operações, implementação. Pilhas e filas: tipos, estruturas, aplicações, implementação. Matriz. Árvores: tipos, aplicações, operações e implementação', 'ESTRUTURAS DE DADOS I', 1, 'MORAES, Celso Roberto. Estruturas de Dados e Algoritmos – Uma abordagem didática. Editora Berkeley.2001', 'GOODRICH M. T. et al., Data Structures and Algorithms in Java, John Wiley & Sons, 1998.  - LEISERSON, Charles, E. RIVEST, Ronald L. CORMEN, Thomas H. Algoritmos - Teoria e Prática, Campus, 2001. - Ziviani N., Projeto de Algoritmos com Implementações em Pascal e C, Livraria Pioneira Editora, São Paulo, 1993. - TENNENBAUM, A.M. e AUGENSTEIN,M.J., Data Structures Using C, Prentice Hall Inc., xxxx - Knuth D. E., The Art of Computer Programming, vol. 1 a 3, Addison-Wesley, 1997 - AHO A V, HOPCROFT J. E., and ULLMAN, J. D., Data Structures and Algorithms, Addison-Wesley, 1987,', 'A DEFINIR', ''),
(11, 16, 48, 'Conceitos Básicos de Armazenamento e Recuperação. Organização e Acesso em Memória Auxiliar. Métodos de Ordenação. Busca. Implementação de Arquivos. Espalhamento (hashing). Casamento de padrão. Compressão.', 'ESTRUTURAS DE DADOS II', 1, 'GOODRICH M. T. et al., Data Structures and Algorithms in Java, John Wiley & Sons, 1998.', 'MORAES, Celso Roberto. Estruturas de Dados e Algoritmos – Uma abordagem didática. Editora Berkeley.2001. - LEISERSON, Charles, E. RIVEST, Ronald L. CORMEN, Thomas H. Algoritmos - Teoria e Prática, Campus, 2001. - VELLOSO, P.; SANTOS, C.; AZEVEDO, P.; FURTADO, A., Estrutura de Dados, Campus, 1986 - SZWARCFITER, J.L., Estruturas de Dados e Seus Algoritmos, LTC, 1994 - KNUTH, D. The Art of Computer Programming, VOLS I, II. III, 2nd ed. 1997 - TANNENBAUM, A.M., e outros Data Structures Using C, Prentice-Hall, 1990 - SATIR, G., BROWN, D. Técnicas de Programação em C++, Infobook, 1997', 'A DEFINIR', ''),
(12, 16, 48, 'Introdução. Resolução de problemas. Conhecimento e raciocínio. Aprendizagem. Processamento de Linguagem Natural. Aplicações.', 'INTELIGÊNCIA ARTIFICIAL', 1, 'RUSSELL, Stuart e NORVIG, Peter, Inteligência Artificial . Editora Campus – 2004', 'BRATKO, Ivan, Prolog Programming for Artificial Intelligence (International Computer Science Series), Addison-Wesley, 2000. - Luger, George F. Inteligência Artificial - Estruturas e estratégias para a solução de problemas complexos - 4.ed.- 2004', 'A DEFINIR', ''),
(13, 0, 64, 'Conceituação de computador, informática e software. Histórico da computação. Noções básicas de arquitetura e organização de computadores; unidade central de processamento; memória; conjunto de instruções; execução de instruções; dispositivos de entrada/saída; comunicação com periféricos (fluxo de dados); Armazenamento (disco rígido, CD-ROM, DVD e outros) e representação de dados; sistemas de arquivos; sistemas de numeração; aritmética binária, hexadecimal e decimal; representação de números em ponto fixo e ponto flutuante; representação de caracteres, conceitos de álgebra booleana. Software básico; sistemas operacionais e sistemas gerenciadores de bancos de dados. Conceitos de sistemas; administração da informação; categorização dos sistemas quanto à função, serviços; formas de comercialização, instalação e uso. Noções de software: evolução de linguagens de programação, compiladores e interpretadores, desenvolvimento (análise e projeto), ética, segurança, emprego (e as consequências decorrentes), riscos e tecnologias emergentes. Aplicativos: processadores de texto, planilhas de cálculo, editores gráficos e de apresentações. Comunicação de dados. Multimídia e realidade virtual. Redes de computadores; Internet (organização e serviços); correio eletrônico; navegadores (browsers); busca na Internet; servidores WWW, serviços Web, páginas HTML, aplicações em n-camadas.', 'INTRODUÇÃO À COMPUTAÇÃO', 1, 'MARÇULA, M., FILHO, P. A. B. Informática , Conceitos e Aplicações. 1a edição. Editora Érica, 2005. - BROOKSHEAR, J. G., Ciência da Computação: Uma Visão Abrangente. 7a edição. Bookman, 2005.', 'FEDELI, R. D., POLLONI, E. G. F., PERES, F. E. Introdução à Ciência da Computação . Thomsom Learning, 2003. - VELLOSO, F. de C. Informática Conceitos Básicos. 6a edição. Editora Campus, 2003 - MEYER, M. et al. Nosso Futuro e o Computador . 3a edição. Bookman, 2000. - BOGHI, C., SHITSUKA, R. Sistemas de Informação: Um Enfoque Dinâmico . São Paulo. Editora Érica, 2002. - ELMASRI, R. NAVATHE, S. B. Sistemas de Banco de Dados . LTC, 2002. - LAUDON, K e LAUDON, J. Management Information Systems. 6a edição. Prentice Hall,1999. - LOUKIDES, M. ORAM, A. Programando com Ferramentas GNU”. Conectiva OReilly, 2000. - MASIERO, P C. Ética em Computação . Editora Edusp, 2000. - OLIVEIRA, D. P. R. Sistemas de Informações Gerenciais: Estratégicas, Táticas, Operacionais . São Paulo: Atlas, 2004. - PAIXÃO, R. R., HONDA, R. Processadores Intel . Editora Érica, 1999. - PFAFFENBERGER, B. Computers in Your Future 2003 . Prentice Hall, 2003. - POLLONI, E. G. Sistemas de Informação - Estudo de Viabilidade . Editora Futura, 2001. - TANENBAUM, A. S. Sistemas Operacionais Modernos . São Paulo: Prentice-Hall, 2003. - VAUGHAN, T. Multimídia na Prática . Makron Books, 1994. - WHITE, R. Como Funciona o Computador . 4a edição. Editora Quark, 1993.', 'A DEFINIR', ''),
(14, 16, 48, 'Estudo dos conceitos de linguagens de programação e dos paradigmas de programação: procedural, orientado a objetos, funcional e lógico. Comparação entre linguagens de programação quanto às estruturas de dados, estruturas de controle, ambiente de execução, verificação de tipos, expressões, construção de subprogramas. Levantamento das características desejáveis em uma linguagem de programação, sintaxe e semântica. Reflexão sobre critérios de seleção de linguagens de programação de acordo com as especificidades das aplicações específicas.', 'LINGUAGENS DE PROGRAMAÇÃO', 1, 'SEBESTA R. W. - Concepts of programming languages - 8a ed. Addison-Wesley, 2007.', 'GHEZZI, C. & JAZAYERI, M. – Programming Languages Concepts. 2a. ed. John Wiley & Sons, New York, 1997.', 'A DEFINIR', ''),
(15, 0, 64, 'Gramáticas, Linguagens regulares, livres de contexto e sensíveis ao contexto. Tipos de reconhecedores. Operações com linguagens. Propriedades de linguagens. Autômatos de estados finitos. Autômatos de pilha. Máquina de Turing.', 'LINGUAGENS FORMAIS E AUTÔMATOS', 1, 'HOPCROFT, J.E., ULLMAN, J Introdução à teoria de Autômatos, Linguagens e Computação. Ed. Campus. 2002 - LEWIS, H.R., PAPADIMITRIOU, C.H. Elementos de Teoria da Computação. 2 ed. Porto Alegre : Bookman Cia. Editora, 2000.', 'SUDKAMP, Thomas A., Languages and Machines. Addison Wesley Publishing Company. 1997. Second Edition. - WOOD, D. Theory of Computation, EUA : John Wiley & Sons, 1987.. - SIPSER, M. Introduction to the Theory of Computation. EUA : PWS Pub. Co., 1997. - MORET, B.M. The Theory of Computation. EUA : Addison-Wesley Pub. Co., 1997. - MENEZES, Linguagens Formais e Autômatos, Série UFRGS 03, Editora Sagra.', 'A DEFINIR', ''),
(16, 0, 64, 'Lógica Proposicional. Proposições e conectivos. Operações Lógicas sobre proposições. Construção de tabelas-verdade. Tautologias, contradições e contingências. Implicação Lógica. Equivalência Lógica. Álgebra das proposições. Métodos para determinação da validade de fórmulas da Lógica Proposicional. Demonstração condicional e demonstração indireta. Lógica de Predicados.', 'LÓGICA MATEMÁTICA', 1, 'SOUZA, João Nunes de. Lógica para Ciência da Computação. Editora Campus 2002. - Alencar Filho, Edgard de, Iniciação à Lógica Matemática. Ed. Nobel 2002.', 'Mendelson, E. Introduction to Mathematical Logic. Lewis Publishers, Inc. 1997. - Enderton, H. A Mathematical Introduction to Logic. Academic Press 2000 - DAGHLIAN, Jacob, Lógica e Álgebra de Boole. –4a edição, Atlas, S. A . São Paulo, 1995.', 'A DEFINIR', ''),
(17, 0, 64, 'Conjuntos, Relações, funções, ordens parciais e totais, Indução matemática, recursão, Teoria de números, criptografia.', 'MATEMÁTICA DISCRETA', 1, 'GERSTING, Judith L., Fundamentos Matemáticos para a Ciência da Computação. 3a. edição, Editora LTC. - SCHEINERMAN, E. . MATEMATICA DISCRETA, THOMSON PIONEIRA, 2003.', 'ROSEN, K. Discrete Mathematics and its Applications. McGraw-Hill Science/Engineering/Math; 5th edition., 2002. - TREMBLEY and Manohar. Discrete Mathematical Structures with Applications to Computer Science. McGraw-Hill. - Ross and Wright. Discrete Mathematics. Prentice-Hall. - GRIMALDI. Discrete and Combinatorial Mathematics—An Applied Introduction. Addison-Wesley. - ALBERTSON and Hutchinson. Discrete Mathematics with Applications. John Wiley & Sons. - Kenneth, R. Exploring Discrete Mathematics With Maple, McGraw-Hill Science/Engineering/Math; 4th edition', 'A DEFINIR', ''),
(18, 32, 32, 'Visão geral dos sistemas multimídia. Autoria: plataformas para multimídia e ferramentas de desenvolvimento. Imagens: representação digital, dispositivos gráficos e processamento. Representação de figuras e animação. Vídeo: interfaces e processamento. Métodos de compactação de vídeo. Som: propriedades físicas, representação digital, processamento e síntese. Métodos de compactação de som. Ferramentas para geração de Hipertextos. Padrões HTML, XML, SMIL e VRML. Sistemas operacionais multimídia. Sistemas de comunicação multimídia. Sincronização. Aplicações multimídia.', 'MULTIMÍDIA', 1, '01.STEINMETZ, R. e NAHRSTEDT. Multimedia: Computing, Communications & Applications. Prentice Hall,1995.', 'FILHO, Paula; PADUA, Wilson .Multimidia Conceitos e Aplicações. LTC, 2000. - PINTO, Marcos José. Flash 4. São Paulo, 1999', 'A DEFINIR', ''),
(19, 0, 64, 'Modelos Lineares de Otimização. Programação Linear. Algoritmo Simplex. Dualidade. Análise de Sensibilidade. Modelos de Redes. Programação Inteira. Programação Dinâmica.', 'PESQUISA OPERACIONAL', 1, 'HILLIER, Frederick S. and LIEBERMAN, Gerald J. Introduction to Operations - Research. McGraw-Hill Science/Engineering/Math; 7th edition (March 22, 2002)', 'GOLDBARG, Marco Cesar e LUNA, Henrique Pacca L. Otimização Combinatória e Programação Linear: Modelos e Algoritmos. Editora Campus. Seg. Edição 2005. - B. S. Bazaraa. Linear programming and network Flows. J. Wiley, 1990. - MAHMUT PARLAR. Interactive Operations Research With Maple: Methods and Models. Birkhauser (August 2000). - WINSTON,Wayne L Operations Research Applications and Algorithms. Duxbury Press3 edition (January 13, 1997). - SILVA, Ermes et al., Pesquisa Operacional - Programação linear Simulação, Atlas, 1998 - BRONSON, R. Pesquisa Operacional, McGrawHill, 1985 - PRADO,D. Programação Linear, Ed. DG, 1999', 'A DEFINIR', ''),
(20, 32, 32, 'Lógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; expressões aritméticas e lógicas; estruturas de decisão; estruturas de controle; estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes; funções; recursão. Desenvolvimento de algoritmos. Transcrição de algoritmos para uma linguagem de programação. Domínio de uma linguagem de programação: sintaxe e semântica; estilo de codificação; ambiente de desenvolvimento. Desenvolvimento de pequenos programas.', 'PROGRAMAÇÃO DE COMPUTADORES I', 1, 'Cormen T. H. et al., Introduction to Algorithms, 2nd edition, MIT Press, 2001. - Manber, Udi., Introduction to Algorithms: A Creative Approach, Pearson Education, 1989. - Cormen T. H. et al., Algoritmos: Teoria e Prática, Tradução da 2a Edição Ed. Campus, 2002 - Forbellone, A.L.V. e Eberspacher, H.F., Lógica de Programação - A construção de algoritmos e estruturas de dados, 3a ed., Prentice Hall, São Paulo, 2005. - Manzano, José Augusto N. G. e Oliveira, J. F., Algoritmos – Lógica para Desenvolvimento de Programação de Computadores, Editora Érica, São Paulo, 2000. - Salvetti, D.D. e Barbosa, L.M., Algoritmos, Makron Books, São Paulo, 1998. - Saliba, W.L.C., Técnicas de Programação - Uma abordagem estruturada, Makron Books, São Paulo, 1993. - Farrer, H. e outros, Programação Estruturada de Computadores - Algoritmos Estruturados, 3a ed., LTC, RJ, 1989. - Tremblay, J.-P Bunt, R.B., Ciência dos Computadores - Uma Abordagem .e Algorítmica, McGraw-Hill do Brasil, São Paulo, 1983.', 'Cormen T. H. et al., Introduction to Algorithms, 2nd edition, MIT Press, 2001. Manber, Udi., Introduction to Algorithms: A Creative Approach, Pearson Education, 1989. - Cormen T. H. et al., Algoritmos: Teoria e Prática, Tradução da 2a Edição Ed. Campus, 2002 - Forbellone, A.L.V. e Eberspacher, H.F., Lógica de Programação - A construção de algoritmos e estruturas de dados, 3a ed., Prentice Hall, São Paulo, 2005. - Manzano, José Augusto N. G. e Oliveira, J. F., Algoritmos – Lógica para Desenvolvimento de Programação de Computadores, Editora Érica, São Paulo, 2000. - Salvetti, D.D. e Barbosa, L.M., Algoritmos, Makron Books, São Paulo, 1998. - Saliba, W.L.C., Técnicas de Programação - Uma abordagem estruturada, Makron Books, São Paulo, 1993. - Farrer, H. e outros, Programação Estruturada de Computadores - Algoritmos Estruturados, 3a ed., LTC, RJ, 1989. - Tremblay, J.-P Bunt, R.B., Ciência dos Computadores - Uma Abordagem. e Algorítmica, McGraw-Hill do Brasil, São Paulo, 1983', 'A DEFINIR', ''),
(21, 32, 32, 'Aprofundamento das técnicas de programação de computadores, especialmente quanto à implementação de programas em uma linguagem procedural e de alto nível. A implementação de programas deve ser feita utilizando uma ferramenta/ambiente de desenvolvimento que permita a edição, compilação, depuração dos códigos, empacotamento e distribuição. Interpretação de enunciados de problemas e a elaboração de soluções na forma de programas implementados em uma linguagem de alto nível. Elaboração de programas modularizados, criando funções e procedimentos, funções recursivas, e utilizando bibliotecas. Domínio de uma linguagem de programação procedural quanto à sintaxe, semântica, estilo, convenções, ferramenta/ambiente de desenvolvimento. Implementação de programas utilizando, de forma aprofundada, estruturas de dados homogêneas e heterogêneas, ponteiros e referências de memória, e manipulação de arquivos (streams).', 'PROGRAMAÇÃO DE COMPUTADORES II', 1, 'Cormen T. H. et al., Introduction to Algorithms, 2nd edition, MIT Press, 2001.', 'Cormen T. H. et al., Introduction to Algorithms, 2nd edition, MIT Press, 2001.', 'A DEFINIR', ''),
(22, 32, 32, 'Estudo do modelo de programação orientada a objetos, abordando abstração, encapsulamento, classes, métodos, objetos, herança, polimorfismo. Construção de aplicações orientadas a objeto envolvendo interfaces gráficas, manipulação de eventos, tratamento de exceções, uso de streams e tratamento de concorrência com threads. A implementação das aplicações deve ser feita utilizando ferramentas de desenvolvimento com testes de unidade, depuração e controle de versão. Introdução ao projeto orientado a objetos com noções de UML, padrões de projeto (design patterns) e arquitetura de software.', 'PROGRAMAÇÃO ORIENTADA A OBJETOS', 1, 'DEITEL, H. M. and Deitel, P J. Java Como Programar. 6a . edição. Pearson, 2006.', 'SANTOS, R., Introdução a Programação Orientada a Objetos com Java, Campus, 2003. - GAMMA E. et al. Design Patterns, Addison-Wesley, 1995. - TIMOTHY, B., An Introduction to Object-Oriented Programming. Addison Wesley, 1996', 'A DEFINIR', ''),
(23, 32, 32, 'Princípios de projeto de software. O contexto do design no Ciclo de Vida do Software. Processos de design: arquitetura e detalhamento. Arquitetura de software (definição, principais estruturas). Padrões macro-arquiteturais (estilos de arquitetura). Padrões micro-arquiteturais (padrões de projeto ou design patterns). Aspectos notáveis de design (concorrência, controle de eventos, distribuição, tratamento de exceções, tolerância a falhas, interface e persistência). Modelagem e notações para projeto estático (estrutura) e dinâmico (comportamento) de software. Métodos de projeto. Métricas e avaliação da qualidade de design de software. Considerações práticas: desenvolvimento e documentação de software design. Normas e padrões pertinentes.', 'PROJETO DE SOFTWARE', 1, '', '', 'A DEFINIR', ''),
(24, 16, 48, 'Estudo e compreensão dos princípios fundamentais de modelos de referência de redes de computadores. Estudo e compreensão dos princípios e protocolos da Camada de Aplicação, com ênfase no desenvolvimento de aplicações em rede e no estudo das principais aplicações da Internet. Estudo e compreensão dos fundamentos da Camada de Transporte, compreendendo protocolos de transferência confiável de dados, modelos de serviço com e sem conexão, controle de fluxo, e controle de congestionamento, além dos protocolos de transporte utilizados na Internet. Estudo e compreensão dos conceitos da Camada de Redes, seus modelos de arquitetura (datagramas e circuitos virtuais), protocolos de nível 3 da Internet, arquitetura de roteadores, protocolos de roteamento, broadcast e multicast, e configuração de redes.', 'REDES DE COMPUTADORES I', 1, 'KUROSE, J.F.; ROSS, K. – Redes de Computadores e a Internet, 3a. Edição. Pearson Education, 2005 - PETERSON, L.L.; DAVIE, B.S. – Redes de Computadores: Uma Abordagem de Sistemas, 3a. Edição. Campus-Elsevier, 2004. - TANENBAUM, A. S., Computer Networks, 4th Edition, Prentice Hall, 2006.', 'KUROSE, J.F.; ROSS, K. – Redes de Computadores e a Internet, 3a. Edição. Pearson Education, 2005 - PETERSON, L.L.; DAVIE, B.S. – Redes de Computadores: Uma Abordagem de Sistemas, 3a. Edição. Campus-Elsevier, 2004. - TANENBAUM, A. S., Computer Networks, 4th Edition, Prentice Hall, 2006.', 'A DEFINIR', ''),
(25, 16, 48, 'Compreender os conceitos e tecnologias da Camada de Enlace, incluindo protocolos ponto-a-ponto e redes de meio compartilhado, protocolos de acesso ao meio, redes locais, dispositivos de interconexão de redes (switches e hubs), e redes de alta velocidade. Estudar os conceitos da Camada Física e os princípios básicos de telecomunicações e transmissão de dados. Compreender os conceitos e tecnologias de Redes Sem Fio, incluindo redes de área local (WLAN), pessoal (WPAN) e de longa distância (WWAN), abordando também os princípios básicos de redes de telefonia celular e da convergência entre redes de telefonia móvel e redes sem fio de computadores. Estudar e praticar o uso dos conceitos fundamentais e protocolos de Gerenciamento de Redes, com ênfase no gerenciamento de redes baseadas na Internet. Entender os princípios e aplicações dos protocolos de Segurança em redes de computadores.', 'REDES DE COMPUTADORES II', 1, 'KUROSE, J.F.; ROSS, K. – Redes de Computadores e a Internet, 3a. Edição. Pearson Education, 2005 - PETERSON, L.L.; DAVIE, B.S. – Redes de Computadores: Uma Abordagem de Sistemas, 3a. Edição. Campus-Elsevier, 2004. - TANENBAUM, A. S., Computer Networks, 4th Edition, Prentice Hall, 2006.', 'KUROSE, J.F.; ROSS, K. – Redes de Computadores e a Internet, 3a. Edição. Pearson Education, 2005 - PETERSON, L.L.; DAVIE, B.S. – Redes de Computadores: Uma Abordagem de Sistemas, 3a. Edição. Campus-Elsevier, 2004. - TANENBAUM, A. S., Computer Networks, 4th Edition, Prentice Hall, 2006.', 'A DEFINIR', ''),
(26, 32, 0, 'Visão geral de segurança e auditoria de sistemas de informação (riscos, planos de contingência e outros). Autenticação, autorização, integridade e confidencialidade. Criptografia. Chave pública. Certificado digital. Assinatura digital. Protocolos. Prática (estudantes deverão ser expostos a código, bibliotecas e uso destes).', 'SEGURANÇA E AUDITORIA DE SISTEMAS', 1, 'ISO/IEC. Norma 17799 - Tecnologia da Informação – Código de Prática para Gestão da Segurança de Informações, 2000.', 'Foundations of Security: What Every Programmer Needs to Know, Neil Daswani et al., Apress, 2007. - SCHMIDT, Paulo; SANTOS, Jose Luiz dos; ARIMA, Carlos Hideo. Fundamentos de Auditoria de Sistemas Rio de Janeiro, Atlas , 2006.', 'A DEFINIR', ''),
(27, 16, 48, 'Introduzir os conceitos fundamentais de sistemas distribuídos, a caracterização de sistemas de computação distribuída, aplicações distribuídas (características e aspectos de projeto), objetivos básicos de sistemas distribuídos (transparência, abertura, escalabilidade etc). Estudar e dominar os princípios e aplicações dos principais modelos de sistemas distribuídos: sistemas cliente/servidor e sistemas multi-camadas; sistemas peer-to-peer. Compreender a teoria e prática de objetos distribuídos: interface x implementação; objetos remotos; chamadas de métodos remotos (RMI). Estudar e compreender algumas das principais tecnologias e padrões de middleware de processamento distribuído aberto, incluindo a caracterização de sistemas ODP; o uso de middleware como suporte para o desenvolvimento de aplicações em ambientes distribuídos abertos; exemplos de plataformas de middleware e seu uso. Estudar os princípios e uso dos principais serviç - Os de sistemas distribuídos: serviços de nomes; compartilhamento de documentos / recursos distribuídos (ex.: WWW e sistemas de trabalho cooperativo); segurança. Estudar os fundamentos de tolerância a falhas em sistemas distribuídos: comunicação confiável; replicação e manutenção de consistência entre réplicas; controle de concorrência e transações distribuídas; comunicação de grupo. Compreender as noções básicas de sistemas de multimídia distribuída: características da comunicação de dados multimídia, qualidade de serviço, gerenciamento de recursos, adaptação de fluxos de mídia. Estudar alguns tópicos avançados em Sistemas Distribuídos não contemplados na ementa.', 'SISTEMAS DISTRIBUÍDOS', 1, 'COULOURIS, G. F.; DOLLIMORE, J.; KINDBERG, T. - Sistemas Distribuídos: Conceitos e Projeto, 4a. Edição. Pearson Education, 2007.', 'TANENBAUM, A.S.; STEEN, M. – Sistemas Distribuídos: Princípios e Paradigmas, 2a. Edição. Pearson Education, 2007.', 'A DEFINIR', ''),
(28, 16, 48, 'Sistemas de gerenciamento de Banco de Dados (SGBD): arquitetura e aspectos operacionais; Organização de Dados e Estruturas de Armazenamento, algebra Relacional, Processamento de consultas; Controle de concorrência, Recuperação de falhas, Gerência de Implementação de SGBD. transações; Segurança. Estudos de Projeto e Implementação de SGBD.', 'SISTEMAS GERENCIADORES DE BANCO DE DADOS', 1, 'ELMASRI, NAVATHE. Sistemas de Banco de Dados - Fundamentos e Aplicações. Editora: 4a Edição. Addison-Wesley, 2005', 'CONNOLLY, BEGG, Database Systems, 3rd. Edition, Addison Wesley, 2002 - ELMASRI, Navathe, Fundamentals of Database Systems, 5/E. Editora: Addison Wesley Higher Education, 2006 - KORTH, SILBERSCHATZ, SUDARSHAN. Database System Concepts McGraw-Hill Science/Engineering/Math; 5 edition (May 17, 2005) - KORTH, SILBERSCHATZ, Sistemas de Banco de Dados, 5a. Edição, Campus, 2006 - DATE, C, J.Introdução a Sistemas de Banco de Dados. 8o Edição, Campus, 2005.', 'A DEFINIR', ''),
(29, 16, 48, 'Estudo das funções, tipos e estruturas de Sistemas Operacionais; Gerenciamento de processos e threads; Comunicação e Sincronização entre Processos; Programacao Concorrente; Gerenciamento de memória. Estudo de caso dos conceitos abordados.', 'SISTEMAS OPERACIONAIS I', 1, 'TANNENBAUM, Andrew S., Sistemas Operacionais Modernos, 2nd Edition, Prentice-Hall, 2003', 'SHAY, W., Sistemas Operacionais, Makron Books, 1996 - DAVIS, W. Sistemas Operacionais,: uma visão sistemática, Campus, 1991', 'A DEFINIR', ''),
(30, 16, 48, 'Gerenciamento de dispositivos; Sistemas de Arquivos; Segurança em Sistemas Operacionais; Sistemas operacionais distribuídos; Estudo de caso dos conceitos abordados.', 'SISTEMAS OPERACIONAIS II', 1, 'TANNENBAUM, Andrew S., Sistemas Operacionais Modernos, 2nd Edition, Prentice-Hall, 2003 - COULOURIS, Georges, Sistemas Distribuidos conceitos e Projetos, Bookman, 3a Edition, 2007 - SILBERSCHATZ, Avi & GALVIN, Peter. Sistemas Operacionais Conceitos. Prentice-Hall. 2005 - KIFER, Michael & SMOLKA, Scott: OSP: An environment for Operating Systems Projects, Addison-Wesley, 1991. - TANENBAUM, Andrew S., Distributed Operating Systems. Prentice-Hall International Editions, 1995', 'STALLINGS, William. Operating Systems. Prentice-Hall. 1995 - TANEMBAUM, Andrew S. & WOODHULL, Albert. Operating Systems Design and Implementation. Prentice-Hall 1997. - VAHALIA, Uresh, Unix Internals, Prentice Hall 1996.', 'A DEFINIR', ''),
(31, 0, 64, 'Noções de computabilidade efetiva. Modelos de computação. Problemas indecidíveis. Classes P, NP, NP-Completa e NP-Difícil. Algoritmos de Aproximação.', 'TEORIA DA COMPUTAÇÃO', 1, '', '', 'A DEFINIR', ''),
(32, 0, 64, 'Noções básicas de grafos. Representação de grafos. Distâncias. Coloração. Matching. Conjuntos independentes de vértices. Planaridade. Problemas do caminho mínimo. Problemas Eulerianos e Hamiltonianos. Fluxo em redes.', 'TEORIA DOS GRAFOS', 1, 'SZWARCFITER, J. L., Grafos e Algoritmos Computacionais, Editora Campus,1984.', 'YELENN, J, Gross, J. Graph Theory and Its Applications. CRC Press, 1998 - WEST, D. Introduction to Graph Theory, Prentice Hall, 2000 - GIBBONS, Alan - Algorithmic Graph Theory,Cambridge University Press, 1994.', 'A DEFINIR', ''),
(33, 0, 64, 'Tópico variável em computação segundo tendências atuais na área.', 'TÓPICOS I', 1, '--', '--', 'A DEFINIR', ''),
(34, 0, 64, 'Tópico variável em computação segundo tendências atuais na área.', 'TÓPICOS II', 1, '--', '--', 'A DEFINIR', ''),
(35, 32, 32, 'Conceitos básicos. Representações de grafos. Grafos dirigidos. Pesquisa em grafos. Árvores geradoras mínimas. Caminhos mínimos.', 'ALGORITMOS EM GRAFOS', 2, 'Bundle of Algorithms in Java, Parts 1-5: Fundamentals, Data Structures, Sorting, Searching, and Graph Algorithms, Robert Sedgewick, Addison-Wesley, 3rd edition, 2003', 'Dictionary of Algorithms and Data Structures. URL: http://www.nist.gov/dads/.', 'O estudante deve ser capaz de selecionar, implementar e fazer uso das estruturas de dados e algoritmos abordados.', ''),
(36, 32, 32, 'Princípios de análise de algoritmos. Estruturas de dados elementares. Tipos abstratos de dados. Recursão e árvores.', 'ALGORITMOS: FUNDAMENTOS E ESTRUTURAS DE DADOS', 2, 'Bundle of Algorithms in Java, Parts 1-5: Fundamentals, Data Structures, Sorting, Searching, and Graph Algorithms, Robert Sedgewick, Addison-Wesley, 3rd edition, 2003', 'Dictionary of Algorithms and Data Structures. URL: http://www.nist.gov/dads/.', 'O estudante deve ser capaz de selecionar, implementar e fazer uso das estruturas de dados abordadas.', ''),
(37, 32, 32, 'Métodos elementares e avançados de ordenação. Métodos elementares de pesquisa. Árvores de pesquisa. Hashing. Pesquisa externa.', 'ALGORITMOS: ORDENAÇÃO E BUSCA', 2, 'Bundle of Algorithms in Java, Parts 1-5: Fundamentals, Data Structures, Sorting, Searching, and Graph Algorithms, Robert Sedgewick, Addison-Wesley, 3rd edition, 2003; Introdução à Estruturas de Dados, Waldemar Celes e José Lucas Rangel, Ed. Campus, 2004; Projeto de Algorithmos, Nivio Ziviane, Ed. Cengage, 2010.', 'Algorithmos e Estruturas de Dados, Nicklaus Wirth, Ed. LTC, 1989; Estruturas de Dados com Algorithmos em C, Marcos Laureano, Ed. Brasport, 2000; Dictionary of Algorithms and Data Structures. URL: ', 'O estudante deve ser capaz de selecionar, implementar e fazer uso das estruturas de dados abordadas.', ''),
(38, 0, 64, 'Visão geral dos computadores modernos. Evolução da arquitetura dos computadores. Sistemas de numeração e aritmética binária. Memória e representação da dados e instruções. Processador, ciclo de instrução, formatos, endereçamento, e programação em linguagem de montagem. Dispositivos de entrada e saída. Sistemas de interconexão (barramentos). Interfaceamento e técnicas de entrada e saída. Hierarquia de memória. Paralelismo ao nível de instrução. Arquiteturas paralelas.', 'ARQUITETURA DE COMPUTADORES', 2, 'Computer Organization and Design: The Hardware/Software Interface, David A. Patterson and John L. - Hennessy, Morgan Kaufmann, 3rd edition, 2007', 'Arquitetura de Computadores Pessoais, Raul Fernando Weber, Sagra Luzzatto, 2a. edição, 2001.', 'Fornecer uma visão geral da organização de computadores.', ''),
(39, 32, 32, 'Definição de arquitetura de software. Importância e impacto em um software. Estilos arquiteturais (pipe-and-filter, camadas, transações, publish-subscribe, baseado em eventos, cliente-servidor, MVC e outros). Relação custo/benefício entre atributos e opções arquiteturais. Questões de hardware em projeto de software. Rastreabilidade de requisitos e arquitetura de software. Arquiteturas específicas de um domínio e linhas de produto. Notações arquiteturais (visões, representações, diagramas de componentes e outros). Reutilização.', 'ARQUITETURA DE SOFTWARE', 2, 'sential Software Architecture, Ian Gordon, Springer, 2006 (; Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives, Nick Rozanski and Eóin Woods, 2nd edition, Addison-Wesley, 2011 (). - Lea; eure: for Agile Software Development, James O. Coplien et al., Wiley, 2010 .', 'A Software Architecture Primer, John Reekie and Rohan McAdam, Angophora Press, 2006 ().  - Software Architecture in Practice, Len Bass et al., Addison-Wesley, 2003 (). - Patterns of Enterprise Application Architecture, Martin Fowler, Addison-Wesley, 2002 (). - Design and Use of Software Architecture: Adopting and Evolving a Product-Line Approach, Jan Bosch, Addison-Wesley, 2000; Architecting Enterprise Solutions: Patterns for High-Capability Internet-based Systems, Paul Dyson and Andrew Longshaw, Wiley, 2004; Pattern-Oriented Software Architecture Volume 1: A System of Patterns, Frank Buschmann et al., Wiley, 1996; Pattern-Oriented Software Architecture Volume 5: On Patterns and Pattern Languages, Frank Buschmann et al., Wiley, 2007; Handbook of Software Architecture, Grady Booch, (disponível na web); SOA in Practice: The Art of Distributed System Design, Nicolai M. Josuttis, O’Reilly, 2007; ', 'Desenvolver clara percepção de arquitetura de software, sua importância e implicações no sucesso ou não de um empreendimento de software. O estudante ainda deve adquirir habilidade para identificar modelos arquiteturais apropriados para problemas e habilidade para definir uma arquitetura de software para um dado cenário.', ''),
(40, 32, 32, 'Conceitos básicos. Componentes de sistemas de bancos de dados (database systems). Modelagem conceitual (ER e EER). Modelo relacional. Prática de modelagem de dados. Noções de álgebra e cálculo relacional. Mapeamento de esquema conceitual para esquema relacional. Linguagem SQL (extensiva apresentação e prática). Restrições de integridade. Dependências funcionais e formas normais. Transações. Visão geral de mineração de dados e Data Warehousing.', 'BANCO DE DADOS', 2, 'Beginning Database Design: From Novice to Professional, Clare Churcher, Apress, 2007', 'Fundamentals of Database Systems, Ramez Elmasri e Shamant B Navathe, Addison-Wesley, 5th - edition, 2007. - Database Systems: An Application-Oriented Approach, Introductory Version, Michael Kifer et al., - Addison-Wesley, 2nd edition, 2004. - Head First SQL: Your Brain on SQL - A Leaner’s Guide, Lynn Beighley, O’Reilly, 2007.', 'O estudante deverá ser capaz de modelar e implementar bases de dados a partir de uma especificação de requisitos. A implementação inclui a criação de bases de dados e a execução de consultas SQL em um SGBD real. Adicionalmente, o estudante deverá adquirir uma visão sólida de atomicidade, consistência, isolamento e durabilidade (conhecidas por ACID) para uma transação.', ''),
(41, 48, 16, 'Fundamentos de construção de software (minimizar complexidade, antecipar mudanças, construção para a verificação e padrões em construção de software). Gerência de construção (modelos de processos de construção, planejamento de construção, medidas de construção). Projeto detalhado e construção de software. Linguagens empregadas na construção de software. Codificação. Testes de unidade e de integração. Reutilização de software. Qualidade de código. Integração.', 'CONSTRUÇÃO DE SOFTWARE', 2, 'Code Complete: Um guia prático para a construção de software, Steve McConnell, Microsoft Press, 2nd Edition, 2004', 'Head First Software Development, Dan Pilone and Russ Miles, O’Reilly, 2008 - IEEE, Guide to the Software Engineering Body of Knowledge, 2004 Version', 'Dominar “boas” práticas de construção de software.', ''),
(42, 16, 48, 'Liveness. Safety. Semáforos. Locks. Threads. Deadlocks. Implementações de algoritmos concorrentes.', 'DESENVOLVIMENTO DE SOFTWARE CONCORRENTE', 2, 'Concurrent Programming in Java: Design Principles and Patterns, Douglas Lea, Addison-Wesley, 3rd edition, 2006; Pattern-Oriented Software Architecture Volume 2: Patterns for Concurrent and Networked Objects, Douglas Schmidt et al., Wiley, 2000; Pattern-Oriented Software Architecture Volume 3: Patterns for Resource Management, Michael Kircher, Wiley, 2004; ', 'Java Concurrency in Practice, Brian Goetz et al., Addison-Wesley, 2006 ', 'Expor o estudante a conceitos, desafios e ferramentas disponíveis para o desenvolvimento de software concorrente e à prática de tal atividade. ', ''),
(43, 48, 16, 'Noções de hardware de dispositivos móveis (celulares, PDAs e sensores). Ambientes, tecnologias e ferramentas para desenvolvimento de software para dispositivos móveis. Prática de desenvolvimento de uma aplicação para dispositivos móveis.', 'DESENVOLVIMENTO DE SOFTWARE PARA DISPOSITIVOS MÓVEIS', 2, 'Mobile Phone Programming and its Application to Wireless Networking, Frank H. P. Fitzek e Frank Reichert, Springer, 2007 (; g J2ME: From Novice to Professional, Sing Li and Jonathan Knudsen, APress, 3rd edition, 2005 (). Kic; ith MIDP and MSA: Creating Great Mobile Applications, Jonathan Knudsen, Prentice-Hall, 200.', 'crosoft® Mobile Development Handbook, Andy Wigley et al., Microsoft Press, 2007 ', 'Ambientar o estudante com recursos, restrições, ambientes, ferramentas e tecnologias pertinentes a dispositivos móveis, bem como o desenvolvimento de software para tais dispositivos.', ''),
(44, 16, 48, 'Tecnologias, técnicas, ferramentas e abordagens para o desenvolvimento de aplicações web.', 'DESENVOLVIMENTO DE SOFTWARE PARA WEB', 2, 'b Application Architecture: Principles, Protocols and Practice, Leon Shklar e Richard Rosen, Wiley, 2003 (;ng Web Programming with HTML, XHTML, and CSS, Jon Duckett, Wrox, 2nd edition, 2008 (). - Pro;Apache Tomcat 6, Viveck Chopra et al., Wrox, 2007.', 'ring in Action, Craig Walls and Ryan Breidenbach, Manning, 2007 (;g Spring 2 Enterprise Applications, Interface21 et al., Apress, 2007 (). - Mur; Servlets and JSP, Joel Murcah, Mike Murach & Associates, 2008 (). - Beginning; nd Tomcat Web Development: From Novice to Professional, Giulio Zambon and Michael Sekler, Apress, 2007 .', 'Exercitar o conhecimento da Engenharia de Software em aplicação que faz uso da web e, em consequência, exige o domínio de tecnologias pertinentes.', ''),
(45, 16, 48, 'Definição de persistência. Persistência empregando arquivos binários, documentos XML, objetos serializáveis, SGBDs. Tecnologias para persistência de informações. Persistência de objetos usando base relacional.', 'DESENVOLVIMENTO DE SOFTWARE PARA PERSISTÊNCIA', 2, 'Persistence in the Enterprise: A Guide to Persistence Technologies, Geoffrey Hambrick et al., IBM Press, 2008 (; g EJB 3 Application Development: From Novice to Professional, Raghu R. Kodali et al., Apress, 2006 (). - Pro; Persistence API, Mike Keith and Merrick Schincariol, Apress, 2006 ', 'Spring Persistence - A Running Start, Paul Fisher e Solomon Duskis, APress, 2009', 'Solidificar conceitos e habilidade de programação envolvendo persistência de informações.', ''),
(46, 64, 0, 'Definição de sistema, software e Engenharia de Software. Contexto social e de negócio da Engenharia de Software. Áreas do conhecimento da Engenharia de Software (requisitos, projeto de software e demais). Métodos de desenvolvimento de software. Ferramentas.', 'ENGENHARIA DE SOFTWARE', 2, 'Software Engineering: The Development Process, Richard H. Thayer and Mark J. Christensen, Wiley-IEEE Computer Society Press, 3rd edition, 2005 (; nia de Software, Ian Sommerville, 9a. edição, Pearson, 2011.  - Softw; rngineering: A Practitioner’s Approach, Roger S. Pressman, 7th international edition, McGraw-Hill, 2009', 'IEEE Computer Society Real-World Software problems: A Self-Study Guide for Today’s Software Professional, Wiley-IEEE Computer Society Press, 2006 (; the Software Engineering Body of Knowledge, IEEE Computer Society, 2004 (). - Eng; dSoftware- Teoria e Prática, James F. Peters and Witold Pedrycz, Ed. Campus, 2001.', 'Adquirir uma visão consistente e em profundidade da Engenharia de Software, o que inclui a compreensão das várias áreas do conhecimento pertinentes e as relações entre elas.', ''),
(47, 64, 0, 'Noções de ética. Código de ética para engenheiros de software. Visão geral de normas e padrões internacionais, leis e resoluções locais pertinentes à Engenharia de Software. Nomenclatura empregada pela área conforme a norma IEEE Std 12207-2008. Resolução de conflitos. Como se preparar para e se portar em reuniões. Aspectos higiênicos. Aspectos de apresentação pertinentes a trajes. Aspectos de conduta. Atitudes empreendedoras. Instrumentos do empreendedor (plano de negócios e outros). Técnicas de identificação de oportunidades e procedimentos para abertura de um negócio.', 'ÉTICA, NORMAS E POSTURA PROFISSIONAL', 2, 'Software Engineering Code of Ethics and Professional Practice, Version 5.2. Disponível em ABNT NBR ISO/IEC 12207:2009; O Segredo de Luísa, Fernando Dolabela, Cultura Editora Associados, 2002.', 'Padrões internacionais pertinentes à Engenharia de Software ().  - Tecnologia da Informação — Legislação Brasileira, Ministério da Ciência e Tecnologia, Secretaria de Política de Informática, 6a. Edição, 2008.', 'Elucidar ética, a importância para a sociedade e auxiliar o estudante a desenvolver um nível de consciência da sua própria postura. Este autoconhecimento deve ser suficiente para ativar agentes motivadores de mudanças. A disciplina deve estimular a habilidade empreendedora e fornecer noções de desafios de um negócio. Adicionalmente, a disciplina deve apresentar normas relevantes para o engenheiro de software com o propósito de esclarecer a função e o contexto onde podem ser empregadas (a aplicação será assunto de outras disciplinas no curso). Estabelecer a nomenclatura empregada pela área, conforme a norma internacional IEEE Std 12207-2008 é um dos principais objetivos da disciplina. À semelhança das normas, espera-se que o estudante adquira um nível de consciência acerca do que elas tratam.', ''),
(48, 32, 32, 'Conceituação e esclarecimento acerca de experimento controlado, estudos de caso e surveys. Processo de desenvolvimento de um projeto de pesquisa (inclui atividades, formulação de questões, construção de teoria e análise qualitativa/quantitativa de dados). Investigação de experimentos científicos em Engenharia de Software. Prática acompanhada de pequeno experimento em Engenharia de Software.', 'EXPERIMENTAÇÃO EM ENGENHARIA DE SOFTWARE', 2, 'Basics of Software Engineering Experimentation, Natalia Juristo e Ana M. Moreno, Springer, 2001', 'Experimentation in Software Engineering: An Introduction, Claes Wohlin et al., Kluwer Academic Publishers, 2000', 'Desenvolver a noção de experimento em Engenharia de Software e adquirir percepção de como pesquisas são conduzidas na área. Ambientar o estudante com as ferramentas necessárias (inclui processos e estatística) para o planejamento, condução e apresentação de relatórios de investigações empíricas em Engenharia de Software.', '');
INSERT INTO `disciplina` (`id`, `carga_horaria_pratica`, `carga_horaria_teorica`, `ementa`, `nome`, `curso_id`, `bibliografia_basica`, `bibliografia_complementar`, `objetivo_geral`, `codigo`) VALUES
(49, 32, 32, 'Conceitos e terminologia. Processos de gerência de configuração. Identificação de itens de configuração. Atributos a serem registrados para cada item de configuração. Armazenamento. Controle de mudanças. Relatórios de status. Controle de versões e linhas base ou de referência (baselines). Gerência de configuração segundo o MPS.BR. Papéis em gerência de configuração. Normas (IEEE 828). Princípios de gerência de configuração e relação com atividades de desenvolvimento de software. Gerência de configuração segundo desenvolvimento ágil, técnica de builds frequentes e desenvolvimento iterativo. Gerência de configuração para diferentes tipos de produtos (compostos, multiplataforma, múltiplas variantes, críticos, pequenos, médios e grandes). Gerência de configuração para desenvolvimento de software distribuído geograficamente, múltiplos interessados e desenvolvimento paralelo. Melhoria de gerência de configuração. Considerações práticas acerca de gerência de configuração de software. Ferramentas.', 'GERÊNCIA DE CONFIGURAÇÃO DE SOFTWARE', 2, 'Configuration Management Principles and Practice, The Agile Software Development Series, Anne Mette Jonassen Hass, Pearson Education, 2003 (; Configuration Management Patterns: Effective Teamwork, Practical Integration, Stephen P. Berczuk et al., Addison-Wesley, 2003 (). - The; er: Microsoft’s Software Configuration Management Best Practices, Vincent Maraya, Addison-Wesley, 200.', 'Software Configuration Management FAQ', 'Desenvolver habilidade na elaboração, implementação e prática de planos de gerência de configuração de software.', ''),
(50, 32, 32, 'Conceitos, terminologia e contexto de gerência de projetos. Ciclo de vida de produto e projeto. Interessados (stakeholders). Organização de empresas (funcionais, matriciais e baseadas em projetos). Estratégias para seleção de projetos. Processos de gerência de projetos. Gerência de escopo. Gerência de tempo (definição de atividades, sequenciamento de atividades, estimativa de recursos, estimativa de duração, desenvolvimento de cronograma e controle de cronograma). Gerência de custos (estimativas, orçamento e controle). Gerência de qualidade. Gerência de recursos humanos. Gerência de comunicação. Gerência de riscos. Gerência de aquisições. Gerência de integração (desenvolver carta de projeto, desenvolver escopo preliminar, desenvolver plano de gerência de projeto, dirigir e gerenciar a execução de projetos, monitorar e controlar atividades de projeto, controle de mudanças e fechamento do projeto). Estabelecer relações com o MPS. - BR. Gerência de aquisições deve ser observada da perspectiva do Guia de Aquisições de Software e Serviços Correlatos (MPS.BR). ', 'GERÊNCIA DE PROJETO DE SOFTWARE', 2, 'oject Management: A Systems Approach to Planning, Scheduling, and Controlling, Harold Kerzner, 10th edition, Wiley, 2009 (; t!: Your Guide to Modern, Pragmatic Project Management, Johanna Rothman, Pragmatic Bookshelf, 2007 ().  - Ag; Management with Scrum, Ken Schwaber, Microsoft Press, 2004.', 'Guide to the Project Management Body of Knowledge, 4th edition, 2008, ISBN 978-1933890517 (; Course: A Crash Course in Real-World Project Management, Rita Mulcahy, RMC Publications, 2006 ().  - Ag; ative Development: A Manager’s Guide, Craig Larman, Addison-Wesley, 2003 ().  - Agile Es; Planning, Mike Cohn, Prentice-Hall, 2005 (). - Agile Project M; Creating Innovative Products, Jim Highsmith, Addison-Wesley, 2009 (). - Software Estimation: ; g the Black Art, Steve McConnell, Microsoft Press, 2006 (). - The Mythical Man-Month: Ess; ware Engineering, Frederick P. Brooks, 2nd edition, Addison-Wesley, 1995', 'Desenvolver no estudante uma clara percepção das diferenças entre trabalhar em um projeto e gerenciar um projeto. Particularmente em relação à gerência, o estudante deve ser capaz de planejar, iniciar, planejar, executar, monitorar e concluir a gerência de pequenos projetos de software.', ''),
(51, 32, 32, 'Rever, exempliﬁcar o emprego da Engenharia de Software em abrangência e profundidade. Integrar todo o conhecimento das disciplinas do curso de tal forma a permitir a compreensão, a relação entre elas, a importância, os produtos e atividades pertinentes a cada uma delas.', 'INTEGRAÇÃO I', 2, '', '', 'Fornecer e elucidar uma visão coesa e integrada da Engenharia de Software de tal forma que o estudante desenvolva uma sólida percepção de como fazer uso do conhecimento desta área em toda a sua extensão.', ''),
(52, 16, 48, 'Definição de integração de aplicações. Desafios de integração. Abordagens de integração (transferência de arquivos, bases de dados compartilhadas, chamada de procedimento remoto e troca de mensagens). Padrões para integração de aplicações. ', 'INTEGRAÇÃO DE APLICAÇÕES', 2, 'terprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions, Gregor Hohpe and Bobby Woolf, Addison-Wesley, 2003 (;g Patterns: Foundations for Enterprise, Internet and Realtime Distributed Object Middleware, Markus Voelter et al., Wiley, 2004 (). - Pat;ted Software Architecture Volume 2: Patterns for Concurrent and Networked Objects, Douglas Schmidt et al., Wiley, 200.', 'Pattern-Oriented Software Architecture Volume 4: Pattern Language for Distributed Computing, Frank Buschmann et al., Wiley, 2007', 'Fornecer uma clara noção de integração de aplicações e das abordagens sugeridas para tratar os desafios bem como habilitar o estudante a desenvolver software para integrar aplicações.', ''),
(53, 32, 32, 'Princípios de projeto de interfaces homem-computador. Modos de uso e navegação. Projeto visual (cores, ícones, fontes e outros). Tempo de resposta e retro-alimentação. Elementos de interação (menus, formulários, manipulação direta e outros). Localização e internacionalização. Métodos de projeto de interação. Modelos conceituais e metáforas. Voz, linguagem natural, sons, páginas web. Dispositivos de interação. Heurísticas de avaliação de interfaces. Abordagens para testes realizados com apoio de usuários. Técnicas de testes para páginas web. Visão geral de ferramentas de desenvolvimento de interfaces homem-computador.', 'INTERAÇÃO HOMEM-COMPUTADOR', 2, 'Designing Interfaces: Patterns for Effective Interaction Design, Jenifer Tidwell, O’Reilly, 2005 ', '', 'Desenvolver a percepção da importância de um projeto de interação adequado e a compreensão necessária acerca de processo, projeto e avaliação de usabilidade de software.', ''),
(54, 32, 32, 'O conteúdo deve ser abordado mais em abrangência do que em profundidade. É imprescindível estabelecer uma clara relação entre as várias partes da ementa e apresentar a área como um todo coeso. Não contempla atividades que exercitam o conhecimento contido na ementa (emprego prático). É desejável que o docente apresente artefatos de projetos reais que ilustrem a teoria. Por artefatos reais entenda planos (por exemplo, plano de gerência de configuração), documentos (por exemplo, definição da arquitetura de software), código e outros oriundos de desenvolvimentos reais (sempre que possível). ', 'INTRODUÇÃO À ENGENHARIA DE SOFTWARE', 2, 'Engenharia de Software, Ian Sommerville, 9a. edição, Pearson, 2011; Software Engineering: A Practitioner’s Approach, Roger S. Pressman, 7th international edition, McGraw-Hill, 2009; ', 'Engenharia de Software, Kechi Hirama, Ed. Campus, 2011; The Algorithm Design Manual, Steven S. Skiena, 2nd edition, Spri - nger, 2008; The Art of Programming, N. Knuth, Ed. McGraw, 2002.', 'Despertar o interesse e adquirir visão abrangente acerca da Engenharia de Software e da Programação. ', ''),
(55, 32, 32, 'Lógica de programação. Constantes. Tipos de dados primitivos. Variáveis. Atribuição. Expressões aritméticas e lógicas. Estruturas de decisão. Estruturas de controle. Estruturas de dados homogêneas e heterogêneas. Vetores (arrays) e matrizes. Funções. Recursão. Desenvolvimento de algoritmos. Transcrição de algoritmos para uma linguagem de programação. Domínio de uma linguagem de programação: sintaxe e semântica. Estilos de codificação. Ambiente de desenvolvimento. Desenvolvimento de pequenos programas.', 'INTRODUÇÃO À PROGRAMAÇÃO', 2, 'Java™ Como Programar, H. M. Deitel e P. M. Deitel, 6a. edição, Pearson Prentice Hall, 2005; The Algorithm Design Manual, Steven S. Skiena, 2nd edition, Springer, 2008 ().; Introduction to Programming in Java: An Interdiciplinary Approach, Robert Sedgewick and Kevin Wayne, Addison-Wesley, 2007. ', 'Head First Java, Kathy Sierra and Bert Bates, O’Reilly Media, 2005;. Head First Programmin - g, Vern Ceder, O’Reilly, 2008; Dictionary of Algorithms and Data Structures. URL: ', 'Habilitar o estudante a definir algoritmos para pequenos problemas e implementá-los em uma linguagem de programação; Engenharia de Software- Teoria e Prática, James F. Peters and Witold Pedrycz, Ed. Campus, 2001. ', ''),
(56, 64, 0, 'Estudar, investigar, analisar e discutir projetos de software existentes e “vencedores”.', 'LEITURA DE SOFTWARE', 2, 'Code Reading: The Open Source Perspective, Diomidis Spinellis, Addison-Wesley, 2003', '', 'Familiarizar o estudante com o que é “bom” por meio do estudo de projetos de desenvolvimento de software (ou seja, com o correspondente código, documentação, dados, ferramentas, processos utilizados e outros elementos empregados no desenvolvimento). A ambientação deve auxiliar a reconhecer o que é “bom” e, adicionalmente, a exercitar o que possivelmente mais fará em sua vida profissional: ler código (talvez mais que escrever).', ''),
(57, 32, 32, 'Visão geral de linguagens de programação e de paradigmas de programação. Tradução de linguagens. Máquinas virtuais. Tipos. Estruturas de decisão e controle. Funções. Programação orientada a objetos.', 'LINGUAGENS DE PROGRAMAÇÃO', 2, 'Concepts of Programming Languages, Robert W. Sebesta, Addison-Wesley, 9th edition, 2009 (;n oncetps in Programming Languages, Franklyn A. Turbak and David K. Gifford, MIT Press, 2008. - Essent; of Programming Languages, Daniel P. Friedman and Mitchell Wand, The MIT Press, 3rd edition, 2000.', 'The Definitive ANTLR Reference: Building Domain-Specific Languages, Terence Parr, Pragmatic Bookshelf, 2007.', 'A principal interface de um computador empregada por quem desenvolve software é a linguagem de programação. O estudante deve reconhecer a relação entre linguagem e problema (nem toda linguagem se aplica a todo e qualquer problema). O estudante deve compreender as construções de linguagens de programação, os estilos empregados e mecanismos de tradução e execução adotados por linguagens de programação de tal forma que o habilite a “aprender” novas linguagens de programação.', ''),
(58, 32, 32, 'Lógica proposicional. Proposições e conectivos. Operações lógicas sobre proposições. Construção de tabelas-verdade. Tautologias, contradições e contingências. Implicação lógica. Equivalência lógica. Álgebra das proposições. Métodos para determinação da validade de fórmulas da lógica proposicional. Demonstração condicional e demonstração indireta. Lógica de predicados.', 'LÓGICA', 2, 'Iniciação à Lógica Matemática, Edgard de Alencar Filho, Editora Nobel, 2002; Lógica para Ciência da Computação, João Souza, Editora Campus, 2002. Introduction to Mathematical Logic, E. Mendelson, Academic Press, 2000.', 'Lógica e Álgebra de Boole, Jacob Daghlian, 4a. edição, Atlas, 1995.', 'Desenvolver o raciocínio analítico e a habilidade de elaborar sentenças logicamente precisas.', ''),
(59, 32, 32, 'Conceitos e terminologia. Categorias (tipos) de manutenção. Questões técnicas e gerenciais de manutenção. Estimativa de custo de manutenção. Métricas/medidas para manutenção. Processos e atividades de manutenção. Compreensão de programas. Reengenharia. Engenharia reversa. Norma IEEE Std 14764-2006. Refatoração. Transformação de programas.', 'MANUTENÇÃO DE SOFTWARE', 2, 'rking Effectively with Legacy Code, Michael Feathers, Prentice-Hall, 2004 (); Maintenance Management: Evaluation and Continuous Improvement, Alain April e Alain Abran, Wiley, 2008 ().  - R;ng Patterns, Joshua Kerievsky, Addison-Wesley, 200.', 'Refactoring: Improving the Design of Existing Code, Martin Fowler et al, Addison-Wesley, 1999', 'Oferecer uma abrangente visão de manutenção (evolução) de software e de questões correlatas, bem como estas questões são relacionadas a outras do ciclo de vida de um software.', ''),
(60, 0, 64, 'Técnicas de demonstração. Conjuntos. Combinatoria. Relações, relações de equivalência. Ordens parciais e totais. Funções. Indução matemática. Estruturas algébricas (princípios de números naturais, inteiros e racionais).', 'MATEMÁTICA DISCRETA', 2, 'Fundamentos Matemáticos para a Ciência da Computação, Judith L. Gersting, 5a. edição, Editora LTC, 2004', 'Matemática Discreta, E. Scheinerman, Thomson Pioneira, 2003. - Discrete Mathematics and its Applications, Kenneth Rose, McGraw-Hill, 6th edition, 2006 (aqui). - Student’s Solutions Guide to accompany Discrete Mathematics and Its Applications, Kenneth H. - Rosen, McGraw-Hill, 6th edition, 2006', 'A DEFINIR', ''),
(61, 64, 0, 'Técnicas de demonstração. Conjuntos. Combinatória. Relações, relações de equivalência. Ordens parciais e totais. Funções. Indução matemática. Estruturas algébricas (princípios de números naturais, inteiros e racionais).', 'MATEMÁTICA DISCRETA', 2, 'Fundamentos Matemáticos para a Ciência da Computação, Judith L. Gersting, 5a. edição, Editora LTC, 2004; Matemática Discreta, E. Scheinerman, Thomson Pioneira, 2003; Discrete Mathematics and its Applications, Kenneth Rose, McGraw-Hill, 6th edition, 2006.', 'Student’s Solutions Guide to accompany Discrete Mathematics and Its Applications, Kenneth H. Rosen, McGraw-Hill, 6th edition, 2006', 'Desenvolvimento do raciocínio abstrato e domínio de técnicas úteis à modelagem e construção de programas.', ''),
(62, 48, 16, 'Paradigma orientado a objetos (abstração, encapsulamento, classes, métodos, objetos, herança, polimorfismo, delegação e outros). Modelagem orientada a objetos usando UML. Noções de princípios de projeto orientado a objetos. Implementação de modelos. Método de desenvolvimento de software orientado a objetos. Visão detalhada de método ágil de desenvolvimento de software. Desenvolvimento de pequenas aplicações modeladas e implementadas de forma orientada a objetos seguindo um método ágil e o emprego de orientação a objetos.', 'MÉTODO DE DESENVOLVIMENTO DE SOFTWARE', 2, 'Head First Software Development, Dan Pilone and Russ Miles, O’Reilly, 2008', 'Head First Object-Oriented Analysis & Design, Brett D. McLaughlin et al., O’Reilly, 2006. - Object-Oriented Analysis and Design with Applications, Grady Booch et al., 3rd edition, Addison-Wesley, 2007. - OOP Demystified, James Keogh and Mario Giannini, McGraw-Hill, 2004. - Object Thinking, David West, Microsoft Press, 2004. - Object-Oriented Thought Process, Matt Weisfeld, Sams, 2nd edition, 2003. - UML Distilled: A Brief Guide to the Standard Object Modeling Language, Martin Fowler, 3rd edition, Addison-Wesley, 2003. - UML Demystified, Paul Kimmel, McGraw-Hill, 2005.', 'Fornecer visão horizontal e ampla de processos técnicos de desenvolvimento de software orientado a objetos de forma prática, com ênfase na construção de software. Esta visão deve ser suficiente para servir de base para disciplinas posteriores acerca de atividades de desenvolvimento de software.', ''),
(63, 32, 32, 'Métodos heurísticos, formais e de construção de protótipos. Ferramentas para auxiliar na produção de requisitos, projeto, construção, testes e manutenção. Ferramentas de gerência de configuração, gerência de projeto, processo de software, qualidade e outras.', 'MÉTODOS E FERRAMENTAS DE SOFTWARE', 2, 'Software Engineering Methods and Technologies, Alfonso Fuggetta e Laura Stardini, publicado em - Software Engineering Volume 2: The Supporting Process, R. H. Thayer e M. Dorfman editors, 3rd - edition, 2005. Disponível em http://alfonsofuggetta.org.', 'Guide to the Software Engineering Body of Knowledge, IEEE Computer Society, 2004. Disponível em http://swebok.org.', 'Habilitar o estudante a reconhecer métodos e ferramentas relevantes para a produção de software.', ''),
(66, 32, 32, 'Conceitos e terminologia. Infraestrutura de processos (pessoas, ferramentas, treinamentos e outros). Modelagem e especificação de processos de software. Medição e análise de processos de software. Melhoria de processos de software (individual e equipe). Análise e controle de qualidade (prevenção de defeitos, revisão de processos, métricas de qualidade, análise de causa e outros). Níveis de definição de processos. Modelos de ciclo de vida (ágil, processos “pesados”, cascata, espiral, modelo V e outros). Modelos de processos e padrões (IEEE, ISO e outros). Modelo, definição, medida, análise e melhoria tanto de processo de software individual quanto de equipe. Personalização de processo. Requisitos para processos de software (ISO/IEEE 12207). Detalhada apresentação do MSP.BR (guias). Implementação do MPS.BR. Noções de governância de TI.', 'PROCESSO DE SOFTWARE', 2, 'Software Engineering: The Supporting Processes, Richard H. Thayer and Merlin Dorfman, Wiley-IEEE - Computer Society Press, 3rd edition, 2005. - Software Engineering: The Development process, Richard H. Thayer and Mark J. Christensen, Wiley- - IEEE Computer Society Press, 3rd edition, 2005.', 'Agile Software Development, Alistair Cockburn, Addison-Wesley, 2001. - Agile Software Development with SCRUM, Ken Schwaber and Mike Beedle, Prentice-Hall, 2001. - Guia de Aquisição de Software e Serviços Correlatos, Softex, 2007. - Guia Geral do MPS.BR, Softex, 2007. - Guias de Implementação do MPS.BR, Softex, 2007.', 'Desenvolver sólida percepção da importância, impacto, constituição, definição e melhoria de processos.', ''),
(67, 32, 32, 'Definição de projeto. Questões fundamentais (persistência dos dados, exceções e outras). Contexto de projeto em vários modelos de desenvolvimento de software (ciclos de vida). Princípios de projeto (encapsulamento de informações, coesão e acoplamento). Interação entre projeto e requisitos. Atributos qualitativos em um projeto (confiabilidade, usabilidade, manutenibilidade, testabilidade, desempenho, segurança, tolerância a falhas e outros). Compromissos (custo-benefício). Relação entre arquitetura de software e projeto de software. Projeto orientado a objetos. Projeto funcional. Noção de projeto baseado em estrutura de dados e projeto orientado a aspectos. Projeto orientado por responsabilidade. Projeto por contratos. Métodos de projeto de software. Padrões de projeto. Reutilização. Projeto de componentes. Projeto de interfaces entre componentes e sistemas. Notações de projeto. Ferramentas de suporte a projeto (análise estática, ava - liação dinâmica e outras). Medidas de atributos de projeto (acoplamento, coesão e outras). Métricas de projeto (principais métricas, interpretação).', 'PROJETO DETALHADO DE SOFTWARE', 2, 'Software Design, David Budgen, 2nd ediciton, Addison-Wesley, 2003', 'Head First Design Patterns, Elisabeth Freeman et al., O’Reilly Media, 2004. - Release It!: Design and Deploy Production-Ready Software, Michael Nygard, Pragmatic Bookshelf, 2007. - Pattern Oriented Software Architecture Volume 1: A System of Patterns, Frank Buschmann et al., Wiley, 1996. - Pattern Languages of Program Design 5, Dragos Manolescu et al., Addison-Wesley, 2006. - Domain-Driven Design: Tackling Complexity in the Heart of Software, Eric Evans, Addison-Wesley, 2003.', 'Desenvolver sólida percepção acerca de implicações de decisões de projeto e de estratégias para obtê-las, bem como habilidade na confecção de modelos de projeto para problemas reais.', ''),
(68, 32, 32, 'Definições e terminologia de qualidade de software. Custos e impactos de baixa qualidade. Custo de um modelo de qualidade. Terminologia para características de qualidade de software (ISO 9126-1). Papel de pessoas, processos, métodos, ferramentas e tecnologias em qualidade. Padrões de qualidade (ISO 9001, ISO 9003-04, IEEE Std 1028-2008, IEEE Std 1465-2004, IEEE Std 12207-2008, ITIL). Revisões, auditoria e inspeções. Modelos e métricas de qualidade de software. Aspectos relacionados a qualidade de modelos de processos de software. Visão geral do CMMI. MPS.BR. Planejamento de qualidade. Garantia da qualidade. Análise de causa e prevenção de defeitos. Avaliação de atributos de qualidade. Métricas e medidas de qualidade de software. Desenvolver planos de qualidade de software em conformidade com o padrão IEEE Std 730-2002.', 'QUALIDADE DE SOFTWARE', 2, 'Metrics and Models in Software Quality Engineering, Stephen H. Kan, 2nd Edition, Addison-Wesley, 2002 (); - Quality Assurance: From Theory to Implementation, Daniel Galin, Addison-Wesley, 2004 (). - Qualidade de Software, José Carlos Maldonado, Ana Regina C. Rocha e Kival C. Weber, Ed. Makron, 2001. ', 'Qualidade de Software, André Kosciansk e Michel dos Santos Soares, Ed. Novatec, 2007.', 'Desenvolver percepção clara de qualidade aplicada a produto, projeto ou processo de software. Quanto a produto, não apenas o produto final, mas também artefatos intermediários (entregáveis ou não). Cabe a esta disciplina apresentar uma visão integral de qualidade, visto que disciplinas abordam o tema “isoladamente”. O estudante deve compreender conceitos de qualidade e reconhecer que requisitos definem características de qualidade de um software e influenciam critérios para a validação destas características.', ''),
(69, 32, 32, 'Modelos de referência em redes: camadas, protocolos e serviços. Camada de rede. Camada de transporte. Camada de aplicação. Programação com sockets. Caracterização de sistemas distribuídos. Arquitetura de Aplicações distribuídas. Sistemas de objetos distribuídos. Serviços de nomes. Comunicação assíncrona. Arquiteturas orientadas a serviços.', 'REDES E SISTEMAS DISTRIBUIDOS', 2, 'Kurose, James F. and Ross, Keith W., Computer Networking: A Top-Down Approach, 5th edition, Addison-Wesley, 2009; Coulouris, G. F. et al., Distributed Systems: Concepts and Design, 4th edition, Addison-Wesley, 2005; Tanenbaum, Andrew S., Computer Networks, 4th edition, Prentice-Hall, 2002. ', 'Stallings, William, Data and Computer Communications, 8th edition, Prentice-Hall, 2006; Tanenbaum, A. S. and M. van Steen, Distributed Systems: Principles and Paradigms, 2nd edition, Prentice-Hall, 2006; Dantas, Mário, Redes de Comunicação e Computadores: Abordagem Quantitati - va, Visual Books, 2009.', 'Ambientar o estudante com questões pertinentes ao de desenvolvimento de sistemas distribuídos e com a prática correspondente.', ''),
(70, 32, 32, 'Definição de requisitos (produto, projeto, processo). Processo de requisitos. Níveis de requisitos (necessidades, objetivos, requisitos dos usuários, requisitos de sistema, requisitos de software. Características de requisitos (testáveis, verificáveis e outras). Princípios de modelagem como decomposição e abstração. Pré e pós condições. Invariantes. Visão geral de modelos matemáticos e linguagens formais de especificação. Interpretação de modelos (sintaxe e semântica). Modelagem de: informações; fluxo de dados; comportamento; estrutura (arquitetura); domínio; processos de negócios e funcional. Padrões de análise. Fundamentos (completitude, consistência, robustez, análise estática, simulação, verificação de modelos, segurança, safety, usabilidade, desempenho, análise de causa/efeito, priorização, análise de impacto e rastreabilidade). Gerência de requisitos. Interação entre requisitos e arquitetura. Fontes e técnicas - de elicitação. Documentação de requisitos (normas, tipos, audiência, estrutura, qualidade). Especificação de requisitos. Revisões e inspeções.', 'REQUISITO DE SOFTWARE', 2, 'Software Requirements, Karl E. Wiegers, Microsoft Press, 2nd edition, 2003', 'More About Software Requirements: Thorny Issues and Practical Advice, Karl E. Wiegers, Microsoft Press, 2006. - Software Requirements Patterns, Stephen Withall, Microsoft Press, 2007. - Writing Effective Use Cases, Alistair Cockburn, Addison-Wesley, 2000. - User Stories Applied: For Agile Software Development, Mike Cohn, Addison-Wesley, 2004', 'Habilitar o estudante a elaborar e manter especificações de requisitos de software em conformidade com necessidades de diferentes tipos de projetos e restrições.', ''),
(71, 32, 32, 'Ameaças. Segurança como atributo qualitativo de projeto de software. Autenticação. Autorização. Integridade. Confidencialidade. Criptografia (chaves simétricas e assimétricas). Infraestrutura de chaves públicas brasileiras (ICP-Brasil). Certificados digitais. Assinaturas digitais. Fraquezas decorrentes de problemas na implementação e/ou arquitetura de um software. Desenvolvimento de software seguro. Noções de auditoria de sistemas. Norma NBR 27002.', 'SEGURANÇA', 2, 'Foundations of Security: What Every Programmer Needs to Know, Neil Daswani et al., Apress, 2007', 'Software Security: Building Security In, Gary McGraw, Addison-Wesley, 2006 - 19 Deadly Sins of Software Security, Michael Howard et al., McGraw-Hill, 2005 - Beginning Cryptography with Java, David Hook, Wrox, 2005', 'Desenvolver percepção clara de política de segurança e de problemas de projeto e implementação pertinentes a software seguro, além de estratégias para evitá-los, suficiente para o desenvolvimento de software no qual se pode confiar.', ''),
(72, 32, 32, 'Conceitos de Hardware e Software. Tipos de sistemas operacionais. Sistemas multiprogramáveis. Estrutura/organização de sistemas operacionais. Processo. Comunicação entre processos. Gerência de processos. Gerência de memória. Gerência de dispositivos. Sistemas de arquivos. Segurança. Estudos de casos de sistemas operacionais atuais.', 'SISTEMA OPERACIONAL', 2, 'anembaum, Andrew S., Sistemas Operacionais Modernos, Prentice-Hall Brasil, 3a. Edição, 2010; Silberschatz, A. et al., Operating Systems Concepts with Java, 8th edition, Wiley, 2009; Deitel, H. M. e Choffnes, Sistemas Operacionais, Prentice-Hall, 2005.', 'rissimi, Alexandre, Toscani, Simão e Oliveira, Romulo, S., Sistemas Operacionais, Ed. Bookman, 2010; ', 'Oferecer sólida noção de funções, serviços e compromissos de um sistema operacional, bem como familiaridade com opções adotadas por sistemas operacionais mais comuns.', ''),
(73, 32, 32, 'Métodos de programação avançados para programação em dispositivos móveis: otimização de código, comunicação de redes com economia de dados e de tempo. Integração com sistemas back-end: criação de APIs, consumo de dados de redes sociais, integração com sistemas REST. Automação com dispositivos móveis: entrada e saída de dados, leitura de pacotes de redes sem-fio, open-hardware', 'TÓPICOS DE ENGENHARIA DE SOFTWARE', 2, '--', '--', 'Manter o estudante ciente de assuntos relevantes em Engenharia de Software não cobertos no curso ou fortalecer a formação do perfil do egresso em assunto de uma ou mais disciplinas. Por exemplo, sistemas críticos, tolerância a falhas, especificação formal, sistemas de tempo real e programação funcional, dentre outros, são assuntos candidatos (não cobertos por disciplinas). Adicionalmente, pode-se trabalhar conteúdo coberto por uma ou mais disciplinas. A decisão cabe à coordenação do curso, assistida - tanto pelos estudantes quanto professores.', ''),
(74, 32, 32, 'Objetivos e restrições de V&V (Verificação e Validação). Planejamento de V&V. Documentação de estratégias de V&V, testes e outros artefatos. Medidas e Métricas. Análise estática de código. Atividades de V&V ao longo do ciclo de vida de um produto. Revisão de software. Testes de unidade. Análise de cobertura. Técnicas de teste funcional (caixa preta). Testes de integração. Desenvolvimento de casos de teste baseados em casos de uso e estórias de usuários. Testes de sistema. Testes de aceitação. Testes de atributos de qualidade. Testes de regressão. Ferramentas de teste (combinação com ferramentas de integração contínua). Análise de relatórios de falha. Técnicas para isolamento e falhas (depuração). Análise de defeitos. Acompanhamento de problemas (tracking). IEEE Std 1012-2004.', 'VERIFICAÇÃO E VALIDAÇÃO DE SOFTWARE', 2, 'nit Test Patterns: Refactoring Test Code, Gerard Meszaros, Addison-Wesley, 2007 ().  - Software Verification and Validation for Practitioners and Managers, Steven R. Rakitin, Artech House, 2nd edition, 2001 (). Tes; lise de Software: Processos, princípios e técnicas, Mauro Pezzè e Michal Young, Bookman, 2008 (). - JUnit R; Pctical Methods for Programmer Testing, J. B. Rainsberger, Manning, 2004', 'Software Verification and Validation, Marcus F. Fisher, Ed. Springer Verlay NY, 2006; Software Verification and Analysis, Willian Stanley, Ed. Springer Verlay NY, 2009', 'Oferecer experiências sólidas em Validação e Verificação de Software. Técnicas de Teste de Software, bem como preparar e planejar projetos de testes e validação de software e revisão de software.', ''),
(75, 32, 32, 'Escopo da Engenharia Econômica. Fornecimento, demanda e produção. Lucro produzido por capital (interest). Análise custo-benefício. Análise breakeven. Retorno de investimento. Avaliação de alternativas. Economia aplicada ao desenvolvimento de software.', 'ENGENHARIA ECONÔMICA PRA SOFTWARE', 2, 'Engineering Economy, Willian G. Sullivan et al., 14th edition, Prentice-Hall, 2008', 'Não existe sugestão realizada no PPC', 'Fornecer noções de engenharia econômica e outras questões econômicas aplicadas a software.', ''),
(76, 32, 32, 'Modelos de negócio para software (aluguel, serviço, open source). Leis, normas, impostos e legislação brasileira para o mercado local e para a exportação de software. Programas de incentivo à exportação de software. Fontes de recursos nacionais e internacionais para a produção de software. Características e exigências do mercado interno e externo. Identiﬁcação de oportunidades de inovação em software. Planos de negócio de software para o mercado nacional e global.', 'MERCADO DE SOFTWARE', 2, 'NSA', 'NSA', 'Capacitar o estudante a “ler” o contexto corrente de software do mercado interno e global, suas tendências, características, exigências e noção do esforço necessário para satisfazê-lo.', ''),
(77, 32, 32, 'Rever, exempliﬁcar o emprego da Engenharia de Software em abrangência e profundidade. Integrar todo o conhecimento das disciplinas do curso de tal forma a permitir a compreensão, a relação entre elas, a importância, os produtos e atividades pertinentes a cada uma delas.', 'INTEGRAÇÃO II', 2, 'NSA', 'NSA', 'Fornecer e elucidar uma visão coesa e integrada da Engenharia de Software de tal forma que o estudante desenvolva uma sólida percepção de como fazer uso do conhecimento desta área em toda a sua extensão.', ''),
(78, 32, 32, 'Não atribuida', 'PRÁTICA EM ENGENHARIA DE SOFTWARE', 2, 'nao foi atribuida no PPC', 'nao foi atribuida no PPC', 'Desenvolver habilidades do estudante em desenvolvimento de software em ambiente tão próximo do real quanto possível, no contexto de uma Fábrica de Software.', ''),
(79, 32, 32, 'Observação, análise, investigação e prática de técnicas e soluções avançadas de desenvolvimento de software.', 'TÉCNICAS AVANÇADAS EM CONSTRUÇÃO DE SOFTWARE', 2, '1 . Beautiful Code: Leading Programmers Explain How They Think, Andy Oram e Greg Wilson, O’Reilly Media, 2007.', '1 . Why Programs Fail: A Guide to Systematic Debugging, Andreas Zeller, Morgan Kauffman, 2005  - 2 . • Programming Challenges, Steve S. Skiena e Miguel Revilla, Springer, 2003', 'Solidificar a habilidade de programação do estudante por meio de técnicas avançadas de programação. ', ''),
(80, 32, 32, 'Conceitos básicos de um sistema de armazenamento de dados e mecanismos de recuperação dos dados sob a visão de repositório, banco de dados e visões.', 'BANCO DE DADOS', 3, 'ELMASRI, R. E.; NAVATHE, S. B. Sistemas de banco de dados. 4a edição. São Paulo: Addison Wesley, 2005.', 'KORTH, H.F.; SILBERXHATZ A.; SUDARXHAN.S. Sistema de banco de dados. 5a Ed. São Paulo:  Campus,  2006.', 'A DEFINIR', '0'),
(81, 32, 32, 'Introdução à Estatística. Estatística Descritiva. Probabilidade. Variáveis Aleatórias. Testes de Hipóteses. Testes de Qui-quadrado. Regressão e Correlação. Aplicações a redes sociais e redes de informações.', 'ESTATÍSTICA APLICADA À INFORMAÇÃO', 3, 'SPIEGEL, Murray R.; STEPHENS, Larry J. Estatística. 4.ed.  Porto Alegre: Bookman, 2008.Coleção Schaum', 'BUSSAB, Wilton de Oliveira; MORETTIN, Pedro Alberto. Estatística Básica. Curitiba: Saraiva, 2008.', '', '8117'),
(82, 32, 32, 'Estudo de estruturas de dados básicas, seus conceitos e operações. Estudo de Listas Lineares, compreensão de seu uso como Pilhas e Filas e de implementações usando vetores, listas lineares encadeadas, listas duplamente encadeadas, listas circulares e listas com descritores. Estudo dos conceitos de Árvores Binárias, dos algoritmos de caminhamentos e da sua aplicação como fila de prioridade. Estudo de Árvores de Pesquisa: árvores binárias balanceadas, árvore B. Estudo de Tabelas de Dispersão.\n', 'ESTRUTURAS DE DADOS', 3, 'SZWARCFITER, Jayme. MARNENZON, Lilian. Estruturas de Dados e Seus Algoritmos. LTC, 1994.\nZIVIANI, Nivio. Projeto de Algoritmos com implementações em Java e C++. Thompson, 2006.\nPREISS, Bruno R. Estruturas de Dados e Algoritmos – Padrões de Projetos Orientados a Objetos com Java. Campus, 2000.\n', 'DROZDEK, Adam. Estrutura de Dados e Algoritmos em C++. Thompson, 2002.\nCELES, Waldemar; CERQUEIRA, Renato; RANGEL, José Lucas. Introdução a Estruturas de Dados com Técnicas de Programação em C. Campus, 2004\nFEOFILOFF, Paulo. Algoritmos em Linguagem C. Campus, 2008.\n', '\\N', '\\N'),
(83, 32, 32, 'Definição de Gerenciamento de Projetos. O Ciclo de Vida de um Projeto. As Fases do Ciclo de Vida do Projeto. Desempenho, Custo e Tempo em Projetos. Principais Áreas do Gerenciamento de Projetos. Preparando a Organização para Projetos. O Gerente de Projetos e suas Interfaces. Fluxograma do Projeto. Ferramentas Computacionais de Gerenciamento de Projetos.', 'GERENCIA DE PROJETOS I', 3, 'MULCAHY, Rita. PM Crash Course: A Crash Course in Real-World Project Management, RMC Publications, 2006.\nLARMAN, Craig. Agile and Iterative Development: A Manager’s Guide, Addison-Wesley, 2003.\nROTHMAN, Johanna. Manage It!: Your Guide to Modern, Pragmatic Project Management, Pragmatic Bookshelf, 2007.\n', 'NEILL, C. J; LAPLANTE, P. A. Requirements Engineering for Software and Systems. Auerbach Publications, 2009.\nFAIRLEY, R. E. Managing and Leading SFAIRLEY, R. E. Managing and Leading Software Projects. Wiley- IEEE Computer Society Press, 2009.', '\\N', '0'),
(84, 64, 0, 'Uso de ferramentas de planejamento e acompanhamento de projetos; Prática da Gerência: motivação de equipes e a gestão de pessoas. Prática da Gerência: estilos de gerência princípios de negociação e tratamento de conflitos no projeto; administração do tempo e reuniões; Gerência por processos.', 'GERÊNCIA DE PROJETOS II', 3, 'HELDMAN, Kim. Gerência de Projetos: Fundamentos São Paulo:  Campus, 2005', 'QUADROS, Márcio. Gerência de Projetos de Software: Técnicas e Ferramentas. Florianópolis: Editora Visual Books. 2002', '\\N', '0'),
(85, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.', 'INTRODUÇÃO A COMPUTAÇÃO', 3, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(86, 0, 64, 'Números Inteiros. Conjuntos. Relações e Funções. Técnicas de demonstração. Recursão e Relação de Recorrência. Matrizes. Sistema de equações lineares. Grafos e aplicações a redes sociais e redes de informações.', 'MATEMÁTICA DISCRETA', 3, 'SCHEINERMAN, E.R. Matemática discreta: uma introdução. São Paulo: Thomson Learning Ltda, 2003.', 'GERSTING, J.L. Fundamentos matemáticos para a Ciência da Computação. Rio de Janeiro: LTC, 2001.', '\\N', '8116'),
(87, 32, 32, 'Conceituação de computador, informática e software. Histórico da computação. Noções básicas de arquitetura e organização de computadores; unidade central de processamento; memória; conjunto de instruções; execução de instruções; dispositivos de entrada/saída; comunicação com periféricos (fluxo de dados); Armazenamento (disco rígido, CD-ROM, DVD e outros) e representação de dados; sistemas de arquivos; sistemas de numeração; aritmética binária, hexadecimal e decimal; representação de números em ponto fixo e ponto flutuante; representação de caracteres, conceitos de álgebra booleana. Software básico; sistemas operacionais e sistemas gerenciadores de bancos de dados. Conceitos de sistemas; administração da informação; categorização dos sistemas quanto à função, serviços; formas de comercialização, instalação e uso. Noções de software: evolução de linguagens de programação, compiladores e interpretadores, desenvolvimento (análise e projeto), ética, segurança, emprego (e as conseqüências decorrentes), riscos e tecnologias emergentes. Aplicativos: processadores de texto, planilhas de cálculo, editores gráficos e de apresentações. Comunicação de dados. Multimídia e realidade virtual. Redes de computadores; Internet (organização e serviços); correio eletrônico; navegadores (browsers); busca na Internet; servidores WWW, serviços Web, páginas HTML, aplicações em n-camadas.', 'PROGRAMAÇÃO DE COMPUTADORES', 3, 'MARÇULA, M., FILHO, P. A. B. “Informática , Conceitos e Aplicações”. 1a edição. Editora Érica, 2005.\nBROOKSHEAR, J. G.,”Ciência da Computação: Uma Visão Abrangente”. 7a edição. Bookman, 2005.', 'FEDELI, R. D., POLLONI, E. G. F., PERES, F. E.  Introdução à Ciência da Computação . Thomsom Learning, 2003.\nVELLOSO, F. de C. “Informática Conceitos Básicos”. 6a edição. Editora Campus, 2003\nMEYER, M. et al.  Nosso Futuro e o Computador . 3a edição. Bookman, 2000.\nBOGHI, C., SHITSUKA, R.  Sistemas de Informação: Um Enfoque Dinâmico . São Paulo. Editora Érica, 2002.\nELMASRI, R. NAVATHE, S. B.  Sistemas de Banco de Dados . LTC, 2002.\nLAUDON, K e LAUDON, J. “Management Information Systems”. 6a edição. Prentice Hall,1999.\nLOUKIDES, M. ORAM, A.  Programando com Ferramentas GNU”. Conectiva OReilly, 2000.\nMASIERO, P C.  Ética em Computação . Editora Edusp, 2000.\nOLIVEIRA, D. P. R.  Sistemas de Informações Gerenciais: Estratégicas, Táticas, Operacionais . São Paulo: Atlas, 2004.\nPAIXÃO, R. R., HONDA, R.  Processadores Intel . Editora Érica, 1999.\nPFAFFENBERGER, B.  Computers in Your Future 2003 . Prentice Hall, 2003.\nPOLLONI, E. G.  Sistemas de Informação - Estudo de Viabilidade . Editora Futura, 2001.\nTANENBAUM, A. S.  Sistemas Operacionais Modernos . São Paulo: Prentice-Hall, 2003.\nVAUGHAN, T.  Multimídia na Prática . Makron Books, 1994.\nWHITE, R.  Como Funciona o Computador . 4a edição. Editora Quark, 1993.', '\\N', '8114'),
(88, 64, 0, 'Introdução às tecnologias para desenvolvimento de sistemas para Web.', 'PROGRAMAÇÃO PARA WEB', 3, 'BALDERSON, Joseph, ENT, PETER; HEIDER, Jun; PREKASKI, Todd. Professional Adobe Flex 3: Wrox Programmer to Programmer. Bookman, 2009.\nADOBE Systems, Flex 2 Developer’s Guide. S.Paulo: Elsevier, 2006.', 'HORSTMANN, Cay S.; CORNELL, Gary. Adobe Flex 3: Fundamentos - Vol. 1. 7 ed. Rio de Janeiro: Alta Books, 2006.\nBARNES, David J.; KOLLING, Michael. Flex 3 Developer’s Guide. 1 ed. São Paulo, Brasil, Makron Books, 2004.', '\\N', '\\N'),
(89, 32, 32, 'Introdução aos conceitos de representação, conhecimento e raciocínio.  Definição de ontologias.\nEstudo das formas de representação do conhecimento e suas ferramentas computacionais.\n', 'REPRESENTAÇÃO DO CONHECIMENTO', 3, 'Ronald J. Brachman, Hector J. Levesque Knowledge Representation and Reasoning, Morgan Kaufmann, 2004\nJohn F. Sowa: Knowledge Representation: Logical, Philosophical, and Computational Foundations. Brooks/Cole: New York, 2000', 'Hermann Helbig: Knowledge Representation and the Semantics of Natural Language, Springer, Berlin, Heidelberg, New York 2006\nAdrian Walker, Michael McCord, John F. Sowa, and Walter G. Wilson: Knowledge Systems and Prolog, Second Edition, Addison-Wesley, 1990', '\\N', '\\N'),
(90, 64, 0, 'Estudo do modelo de programação orientada a objetos, abordando abstração, encapsulamento, classes, métodos, objetos, herança, polimorfismo. Construção de aplicações orientadas a objeto envolvendo interfaces gráficas, manipulação de eventos, tratamento de exceções, uso de streams e tratamento de concorrência com threads. A implementação das aplicações deve ser feita utilizando ferramentas de desenvolvimento com testes de unidade, depuração e controle de versão. Introdução ao projeto orientado a objetos com noções de UML, padrões de projeto (design patterns) e arquitetura de software.\n', 'PROGRAMAÇÃO ORIENTADA À OBJETOS', 3, 'DEITEL, H. M. and Deitel, P J. Java Como Programar. 6a . edição. Pearson, 2006.', 'SANTOS, R., Introdução a Programação Orientada a Objetos com Java, Campus, 2003.\nGAMMA E. et al. Design Patterns, Addison-Wesley, 1995.\nTIMOTHY, B., An Introduction to Object-Oriented Programming. Addison Wesley, 1996\n', '\\N', '\\N'),
(91, 16, 48, 'Introduzir os conceitos fundamentais de sistemas distribuídos, a caracterização de sistemas de computação distribuída, aplicações distribuídas (características e aspectos de projeto), objetivos básicos de sistemas distribuídos (transparência, abertura, escalabilidade etc). Estudar e dominar os princípios e aplicações dos principais modelos de sistemas distribuídos: sistemas cliente/servidor e sistemas multi-camadas; sistemas peer-to-peer. Compreender a teoria e prática de objetos distribuídos: interface x implementação; objetos remotos; chamadas de métodos remotos (RMI). Estudar os princípios e uso dos principais serviços de sistemas distribuídos: serviços de nomes; compartilhamento de documentos / recursos distribuídos (ex.: WWW e sistemas de trabalho cooperativo). Princípio e implementação de SOA – Arquiteturas Orientadas a Serviço; Utilização de web services.', 'APLICAÇÕES DISTRIBUÍDAS', 4, 'COULOURIS, G.F., J. Dollimore and T. Kindberg. Distributed Systems: Concepts and Design. 4th edition. Addison Wesley, 2005. - KUROSE, J.F. & ROSS, K.W., Redes de Computadores e a Internet: Uma abordagem top-down, 3a. Edição, Addison Wesley/Pearson, 2006. - TANENBAUM, A.S. and STEEN, M. van . Distributed Systems: Principles and Paradigms. Prentice Hall, 2ª Edição, 2006.', 'BURKE, Bill and RUBINGER,Andrew Lee. Enterprise Java Beans 3.1, September, 2010.', 'A DEFINIR', ''),
(92, 16, 48, 'Visão geral dos computadores modernos. Evolução da arquitetura dos computadores. Sistemas de numeração e aritmética binária. Memória e representação da dados e instruções. Processador, ciclo de instrução, formatos, endereçamento, e programação em linguagem de montagem. Dispositivos de entrada e saída. Sistemas de interconexão (barramentos). Interfaceamento e técnicas de entrada e saída. Hierarquia de memória. Paralelismo ao nível de instrução. Arquiteturas paralelas.', 'ARQUITETURA DE COMPUTADORES', 4, 'TA N E N B A U M , A n d r e w, Organização Estruturada de Computadores, Editora LTC, 2006. - STALLINGS, W. Arquitetura e Organização de Computadores, Tradução da 5a Edição, Prentice-Hall, 2002. - PATTERSON, D.A.; HENNESSY, J.L. Projeto e Organização de Computadores:A Interface Hardware / Software, Tradução da 3a Edição, Campus, 2005.', 'HENNESSY, J.L. and PATTERSON, D.A. Arquitetura de Computadores: Uma Abordagem Quantitativa, Tradução da 3a. Edição, 1996, Morgan Kaufmann.  - WEBER, R.F., Fundamentos de Arquiteturas de Computadores, 2a Edição, Editora Sagra-Luzzatto, 2001.', 'A DEFINIR', ''),
(93, 0, 64, 'Auditoria de sistemas: conceituação, planejamento, controle interno, ponto de controle, produtos gerados, função do auditor e técnicas de auditoria de sistemas. Gerência de projetos: conceituação de projeto, modelo pmi, gerência da qualidade, proposta, ciclo de vida, estrutura organizacional, atuação do gerente de projeto, gerência de escopo, tempo e custo, ferramentas de gerencia de projeto e estimativas.', 'AUDITORIA DE SISTEMAS', 4, 'GIL, Antônio de Loureiro. Auditoria de Computadores, Ed. Atlas - CARUSO & STEFFEN. Segurança em Informática e de Informações, Ed. Senac - DUNCAN, William R. – A Guide to the Project Management Body of Knowledge, PMI-Project Mamagement Institute.', 'DIAS, Cláudia. Segurança e Auditoria da Tecnologia da Informação, Ed Axcel Books  - FONTES, Joaquim Rubens – Manual de Auditoria de Sistemas, Ed. Ciência Moderna - BERNSTEIN, Terry & colaboradores. Segurança na Internet, Ed. Campus - VARGAS, Ricardo Viana – Gerenciamento de Projetos com o MS-Project, Ed. Best Seller - M. da S., Portilho, C. - Projetando com Qualidade a Tecnologia em Sistemas de Informação. Rio de Janeiro. LTC, 1995. - BIO, Sérgio Rodrigues. – Sistemas de Informação: um enfoque gerencial. São Paulo. Ed. Atlas, 1996. - CAUTELA, Alciney Lourenço; POLLONI, Enrico Giulio Franco. - Sistemas de Informação. Prado, Darci – Pert/Cpm – Série Gerência de Projetos, 2a edição, Ed. DG. - Manual de Auditoria do FED-Federal Reserve (Banco Central Americano) - Manual de Auditoria de Sistemas do TCU-Tribunal de Contas da União  - Manual de Auditoria do Estado do Rio de Janeiro', 'A DEFINIR', ''),
(94, 32, 32, 'Conceitos de arquitetura de Software, estilo, estrutura, requisitos, análise de arquitetura. Projeto Arquitetural, Avaliação Arquitetura. Modelo de arquitetura em camadas – MVC (model – Viewcontroller), MDA (model drive architecture). Ferramentas.', 'ARQUITETURA DE SOFTWARE', 4, 'FOWLER, Martin. Patterns of Enterprise Application Architecture, Addison-Wesley, 2002 - BASS, Len et al. Software Architecture in Practice, Addison-Wesley, 2003', '', 'A DEFINIR', ''),
(95, 32, 32, 'Sistemas de bancos de dados. Projeto de banco de dados. Modelo entidade-relacionamento. Modelo relacional. Álgebra relacional. Normalização. SQL.', 'BANCO DE DADOS I', 4, '• BASS, Len et al. Software Architecture in Practice, Addison-Wesley, 2003', 'K O RT H , H e n r y F. , S I L B E R S C H AT Z , A ; A b r a h a m ; - SUDARSHAN,S. Sistema de Banco de Dados; Editora Campus, 5a Edição, 2006. - DATE, C.J. Banco de Dados: Tópicos Avançados. Rio de Janeiro: editora Campus, 1988. - ELMASRI, R.; Navathe, S., Fundamentals of Database Systems. Addison-Wesley, 1994. - MACHADO, F.N.R.; Abreu, M. Projeto de Banco de Dados: uma Visão Prática. São Paulo: editora Érica, 1995. - SETZER, V.W. Projeto Lógico e Projeto Físico de Bancos de Dados. Belo Horizonte: V Escola de Computação, 1986.', 'A DEFINIR', ''),
(96, 16, 48, 'Programação de Banco de Dados. Funções, gatilhos e procedimentos armazenados. Organização de Dados e Estruturas de Armazenamento. Transações. Controle de concorrência. Recuperação após falhas. Segurança.', 'BANCO DE DADOS II', 4, 'ELMASRI, R. E., NAVATHE, S. B., Sistemas de Banco de Dados, Addison Wesley, 4a edição, 2005. - K O RT H , H e n r y F. , S I L B E R S C H AT Z , A ; A b r a h a m ; - SUDARSHAN,S. Sistema de Banco de Dados; Editora Campus, 5a Edição, 2006. - DATE, C.J. Banco de Dados: Tópicos Avançados. Rio de Janeiro: editora Campus, 1988.', 'MACHADO, F.N.R.; Abreu, M. Projeto de Banco de Dados: uma Visão Prática. São Paulo: editora Érica, 1995.', 'A DEFINIR', '');
INSERT INTO `disciplina` (`id`, `carga_horaria_pratica`, `carga_horaria_teorica`, `ementa`, `nome`, `curso_id`, `bibliografia_basica`, `bibliografia_complementar`, `objetivo_geral`, `codigo`) VALUES
(97, 0, 64, 'A comunicação nas organizações suas funções e fases; o volume de riqueza da informação nas organizações; as redes e os canais de comunicação nas organizações; comunicação empresarial e o processo de gestão; comunicações internas nas organizações em uma nova abordagem: endomarketing; comunicação e liderança; comunicação interpessoal nas organizações: conhecimento, habilidade e atitude; comunicação verbal e não-verbal; barreiras da comunicação.', 'COMUNICAÇÃO EMPRESARIAL', 4, 'BAHIA, Juarez. Introdução à comunicação empresarial. Rio de Janeiro: Murad, 1995. - BUENO, Wilson da Costa. Comunicação Empresarial: teoria e pesquisa. São Paulo, Editora Manole, 2003. - TORQUATO, Francisco Gaudêncio. Comunicação empresarial, comunicação institucional: conceitos, estratégias, sistemas, estruturas, planejamento e técnicas. São Paulo, Summus, 1986.', 'BORDENAVE, Juan E. Diaz. O que é Comunicação. 27.ed. São Paulo:Brasiliense, 2002. - BRUM, Analisa. Respirando Endomarketing. Porto Alegre: L&PM, 2003. - CAHEN, Roger. Tudo que seus não lhe contaram sobre comunicação empresarial. São Paulo: Best Seller, 1990. - CARNEGIE, Dale. Como falar em público e influenciar pessoas no mundo dos negócios. Rio de Janeiro: Record, 1994. - CESCA, Cleuza G. Gimenes. Comunicação dirigida escrita na empresa. São Paulo: Summus,1995. - CORRADO, Frank M. A força da comunicação. São Paulo, Makron Books, 1994. - CURVELLO, João J. A. Comunicação Interna e Cultura Organizacional. São Paulo:Scortecci, 2002. - GOLD, Miriam. Redação empresarial: escrevendo com sucesso na era da globalização. São Paulo : Makron Books, 1999. - KUNSCH, Margarida Maria Krohling. Planejamento de Relações Públicas na comunicação integrada. São Paulo: Summus, 2003. - NASSAR, Paulo & GOMES, Nelson. A comunicação da pequena empresa. São Paulo: Globo,1997. - PIMENTA, Maria Alzira. Comunicação Empresarial. 3. ed. Campinas: Alínea, 2002. - POLITO, Reinaldo. Como falar corretamente sem inibições. 97. ed. São Paulo: Saraiva, 2001. - VIANA, Francisco. Comunicação empresarial de A a Z: temas úteis para o cotidiano e o planejamento estratégico. São Paulo: Editora CLA, 2004.', 'A DEFINIR', ''),
(98, 64, 0, 'Definição de construção de software. Pré-requisitos para a construção. Boas práticas para definição dos requisitos. Arquitetura de software e seus componentes. Escolha da linguagem de programação. Convenções de programação. Principais práticas de construção de software. Projeto de software (conceitos, práticas, níveis e abordagens comuns). Formas de acoplamento. Classes e pacotes. Rotinas (métodos). Projeto de software em nível de rotina. Motivos para se criar uma rotina. Bons nomes para uma rotina. Tamanho adequado de uma rotina. Programação defensiva. Problemas gerais no uso de variáveis. Nomes adequados para variáveis. Tipos de dados fundamentais. Estruturas. Ponteiros e referências. Dados globais. Organizando código linear. Sentenças de decisão. Sentenças de iteração. Pesquisas em tabelas. Expressões lógicas. Blocos. Instruções nulas e aninhamentos profundos. Estruturas de controle e complexidade. Qualidade de software. - Construção colaborativa. Testes de desenvolvedor. Depuração. Refatoração. Estratégias e técnicas de otimização de código. Relação entre tamanho do código e construção. Gerenciando a construção. Integração. Ferramentas de programação. Leiaute e estilo.', 'CONSTRUÇÃO DE SOFTWARE', 4, 'McCONNELL, Steve. Code Complete: A Practical Handbook of Software Construction, Microsoft Press, 2nd Edition, 2004. - BEZERRA, E. Princípios de Análise e Projeto de Sistemas com UML. 2a ed., Elsevier, 2007. - DAN Pilone and Russ Miles, Head First Software Development, O’Reilly, 2008.', 'Code Complete: Um guia prático para a construção de software, Steve McConnell, Microsoft Press, 2nd Edition, 2004. - GAMA, E.; HELM. R.; JOHNSON, R.; VLISSIDES, J. Padrões de Projeto: soluções reutilizáveis de software orientado a objetos. 2a ed., Bookman, 2000. - GOODRICH, M.; TAMASSIA, R. Estruturas de Dados e Algoritmos em Java. 4a ed., Bookman, 2007.', 'A DEFINIR', ''),
(99, 32, 32, 'O perfil do empreendedor. Estudo de mecanismos e procedimentos para lançamento de uma empresa no mercado. Inovação tecnológica na geração de novos produtos e negócios. Sistemas de Gerenciamento, técnicas de negociação e legislação específica. Marketing e competitividade. Sistema de Produção. Sistema de Recursos Humanos. Constituição, tributação e legalização de empresa. Avaliação de desempenho empresarial. Análise de Casos. Elaboração de plano de negócios.', 'EMPREENDEDORISMO', 4, 'FARAH, Osvaldo; CAVALCANTI, Marly e MARCONDES, Luciana. Empreendedorismo Estratégico – Criação e Gestão de Pequenas Empresas. Editora Thomson Learning (Pioneira) ISBN-10: 8522106088, 2008. - SALIM, César; HOCHMAN, Nelson; RAMAL, Andrea, e RAMAL, Silvina.Construindo Planos de Negócios. Editora Campus, 2ª. Edição, 2003. - DORNELAS, José Carlos. Empreendorismo: transformando idéias em negócios. 2 ed. Rio de Janeiro: Campus, 2005.', 'BUKOWITZ, Wendi; WILLIAMS, Ruth L. Manual de gestão do conhecimento. Porto Alegre: Bookman Companhia, 2002. - STAL, Eva; SBRAGIA, Roberto; CAMPANARIO, Milton de A.; ANDREASSI, Tales. Inovação. São Paulo: Clio, 2006.', 'A DEFINIR', ''),
(100, 0, 64, 'Introdução ao Ciclo de Vida do Sistema de Software e ao Processo de Desenvolvimento de Software - Fase Requisitos; Conceitos sobre Requisitos; Requisitos de Sistema e Requisitos de Software (Funcionais e Não-Funcionais); Técnicas de - Levantamento de Requisitos (Joint Application Development); Gerência de Requisitos; CASE para Requisitos; Documentação da Visão.', 'ENGENHARIA DE REQUISITOS', 4, 'KOTONYA, Gerald e SOMMERVILLE Ian, Requirements Engineering: Process and Techniques 2 ed. John Wiley & Sons 1998. - IEEE STD 830-1998 – Recommended Practice for Software Requirements Specifications. 2a. ed. Springer Verlag NY, 2004. - SILVER, D.; WOOD, J.Joint Application Development 2 ed. John Wiley Professional, 1995. ISBN 0471042994.', 'HULL, Elizabeth, JACKSON, Ken and DICK, Jeremy. Requirements Engineering. 2a. ed. Springer Verlag NY, 2004.', 'A DEFINIR', ''),
(101, 0, 64, 'Caracterização de software enquanto produto e processo. Gerência de projetos de software: planejamento; métricas; análise e gerência de riscos e acompanhamento de projetos. Controle de qualidade de software. Gerência de configuração de software. Engenharia de sistemas. Análise e projeto de software. Ferramentas de apoio ao desenvolvimento de software. Noções de tópicos avançados em engenharia de software (métodos formais, reengenharia e outros). Técnicas e ferramentas CASE.', 'ENGENHARIA DE SOFTWARE', 4, 'SOMMERVILLE, Ian. Engenharia de Software. Addison-Wesley, Oitava Edição, 2007. - PFLEEGER, Shari L. Software Engineering: Theory and Practice. Prentice-Hall, Terceira Edição, 2006. - PRESSMAN, Roger S..Engenharia de Software. McGraw-Hill, Sexta Edição, 2006.', 'Guide to the Software Engineering Body of Knowledge. Editado por IEEE Computer Society. Disponível em http://www.swebok.org/. Último acesso em 10/08/2008. - BRAUDE, Eric. Software Engineering – An Object-Oriented Perspective. John Wiley & Sons, 2001. - ABRAN, Alain and MOORE, James W. Software Engineering Body of Knowledge. Executive Editors: Editors: Pierre Bourque and Robert Dupuis. Chair: Leonard L. Tripp. IEEE Computer Society, 2005. - BROOKS JR, Frederick P. The Mythical Man-Month – Essays on Software Engineering. Addison-Wesley, 1995. - McCONNELL, Steve. Rapid Development - Taming Wild Software Schedules. Microsoft Press, 1996. - PETERS, James e PEDRYCZ, Witold. Engenharia de Software – Teoria e Prática. Editora Campus, 2001. - Advances in Software Engineering. Hakan Erdogmus e Oryl Tanir (Editores). Springer, 2002.', 'A DEFINIR', ''),
(102, 32, 32, 'Estudo de estruturas de dados básicas, seus conceitos e operações. Estudo de Listas Lineares, compreensão de seu uso como Pilhas e Filas e de implementações usando vetores, listas lineares encadeadas, listas duplamente encadeadas, listas circulares e listas com descritores. Estudo dos conceitos de Árvores Binárias, dos algoritmos de caminhamentos e da sua aplicação como fila de prioridade. Estudo de Árvores de Pesquisa: árvores binárias balanceadas, árvore B. Estudo de Tabelas de Dispersão.', 'ESTRUTURAS DE DADOS', 4, 'SZWARCFITER, Jayme. MARNENZON, Lilian. Estruturas de Dados e Seus Algoritmos. LTC, 1994. - ZIVIANI, Nivio. Projeto de Algoritmos com implementações em Java e C++. Thompson, 2006. - PREISS, Bruno R. Estruturas de Dados e Algoritmos – Padrões de Projetos Orientados a Objetos com Java. Campus, 2000.', 'DROZDEK, Adam. Estrutura de Dados e Algoritmos em C++. Thompson, 2002. - CELES, Waldemar; CERQUEIRA, Renato; RANGEL, José Lucas. Introdução a Estruturas de Dados com Técnicas de Programação em C. Campus, 2004 - FEOFILOFF, Paulo. Algoritmos em Linguagem C. Campus, 2008.', 'A DEFINIR', ''),
(103, 0, 32, 'Conceitos de ética e critérios para tomadas de decisões éticas. Códigos de ética profissional. Computadores: campos de aplicação. Aspectos sociais e econômicos de sua utilização. Aspectos estratégicos do controle de tecnologia. Estudos de casos.', 'ÉTICA, COMPUTADOR E SOCIEDADE', 4, 'MASIERO, P. C - Ética em Computação, Editora da USP, 2000. - JUNIOR ARAUJO, Marco Antônio. Ética Profissional - Atualizada com o julgamento da ADIN 1.127/DF. São Paulo: Premier, 2008  - MARCHIONNI, Antônio. Ética A arte do Bom. Ed Vozes, 2008.', 'NALINI, José Renato. Ética Geral e Profissional. 5. ed., São Paulo: RT, 2006.', 'A DEFINIR', ''),
(104, 0, 64, 'Contabilidade: Conceito, objeto, objetivo, campo de aplicação, usuários e finalidades, técnicas contábeis e evolução contábil. Patrimônio: Ativo, Passivo, Situação Líquida, Receitas e Despesas. Demonstrações Contábeis: relatórios obrigatórios e não obrigatórios; estrutura e interpretação. Processo de contabilização e escrituração: livros contábeis, lançamentos, operações comerciais e inventários. Princípios contábeis: abordagem inicial. A contabilidade na tomada de decisões.', 'FUNDAMENTOS DE CONTABILIDADE', 4, 'MARION, José Carlos. Contabilidade empresarial.12ª ed. Atlas. São Paulo, 2006.  - PADOVEZE, Clóvis Luís. Manual de contabilidade básica. 5ª ed. Atlas. São Paulo, 2004. Livro texto. - FRANCO, Hilário. Contabilidade geral. 13ª ed. Atlas. São Paulo, 1996.', 'FIPECAFI. Manual das sociedades por ações. 7ª ed. Atlas. São Paulo, 2006. - IUDÍCIBUS, Sérgio de; MARION, José Carlos. Contabilidade comercial. 6ª ed. Atlas. São Paulo, 2004. Livro texto - PADOVEZE, Clóvis Luís. Contabilidade gerencial: um enfoque em sistema de informação contábil. 5ª ed. Atlas. São Paulo, 2007. Livro texto/exercícios - SILVA, César Augusto Tibúrcio; TRISTÃO, Gilberto. Contabilidade básica. 3ª ed. Atlas. São Paulo, 2008.', 'A DEFINIR', ''),
(105, 16, 48, 'Definição de Gerenciamento de Projetos. O Ciclo de Vida de um Projeto. As Fases do Ciclo de Vida do Projeto. Desempenho, Custo e Tempo em Projetos. Principais Áreas do Gerenciamento de Projetos. Preparando a Organização para Projetos. O Gerente de Projetos e suas Interfaces. Fluxograma do Projeto. Ferramentas Computacionais de Gerenciamento de Projetos.', 'GERÊNCIA DE PROJETOS I', 4, 'MULCAHY, Rita. PM Crash Course: A Crash Course in Real-World Project Management, RMC Publications, 2006. - LARMAN, Craig. Agile and Iterative Development: A Manager’s Guide, Addison-Wesley, 2003. - ROTHMAN, Johanna. Manage It!: Your Guide to Modern, Pragmatic Project Management, Pragmatic Bookshelf, 2007.', 'NEILL, C. J; LAPLANTE, P. A. Requirements Engineering for Software and Systems. Auerbach Publications, 2009. - FAIRLEY, R. E. Managing and Leading Software Projects. Wiley- IEEE Computer Society Press, 2009.', 'A DEFINIR', ''),
(106, 32, 32, 'Gerência de escopo (planejamento, definição, WBS, verificação e controle de escopo). Gerência de tempo (definição de atividades, sequenciamento de atividades, estimativa de recursos, estimativa de duração, desenvolvimento de cronograma e controle de cronograma). Gerência de custos (estimativas, orçamento e controle). Gerência de qualidade (planejamento, garantia da qualidade e controle de qualidade). Gerência de recursos humanos (planejamento, adquirir equipe de projeto, desenvolver a equipe de projeto e gerenciar a equipe de projeto). Gerência de comunicação (planejamento, distribuição da informação, relato de desempenho e gerenciar interessados). Gerência de riscos (planejamento, identificação de riscos, análise qualitativa e quantitativa de riscos, planejamento de resposta a riscos, controle e monitoramento de riscos). Gerência de aquisições (planejamento, planejamento de contratos, requisitar respostas de fornecedores, selecion - ar fornecedores, administração de contratos e fechamento de contrato. Gerência de integração (desenvolver carta de projeto, desenvolver escopo preliminar, desenvolver plano de gerência de projeto, dirigir e gerenciar a execução de projetos, monitorar e controlar atividades de projeto, controle de mudanças e fechamento do projeto). Estabelecer relações com o MPS.BR. Gerência de aquisições deve ser observada da perspectiva do Guia de Aquisições de Software e Serviços Correlatos (MPS.BR).', 'GERÊNCIA DE PROJETOS II', 4, 'NEILL, C. J; LAPLANTE, P. A. Requirements Engineering for Software and Systems. Auerbach Publications, 2009. - FAIRLEY, R. E. Managing and Leading Software Projects. Wiley-IEEE Computer Society Press, 2009. - McCONNELL, Steve. Software Estimation: Demystifying the Black Art, Microsoft Press, 2006.', 'HIGHSMITH, Jim. Agile Project Management: Creating Innovative Products, Addison-Wesley, 2004. - RICHARDSON, Jared and GWALTNEY, William. Ship It!: A Practical Guide to Successful Software Projects.Pragmatic Bookshel, 2005.', 'A DEFINIR', ''),
(107, 0, 64, 'Áreas estratégias para Gestão de TI. Alinhamento de Estratégias de TI e do Negócio. Critérios para controle da Informação. Processos de Gestão de TI. Tipos de recursos em TI. Modelos de Gestão de TI. Controle de Processos de TI. Indicadores e métricas para gestão de TI. Maturidade e capacitação de processos de TI. Planejamento e organização da área de TI. Aquisição e Implementação de serviços de TI. Entrega e suporte a serviços de TI. Monitoramento e avaliação de resultados de TI.', 'GESTÃO EM TECNOLOGIA DA INFORMAÇÃO', 4, 'MAGALHÃES, Ivan e PINHEIRO. Walfrido. Gerenciamento de Serviços de TI na Prática – Uma abordagem com base na ITIL. Novatec Editora, 2007. - COBIT V. 4.1 - ISBN 1-933284-72-2 - IT Governance Institute, 2007. - ITIL V.3 - The Introduction to the ITIL Service Lifecycle. ISBN - 9780113310616 - Office of Government Commerce, 2007.', 'VIEIRA, Marconi. Gerenciamento de Projetos de Tecnologia da Informação. Editora Campus, 2003.', 'A DEFINIR', ''),
(108, 64, 0, 'Lógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; expressões aritméticas e lógicas; estruturas de decisão; estruturas de controle; estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes. Desenvolvimento de algoritmos.Transcrição de algoritmos para uma linguagem de programação. Desenvolvimento de pequenos programas.', 'INTRODUÇÃO À PROGRAMAÇÃO', 4, 'SCHILDT, Herbert. C - Completo e Total, Editora Makron Books, 3a edição. 2002. - LOPES, Anita e GARCIA Guto, Introdução à Programação – 500 Algoritmos Resolvidos, Editora Campus, 2002. - FORBELLONE, A.L.V. e EBERSPACHER, H.F., Lógica de Programação - A construção de algoritmos e estruturas de dados, 3a ed., Prentice Hall, São Paulo, 2005.', 'DEITEL, H.M. e DEITEL, P.J., Java – Como Programar, 6a ed., Pearson Education, 2005. - MANZANO; N. G. José Augusto. e OLIVEIRA, J. F., Algoritmos – Lógica para Desenvolvimento de Programação de Computadores, Editora Érica, São Paulo, 2000. - SALVETTI, D.D. e BARBOSA, L.M., Algoritmos, Makron Books, São Paulo, 1998. - SALIBA, W.L.C., Técnicas de Programação - Uma abordagem estruturada, Makron Books, São Paulo, 1993. - F A R R E R , H . e o u t r o s , Programação Estruturada de Computadores - Algoritmos Estruturados, 3a ed., LTC, RJ, 1989. - C A M A R Ã O , C . e F I G U E I R E D O , L . , Programação de Computadores em Java, LTC Editora, Rio de Janeiro, 2003. - PUGA, S. e RISSETTI, G., Lógica de Programação e Estruturas de Dados com Aplicações em Java, Makron Books, São Paulo, 2004. - FURGERI, S., Java 2 – Ensino Didático – Desenvolvendo e Implemantando Aplicações, 4a ed., São Paulo, 2002. - CORMEN T. H. et al., Algoritmos- Teoria e Prática, 2a Edição, Editora Campus 2002. - MANBER, Udi., Introduction to Algorithms: A Creative Approach, Pearson Education, 1989.', 'A DEFINIR', ''),
(109, 0, 64, 'Projeto Pedagógico do curso de Sistemas de Informação. Características do profissional de sistemas de informação e carreiras de sistemas de informação. Conceituação de computador, informática e software. Histórico da computação e de sistemas de informação. Conceitos, objetivos, tipos, funções, organização e componentes dos sistemas de informação. Sistemas de informação empresariais, empresa digital, tipos de sistemas de informação empresariais. Infra-estrutura de tecnologia de informação: hardware e software, bancos de dados, telecomunicações, Internet e redes. Aplicações de sistemas de informação: sistemas integrados, comércio eletrônico, gestão do conhecimento e sistemas de apoio à decisão. Desenvolvimento e gerenciamento de sistemas de informação. Aspectos de segurança, éticos e sociais.', 'INTRODUÇÃO A SISTEMAS DE INFORMAÇÕES', 4, 'LAUDON, Kenneth C.; LAUDON, Jane P. , Sistemas de Informação Gerenciais, 7a. Edição, Prentice Hall Brasil, 2007. - AUDY, J. L. N.; ANDRADE, G. K.; CIDRAL, A. Fundamento de Sistemas de Informação. Porto alegre: Bookman, 2005. - O’BRIEN, James, Sistemas de Informação, 2a. Edição, Editora Saraiva, 2006.', 'TAIR, R. M. Princípios de Sistemas de Informações. São Paulo : LTC, 1998.', 'A DEFINIR', ''),
(110, 32, 32, 'Fatores humanos em software interativo: teoria, princípios e regras básicas. Estilos interativos: linguagens de comandos, manipulação direta. Dispositivos de interação. Padrões para interface. Usabilidade: definição e métodos para avaliação.', 'INTERAÇÃO HOMEM-COMPUTADOR', 4, 'SHNEIDERMAN, Ben  and PLAISANT, Catherine. Designing the User Interface –Strategies for  Effective Human-Computer Interaction. Addison Wesley, Quarta Edição, 2004. - COOPER, Alan. About Face: the essentials of user interface design. . IDG Books, 1995.  - ACM Interactions magazine. http://www.acm.org/interactions/ ', 'LEN BASS, Joëlle Coutaz. Developing Software for the User Interface. Addison Wesley,1991.  - MAYHEW, Deborah. Principles and Guidelines in Software User Interface Design.  Prentice Hall, 1992. - NORMAN, Donald A. The Design of Everyday Things.  Basic Books, 2002. - SOMMERVILLE, Ian.  Engenharia de Software. Capítulo 15 – Projeto de Interface com o usuário. Addison-Wesley, Sexta Edição, 2003. - PRESSMAN, Roger S. Engenharia de Software. Capítulo 12 – Projeto de Interface com o usuário. McGraw-Hill, Sexta Edição, 2006. Ergolist. http://www.labiutil.inf.ufsc.br/ergolist/index.html. Laboratório de Utilizabilidade, UFSC.', 'A DEFINIR', ''),
(111, 0, 64, 'Lógica Proposicional. Proposições e conectivos. Operações Lógicas sobre proposições. Construção de tabelas-verdade. Tautologias, contradições e contingências. Implicação Lógica. Equivalência Lógica. Álgebra das proposições. Métodos para determinação da validade de fórmulas da Lógica Proposicional. Demonstração condicional e demonstração indireta. Lógica de Predicados.', 'LÓGICA', 4, 'SOUZA, João Nunes de. Lógica para Ciência da Computação. Editora Campus 2002. - Alencar Filho, Edgard de, Iniciação à Lógica Matemática. Ed. Nobel 2002. - MENDELSON, E. Introduction to Mathematical Logic. Lewis Publishers, Inc. 1997. - Enderton, H. A Mathematical Introduction to Logic. Academic Press 2000', 'DAGHLIAN, Jacob, Lógica e Álgebra de Boole. – 4a edição, Atlas, S. A . São Paulo, 1995.', 'A DEFINIR', ''),
(112, 0, 64, 'Princípios dos números naturais, inteiros, racionais e reais. Conjuntos: interseção, união, complemento, produto. Figuras de Venn. Noção de relação e de função. Classificação de funções. Técnicas de demonstração. Recursão e Relação de Recorrência. Matrizes. Sistema de equações lineares e solução. Grafos e dígrafos.', 'MATEMÁTICA DISCRETA', 4, 'GERSTING, Judith L., Fundamentos Matemáticos para a Ciência da Computação. 3a. edição, Editora LTC. - SCHEINERMAN, E. . Matematica Discreta, Thomson Pioneira, 2003. - ROSEN, K. Discrete Mathematics and its Applications. McGraw- Hill Science/Engineering/Math; 5th edition., 2002.', 'TREMBLEY and Manohar. Discrete Mathematical Structures with Applications to Computer Science. McGraw-Hill. - CORMEN T. H. et al., Algoritmos - Teoria e Prática, 2a Edição, Editora Campus 2002.', 'A DEFINIR', ''),
(113, 0, 64, 'Juros e capitalização simples. Capitalização composta. Desconto e taxas de desconto. - Séries de pagamento. Métodos de avaliação de fluxos de caixa. Taxas de juros. Sistemas de amortização. Operações realizadas no sistema financeiro brasileiro', 'MATEMÁTICA FINANCEIRA', 4, 'VIEIRA SOBRIHO, J. Dutra. Matemática financeira 6ª ed. São Paulo: Atlas, 1997. (livro texto) - PUCCINI, A. L. e PUCCINI, A. Matemática financeira: objetiva e aplicada (Edição compacta). Editora Saraiva, 2006. - ASSAF, A. N. Matemática Financeira e suas aplicações. Editora Atlas', 'PADOVEZE,  Clovis  Luiz.  Análise  das  Demonstrações Financeiras. Editora Thomson Heinle, 2007.', 'A DEFINIR', ''),
(114, 0, 64, 'Gestão estratégica: conceitos, requisitos, vantagens e processo; Definição das filosofias, políticas e diretrizes superiores. Definição de objetivos, estratégia, e tomada de decisão. Fatores Críticos de Sucesso. Análise do ambiente interno e externo da organização. Análise de recursos, requisitos, cenários e tendências. Processo de elaboração e implementação do planejamento estratégico. Planejamento estratégico versus análise competitiva. Estruturas e modelos para formulação de estratégias. Estratégias competitivas modernas. BSC (Balanced Scorecard) como instrumento de gestão estratégica. Mapeamentos de estratégias para ações. Indicadores de Desempenho.', 'PLANEJAMENTO ESTRATÉGICO', 4, 'FERNANDES, Bruno H. R; BERTON, Luiz H. Administração Estratégica: da competência empreendedora à avaliação de desempenho. São Paulo: Saraiva, 2005. - BETHLEM, Agrícola. Estratégia Empresarial: conceitos, processo e administração estratégica. 5 ed. São Paulo: Atlas, 2004. - COSTA, E. Gestão Estratégica. São Paulo: Saraiva, 2004.', 'HITT, Michael A; IRELAND, R. D; HOSKISSON, Robert E. Administração Estratégica. São Paulo: Pioneira THOMSON, 2003. - KAPLAN, R. S. Alinhamento: utilizando o BSC para criar sinergias corporativas. Rio de Janeiro:Elsevier, 2006. - PORTER, Michael E. Estratégia Competitiva: técnicas para análise de indústrias e da concorrência. Rio de Janeiro:Elsevier, 2004.', 'A DEFINIR', ''),
(115, 32, 32, 'Estudo dos conceitos da linguagens de programaçao imperativa e de seus paradigmas. Ambiente integrado de desenvolvimento (edição, compilação, depuração, empacotamento e distribuição). Estrutura de dados homogêneas e heterogêneas na programação imperativa. Alocação estática e dinâmica.. Modularização (passagem de parâmetros, procedimentos e funções recursivas e não recursivas). Manipulação de Arquivos. Estudos de caso de aplicações desenvolvidas com a programação imperativa.', 'PROGRAMAÇÃO IMPERATIVA', 4, 'ASCENCIO, Ana Fernanda Gomes / CAMPOS, Edilene Aparecida Veneruchi De. Fundamentos da Programação de Computadores. Editora: - Longman do Brasil, 2007. - SCHILDT, Herbert. C - Completo e Total, Editora Makron Books, 3a edição. 2002. - DEITEL, H. M., Java Como Programar, Pearson Prentice Hall Brasil, 6a. Edição, 2005.', 'LOPES, Anita e GARCIA Guto, Introdução à Programação – 500 Algoritmos Resolvidos, Editora Campus, 2002.', 'A DEFINIR', ''),
(116, 64, 32, 'Paradigma de orientação a objetos. Linguagens orientadas a objetos. Abstração e tipos abstratos. Classes, métodos, encapsulamento, interface. Mensagens, instâncias e inicialização. Herança e composição. A combinação de herança e composição. Polimorfismo: variáveis polimórficas, sobrecarga, construtores. Ambiente integrado de desenvolvimento (IDE): conceituação e utilização. Implementação de programas em Java. Introdução a objetos em Java: encapsulamento, classes, métodos, objetos, mensagens, construtores, composição, herança, polimorfismo. Estudos de caso de aplicações desenvolvidas com a linguagem de programação Java.', 'PROGRAMAÇÃO ORIENTADA A OBJETOS', 4, 'DEITEL, H. M., Java Como Programar, Pearson Prentice Hall Brasil, 6a. edição, 2005. - HORSTMANN, C. S. Core Java – Volume I – Fundamentals, Prentice Hall. 8a. edição, 2007. - SPEEGLE, G. D. JDBC : Practical Guide for Java Programmers. Morgan Kaufmann Publishers, 2002.', 'HORSTMANN, C. S. Core Java – Volume I – Fundamentals, Prentice Hall. 8a. edição, 2007. - HORSTMANN, C. S. Core Java – Volume II – Advanced Features, Prentice Hall, 8a. Edição, 2008.', 'A DEFINIR', ''),
(117, 80, 16, 'Paradigma e padrões de desenvolvimento de aplicações para a Web. Interface gráfica do usuário (GUI - Graphical User Interface) em ambiente Web. Plataforma Java para desenvolvimento de aplicações para a Web. Visão geral e Arquitetura de Servlets. Linguagem para conteúdo web dinâmico na arquitetura Java (JSP – Java Server Pages). Tratamento de Eventos em Java no ambiente Web. Acesso a Banco de dados em ambiente WEB (JDBC - Java Database Connectivity). Estudos de caso de aplicações desenvolvidas com a linguagem Java para web.', 'PROGRAMAÇÃO PARA WEB', 4, 'GONÇALVES, E. Desenvolvendo aplicações Web com NetBeans IDE 6. Ciência Moderna. Rio de Janeiro-RJ, 2008. - DEITEL, H. M., Java Como Programar, Bookman Companhia Ed., 6a. Edição, 2005 - KURNIAWAN, B. Java para a Web com Servlets, JSP e EJB. Ciência Moderna, Rio de Janeiro-RJ, 2002.', 'SPEEGLE, G. D. JDBC : Practical Guide for Java Programmers. Morgan Kaufmann Publishers, 2002. - MUKHAR K., TODD L., CARNELL J. Beginning Java databases. Wrox Press, Birmingham, UK, 2001. - HALL, M. Core Web Programming. Prentice Hall, 1997.', 'A DEFINIR', ''),
(118, 0, 64, 'Definição de projeto. Questões fundamentais (persistência dos dados, exceções e outras). Contexto de projeto em vários modelos de desenvolvimento de software (ciclos de vida). Princípios de projeto (encapsulamento de informações, coesão e acoplamento). Interação entre projeto e requisitos. Atributos qualitativos em um projeto (confiabilidade, usabilidade, manutenibilidade, testabilidade, desempenho, segurança, tolerância a falhas e outros). Compromissos (custo-benefício). Relação entre arquitetura de software e projeto de software. Projeto orientado a objetos. Projeto funcional. Noção de projeto baseado em estrutura de dados e projeto orientado a aspectos. Projeto orientado por responsabilidade. Projeto por contratos. Métodos de projeto de software. Padrões de projeto. Reutilização. Projeto de componentes. Projeto de interfaces entre componentes e sistemas. Notações de projeto. Ferramentas de suporte a projeto (análise estática, ava - liação dinâmica e outras). Medidas de atributos de projeto (acoplamento, coesão e outras). Métricas de projeto (principais métricas, interpretação).', 'PROJETO DE SOFTWARE', 4, 'Evans, Eric. Domain-Driven Design: Tackling Complexity in the Heart of Software. Addison-Wesley, 2003. - MANOLESCU, Dragos et al. Pattern Languages of Program Design 5, Addison-Wesley, 2006. - BUDGEN, David. Software Design, 2nd ediciton, Addison-Wesley, 2003.', 'SOMMERVILLE, Ian. Engenharia de Software. AddisonWesley. 2003.', 'A DEFINIR', ''),
(119, 0, 64, 'Visão geral de qualidade. Processo de software. Produto de Software. Qualidade de produto de software. Avaliação de qualidade de produto de software. Norma ISO 9126 para qualidade de produto. Avaliação de qualidade de processo de software. Melhoria de processo de software. Modelos Capability Maturity Model (CMM), Software Process Improvement and Capability Determination (SPICE) e Melhoria de Processo de Software Brasileiro (MPS.Br) para avaliação e melhoria de processo de software. Norma ISO 9000-3 - Diretrizes para Aplicação da ISO 9001 ao Desenvolvimento, Fornecimento e Manutenção de Software . Planejamento para melhoria de processo de software: gerenciamento de configuração, garantia de qualidade, planejamento e acompanhamento de projetos, gerenciamento de requisitos, gerenciamento de subcontratados.', 'QUALIDADE DE SOFTWARE', 4, 'ROCHA, A. R. C.; MALDONADO, J. C.; WEBER, K. C. Qualidade de Software - Teoria e Prática. Prentice Hall, São Paulo/SP, 2001. - HUMPHREY, W.S. - Managing the Software Process - Addison Wesley, 1989. - PAULK, M.C.;CURTIS, B.;CHRISSIS, M,B.; WEBER, C. V., Capability Maturity IEEE Standard for Software Project Management Plans, IEEE Software Engineering Standards Collection, primavera, 1991.', 'CHRISSIS, M. B.; KONRAD, M.; SHRUM, S. CMMI: Guidelines for Process Integration and Product Improvement. Addison-Wesley Professional. 2 ed. 2006. - KAN, S. H. Metrics and Models in Software Quality Engineering. Addison-Wesley Professional. 2 ed, 2002. - FUTRELL, R. T.; SHAFER, D. F.; SHAFER, L. I.. Quality Software Project Management. Prentice Hall PTR. 2002. - GALIN, D. Software Quality Assurance: From Theory to Implementation. Addison Wesley. 2003. - LOON, H. van. Process Assessment and Improvement: A Practical Guide for Managers, Quality Professionals and Assessors. Springer; 1 ed. 2004. - LOON, H. van. Process Assessment and ISO/IEC 15504: A Reference Book – Book 2. Springer; 2 ed. 2007.', 'A DEFINIR', ''),
(120, 16, 48, 'Fundamentos: arquitetura de redes de computadores e modelos de referência (OSI e TCP/IP); serviços e protocolos de comunicação; desempenho de redes de computadores (atraso, perda e largura de banda); arquitetura geral da Internet. Camada de Aplicações: interface de programação de aplicações; prática de programação de aplicações em rede; a Web e o protocolo HTTP; serviço de transferência de arquivos (FTP); correio eletrônico (SMTP e protocolos de acesso ao correio); serviço de nomes (DNS); aplicações e redes peer-to-peer (P2P) e redes sobrepostas (overlay networks). Camada de Transporte: tipos de serviço da camada de transporte; multiplexação e demultiplexação; transporte orientado a conexões; transferência confiável de dados; controle de congestionamento; protocolos de transporte da Internet (UDP e TCP). Camada de Rede: comutação de pacotes; redes de datagramas e de circuitos virtuais; princípios de roteamento unicast e multica - st; interconexão de redes; o protocolo IP. Camada de Enlace: enquadramento de dados; detecção e correção de erros; protocolos de acesso múltiplo; endereçamento na camada de enlace; redes Ethernet; comutadores e interconexão de redes; protocolo ponto-a-ponto (PPP); virtualização de enlaces (ATM e MPLS). Tópicos avançados: redes sem fio; redes e aplicações multimídia; segurança em redes; gerenciamento de redes.', 'REDES DE COMPUTADORES', 4, 'KUROSE, J.F. e ROSS, K.W. Redes de Computadores e a Internet – Uma abordagem top-down. 3a. ed. Pearson/Addison-Wesley, São Paulo, 2005. - PETERSON, L.L. e DAVIE, B.S. Redes de Computadores – Uma abordagem de sistemas. 3a. ed. Ed. Campus/Elsevier, Rio de Janeiro, 2004. - TANENBAUM, A.S. Redes de Computadores. 4a. ed. Ed. Campus, Rio de Janeiro, 2003.', 'KIZZA, J. Computer Network Security. Springer, 2005.', 'A DEFINIR', ''),
(121, 32, 32, 'Introdução a Segurança; Ameaças e Ataques; Estratégias de ataques e defesas; Vulnerabilidades em softwares, serviços e protocolos; Segurança nos serviços Internet; Técnicas de varredura; Técnicas de análise de vulnerabilidade; NAT; PROXY; Relacionamento das Aplicações com os Mecanismos de Segurança; Tipos e Arquitetura de Proteção; Firewalls; Políticas de Segurança, Criptografia; Normas de segurança; Gestão de riscos de Segurança; Conceitos de auditoria. Auditoria de sistemas e a área de SI. Avaliação de integridade e segurança de dados, de efetividade e de eficiência. Softwares de auditoria.', 'SEGURANÇA EM SISTEMAS DE INFORMAÇÃO', 4, 'KIZZA, J. Computer Network Security. Springer, 2005. - ONOME, Joshua. Auditoria de Sistemas de Informações, 2ª Edição, Atlas, 2008. - STALLINGS, W. Cryptography and Network Security. Prentice Hall, 2006. ', 'McCLURE, S. Hacking Exposed, Mcgraw-Hill Osborne Media, 2005.', 'A DEFINIR', ''),
(122, 32, 64, 'Conceitos de Hardware e Software ; Tipos de Sistemas Operacionais; Sistemas Multiprogramáveis; Estrutura do Sistema Operacional; Processo; Comunicação entre processos; Gerência do Processador; Gerência de Memória ; Gerência de Dispositivos; Sistemas de Arquivos; Estudos de casos de sistemas operacionais atuais.', 'SISTEMAS OPERACIONAIS', 4, 'TOSCANI, S. S.; CARISSIMI, A. da S.; OLIVEIRA, R. S. de. Sistemas Operacionais: Série Livros Didáticos Instituto de Informática da UFRGS. 2 ed. Porto Alegre: Sagra Luzzatto, 2001. - TANEMBAUM, A. S. Sistemas Operacionais Modernos. 2 ed. São Paulo: Ed. Prentice Hall, 2003. ISBN 85-87918-57-5. - NEMETH E.; SNYDER, G.; HEIN, TRENT R. Manual Completo do Linux, Guia do Administrador. 2. Ed. São Paulo : Pearson-Prentice Hall, 2007. ISBN 978-85-7605-112-1.', 'OLIVEIRA, R. S., CARISSIMI, A. S., TOSCANI, S. S. Sistemas Operacionais. Porto Alegre : Instituto de Informática da UFRGS: Editora Sagra Luzzatto, 2004.', 'A DEFINIR', ''),
(123, 0, 64, 'Evolução do pensamento administrativo – as escolas de administração. A natureza da ação administrativa. Processos administrativos – planejamento, organização, direção e controle. Tendências da administração.', 'TEORIA GERAL DA ADMINISTRAÇÃO', 4, 'LACAVA KWASNICKA, Eunice. Introdução à Administração. 6.ed. São Paulo: Atlas, 2007. - LACOMBE, Francisco; HEILBORN, Gilberto. Administração: princípios e tendências. São Paulo: Saraiva, 2003 - ROBBINS, Stephen P. Administração: mudanças e perspectivas. São Paulo: Saraiva, 2001 - STONER, J.A F., FREEMAN, R.E. Administração.5ª ed. Rio de Janeiro : LTC, 2002.', 'BERNARDES, C.; MARCONDES, R.C. Teoria Geral da Administração: gerenciando organizações. São Paulo: Saraiva, 2003. - CERTO, Samuel C. Administração Moderna. São Paulo: Prentice Hall, 2003. - CHIAVENATO, Idalberto. Administração nos novos tempos. Rio de Janeiro: Campus, 2004. - MAXIMIANO, Antonio C. Teoria Geral da Administração. São Paulo: Atlas, 1999.', 'A DEFINIR', ''),
(124, 32, 32, 'Abordagens de conteúdos ou temas relacionados à área computacional. A ementa e o plano de ensino serão definidos e aprovados de acordo com os conteúdos e temas propostos.', 'TÓPICOS III', 4, 'A DEFINIR', 'A DEFINIR', 'A DEFINIR', ''),
(125, 32, 32, 'Abordagens de conteúdos ou temas relacionados à área computacional. A ementa e o plano de ensino serão definidos e aprovados de acordo com os conteúdos e temas propostos.', 'TÓPICOS II', 4, 'A DEFINIR', 'A DEFINIR', 'A DEFINIR', ''),
(126, 32, 32, 'Abordagens de conteúdos ou temas relacionados à área computacional. A ementa e o plano de ensino serão definidos e aprovados de acordo com os conteúdos e temas propostos.', 'TÓPICOS I', 4, 'A DEFINIR', 'A DEFINIR', 'A DEFINIR', ''),
(127, 32, 32, 'Conceitos básicos sobre manutenção de software. Manutenabilidade. Processos de Manutenção. Gestão da manutenção de software (processo, planejamento, gestão de configuração, gestão de riscos). Teste de software e teste de regressão. Compreensão de programas. Engenharia reversa. Reengenharia. Ferramentas aplicadas à manutenção.', 'MANUTENÇÃO DE SOFTWARE', 4, 'GLASS, Robert L. Software maintenance guidebooks. Englewood Cliffs : Prentice-Hall, 1981. - GRUBB, P., TAKANG, A. A., Software Maintenance: Concepts and Practice, World Scientific Publishing Company; 2ed., 2003.', 'McCONNELL, Steve. Code Complete: A Practical Handbook of Software Construction. Microsoft Press; 2ed., 2004.', 'A DEFINIR', ''),
(128, 0, 64, 'O Direito como ciência, valor, poder, norma e fato social. Capacidade das pessoas, Noção de Direito das Obrigações, Regras gerais dos Contratos. Direito autoral e legislação de proteção ao software.', 'DIREITO', 4, 'PALAIA, Nelson -Noções Essenciais de Direito, 3a Edição, 2005 Editora Saraiva - MARTINS, Sérgio Pinto. Instituições de Direito Público e Privado, 6o Edição, 2006 Editora Atlas - PAESANI, Liliana Minardi. Direito e Internet, 3a Edição, 2006 Editora Atlas.', 'RODRIGUES, Silvio - Direito Civil vol. I a VII, 2002, Editora Atlas - CORRÊA, Gustavo Testa - Aspectos Jurídicos da Internet, 2000, Editora Saraiva. - Lei 8.078/1990 - Código de Proteção e Defesa do Consumidor.', 'A DEFINIR', ''),
(129, 0, 64, 'Um resgate conceitual e histórico dos modelos de gestão de pessoas. Os processos na área de gestão de pessoas: Recrutamento e Seleção; Cargos e Salários; Treinamento e Desenvolvimento (T&D); Plano de Carreira; Avaliação de Desempenho; Benefícios Sociais; Saúde e Segurança no Trabalho. Perspectivas e tendências da gestão de pessoas.', 'GESTÃO DE PESSOAS', 4, 'ARAÚJO, Luís César G. Gestão de pessoas: estratégias e integração organizacional. S.P.: Atlas, 2008. - AS PESSOAS NA ORGANIZAÇÃO. São Paulo: Editora Gente, 2002. Vários autores. - CHIA VENA TO, Idalberto. Gestão de Pessoas - o novo papel de Recursos Humanos nas organizações. 2.ed. R.J..: Ed. Campus, 2005.', 'DESSLER, Gary. Administração de recursos humanos. 2.ed. S.P.: Prentice Hall, 2003. - LACOMBE, Francisco. Recursos Humanos: princípios e tendências. S.P.: Saraiva, 2005. - RIBEIRO, Antonio de Lima. Gestão de pessoas. S.P.: Saraiva, 2006. - VERGARA, Sylvia Constant. Gestão de pessoas. S.P.: Atlas, 2000.', 'A DEFINIR', ''),
(130, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.', 'INTRODUÇÃO À COMPUTAÇÃO', 5, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(131, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.', 'INTRODUÇÃO À COMPUTAÇÃO ', 6, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(132, 32, 32, 'Lógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; expressões aritméticas e lógicas; estruturas de decisão; estruturas de controle; estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes; funções; recursão. Desenvolvimento de algoritmos. Transcrição de algoritmos para uma linguagem de programação. Domínio de uma linguagem de programação: sintaxe e semântica; estilo de codificação; ambiente de desenvolvimento. Desenvolvimento de pequenos programas.', 'ALGORITMOS E PROGRAMAÇÃO I', 7, 'ASCENCIO, Ana Fernanda Gomes, Fundamentos da programação de computadores :algoritmos, Pascal e C/C++ / Sao Paulo : Pearson Prentice Hall, 2007. viii,434 p.\nFORBELLONE, André L. V.; EBERSPÄCHER, Henri F. Lógica de Programação: A construção de algoritmos e estruturas de dados. 3ª ed. São Paulo: Pearson Prentice Hall, 2005.\nMEDINA, Marco; FERTIG, Cristina. Algoritmos e Programação: Teoria e Prática. 2ª ed. São Paulo: Novatec Editora, 2006.', 'JOSÉ AUGUSTO N. G. MANZANO E WILSON Y. YAMATUMI. Free Pascal - Programação de Computadores – Guia Básico de Orientação e Desenvolvimento para Programação em Linux, MS-Windows e MS-DOS. Editora Erica. 2006\nFIGUEIREDO Jayr de Oliveira, MANZANO, José Augusto N.G. ALGORITMOS Lógica para Desenvolvimento de Programação de Computadores. Editora Érica, 14. ed. São Paulo. 2002.\nANITA LOPES, GUTO GARCIA. Introdução a programação – 500 algoritmos resolvidos. Editora Campus. 2002.\nGUIMARÃES, Ângelo de M.; LAGES, Newton A. de. Algoritmos e Estruturas de Dados. Rio de Janeiro: LTC, 1994.\nSCHILDT, Herbert. C, Completo e Total. 3 ed. São Paulo: Makron Books, 1997.', '\\N', '\\N'),
(133, 32, 32, 'Abstração; classe; objeto; herança; polimorfismo. Interface gráfica, entrada e saída (streams). Tratamento de exceção. Concorrência (threads). Ferramentas de desenvolvimento: testes de unidade; controle de versão e geradores (como GNU Make). Modelagem e especificação elementares de aplicações orientadas a objeto. Projeto orientado a objeto: noções, patterns e arquiteturas. Implementação de aplicações orientadas a objetos.', 'ALGORITMOS E PROGRAMAÇÃO II', 7, '1.DEITEL, H. M. Java: Como Programar. Porto Alegre: Bookman, 2003. ISBN: 8536301236.\n2.SANTOS, Rafael. Introdução à Programação Orientada a Objetos Usando Java. Rio de Janeiro: Elsevier, 2003.\n3.JANDL Junior, Peter, Java: guia do programador / Sao Paulo : Novatec, 2007. 681p.', '1.SINTES, Anthony. Aprenda Programação Orientada a Objetos em 21 Dias. São Paulo: Mackron Books, 2002.\n2.CADENHEAD, Rogers; LEMAY, Laura. Aprenda em 21 dias Java 2. Rio de Janeiro: Elsevier, 2005.\n3.HORSTMANN, Cay S.,, Big Java / Porto Alegre, RS: BOOKMAN, 2004. 1125p.\n4.MEYER, Bertrand. Object-Oriented Software Construction. 2.ed. New Jersey: Prentice Hall, 1997. 1254p.\n5.PAGE-JONES, Meilir. Fundamentos do Desenho Orientado a Objeto com UML. Tradução: Celso Roberto Paschoa. Revisão Técnica: José Davi Furlan. São Paulo: Pearson Education do Brasil, 2001. 462 p.', '\\N', '\\N'),
(134, 16, 48, 'Arquitetura de Sistemas de Banco de Dados: Conceitos básicos. Tipos de\narquiteturas. Usuários de Banco de Dados (Relacional, Rede,\nHierárquico e Orientado a Objetos). Modelagem de Dados: Modelagem\nconceitual de dados. Modelo Entidade Relacionamento (Entidades,\nAtributos, Relacionamentos). Normalização de Dados: Formas Normais\nBanco de Dados Relacional: Mapeamento para o Modelo Relacional.\nDefinição de dados. Manipulação de dados. Esquemas. Otimização.\nSegurança e Integridade de dados. Linguagens de Consulta: Álgebra\nrelacional. Linguagem de Manipulação de Dados. Linguagem de Definição\nde Dados. SQL. Ferramentas CASE: Introdução e aplicação de Ferramentas\nCASE para Banco de Dados.', 'BANCO DE DADOS I', 7, '\\N', '\\N', '\\N', '\\N'),
(135, 16, 48, 'BD Objeto-Relacional: Mapeamento do BD Relacional para Objeto-Relacional. Recursos. Tipos de BD Objeto-Relacional. BD Orientado a Objetos: Tipos de BD OO. Modelagem de um banco de dados OO. Data Warehouse: Conceitos. Consultas em Bases de Dados. Mineração de dados. Softwares e ferramentas de auxílio. Controle de Transações: controle de concorrência e recuperação contra falhas. Mono/Multi-usuário. Operações. Banco de Dados Distribuídos: Armazenamento distribuído. Integração Lógica. Processamento de Consultas. Sistemas homogêneos /heterogêneos. Replicação / Reprodução. Fragmentação. ', 'BANCO DE DADOS II', 7, 'Não está definida no PPC do curso. Ver plano de ensino anterior. \n', 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', '\\N'),
(136, 16, 48, 'Introdução à compilação. Fases da compilação. Ambigüidade. Relações\nsobre gramáticas. Análise sintática ascendente e descendente. Análise\nléxica. Tabelas de símbolos. Análise semântica e geração de código\npara uma máquina virtual. Introdução à otimização de código.', 'COMPILADORES I', 7, '\\N', '\\N', '\\N', '\\N'),
(137, 16, 48, 'Caracterização de software enquanto produto e processo. Gerência de\nprojetos de software: planejamento; métricas; análise e gerência de\nriscos e  acompanhamento de projetos. Controle de qualidade de\nsoftware. Gerência de configuração de software. Engenharia de\nsistemas. Análise e projeto de software. Ferramentas de apoio ao\ndesenvolvimento de software. Noções de tópicos avançados em engenharia\nde software (métodos formais, reengenharia e outros). Técnicas e\nferramentas CASE.', 'ENGENHARIA DE SOFTWARE I', 7, 'SOMMERVILLE, Ian. Engenharia de Software. Addison-Wesley, Oitava Edição, 2007.\nPFLEEGER, Shari L. Software Engineering: Theory and Practice. Prentice-Hall, Terceira Edição, 2006.\nPRESSMAN, Roger S..Engenharia de Software. McGraw-Hill, Sexta Edição, 2006.', 'Guide to the Software Engineering Body of Knowledge. Editado por IEEE Computer Society. Disponível em http://www.swebok.org/. Último acesso em 10/08/2008.\nBRAUDE, Eric. Software Engineering – An Object-Oriented Perspective. John Wiley & Sons, 2001.\nABRAN, Alain and MOORE, James W. Software Engineering Body of Knowledge. Executive Editors: Editors: Pierre Bourque and Robert Dupuis. Chair: Leonard L. Tripp. IEEE Computer Society, 2005.\nBROOKS JR, Frederick P. The Mythical Man-Month – Essays on Software Engineering. Addison-Wesley, 1995.\nMcCONNELL, Steve. Rapid Development - Taming Wild Software Schedules. Microsoft Press, 1996.\nPETERS, James e PEDRYCZ, Witold. Engenharia de Software – Teoria e Prática. Editora Campus, 2001.\nAdvances in Software Engineering. Hakan Erdogmus e Oryl Tanir (Editores). Springer, 2002.\n', '\\N', '\\N'),
(138, 16, 48, 'Tipos abstratos de dados. Estudo das estruturas de dados, conceitos, operações, representações e manipulação de dados estruturados na forma de vetores, matrizes, listas lineares, pilhas, filas, grafos. Estudo da alocação seqüencial e ligada. Listas circulares e duplamente ligadas. Representação de estruturas em árvores. \n', 'ESTRUTURAS DE DADOS I', 7, 'Jayme L. Szwarcfiter e Lilian Markenzon. Estruturas de Dados e seus Algoritmos. LTC, 19A. M. Tenenbaum, Y. Langsam, M. J. Augenstein. Estruturas de Dados Usando C. Pearson Makron Books, 1995.\nE. Horowity, S. Sahni. Fundamentos de Estruturas de Dados. Editora Campus, 1984.', 'A. V. Aho, J. E. Hopcroft, J. D. Ullman, Data Structures and Algorithms, Addison-Wesley, 1987,\nP. Feofiloff. Algoritmos em linguagem C. Elsevier, Campus, 2009. \nNiklaus Wirth. Algoritmos e estruturas de dados. Prentice-Hall do Brasil, 1989.\nM. T. Goodrich et al., Data Structures and Algorithms in Java, John Wiley & Sons, 1998. \nKnuth D. E., The Art of Computer Programming, vol. 1 a 3, Addison-Wesley, 1997\nLEISERSON, Charles, E. RIVEST, Ronald L. CORMEN, Thomas H. Algoritmos - Teoria e Prática, Campus, 2001.\nZiviani N., Projeto de Algoritmos com Implementações em Pascal e C, Livraria Pioneira Editora, São Paulo, 1993.', '\\N', '\\N'),
(139, 16, 48, 'Métodos de ordenação: seleção, troca, distribuição, inserção, intercalação e cálculo de endereços. Pesquisa de dados: seqüencial, binária, hashing, árvores de pesquisa, árvores binárias de pesquisa, árvores AVL, árvores Patrícia, B- Trees. Organização de arquivos. Estudo da complexidade dos métodos \napresentados. \n', 'ESTRUTURAS DE DADOS II', 7, 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', '\\N', '\\N');
INSERT INTO `disciplina` (`id`, `carga_horaria_pratica`, `carga_horaria_teorica`, `ementa`, `nome`, `curso_id`, `bibliografia_basica`, `bibliografia_complementar`, `objetivo_geral`, `codigo`) VALUES
(140, 16, 48, 'Inteligência computacional e conhecimento, representação do conhecimento e formalização, representação abstrata do conhecimento, representação formal do conhecimento, buscas, sistemas baseados no conhecimento, meta- interpretadores, conhecimento disjuntivo, quantificação explícita, cálculo de predicados de primeira ordem, ações e planejamento, decisões sob incerteza, aprendizado. ', 'INTELIGENCIA COMPUTACIONAL', 7, 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', '\\N', '\\N'),
(141, 0, 32, 'Introdução aos autômatos finitos. Representações estruturais.\nAutômatos e complexidade. Provas formais. Alfabetos, cadeias de\ncaracteres, linguagens. Autômatos finitos: regras e protocolos.\nAutômatos finitos determinísticos e não-determinísticos. Expressões\nregulares e suas propriedades. Gramáticas Livres de Contexto:\nlinguagens e aplicações, ambigüidade. Máquinas de Turing: programas,\nnotações, diagramas de transição, linguagens.', 'LINGUAGENS FORMAIS', 7, '1. HOPCROFT, John E.; ULLMAN, Jeffrey D.; MOTWANI, Rajeev; Introdução à Teoria de Autômatos, Linguagens e Computação; tradução da 2a edição original; Rio de Janeiro: Campus; 2003.\n2. MENEZES, Paulo F. Blauth. Linguagens Formais e Autômatos; 4a edição; Porto Alegre: Sagra-Luzzatto, 2001. \n3. SIMON, Imre. Linguagens Formais e Autômatos;  Segunda Escola de Computação - Instituto de Matematica, Estatistica e Ciencia da Computação da UNICAMP , 1981. ', '1. LEWIS, Harry R., PAPADIMITRIOU, Christos H. Elementos de Teoria da Computação; tradução da 2a edição original; Porto Alegre: Bookman, 2000. \n2. FLOYD, Robert, BEIGEL, Richard. The Language of Machines. Computer Science Press, New York, 1997. \n3. HAREL, David. Algorithmics: The spirit of computing. 2nd. ed., Addison-Wesley, Reading, MA, 1993. \n4. YAN, Song Y. Algorithmics: An Introduction to formal languages and machine computation. Singapore  World Science, 1998.\n5. KELLEY, Dean. Automata and formal Languages. Prentice Hall Press, 2004.', '\\N', '\\N'),
(142, 0, 64, 'Conceitos básicos. Tipos, comandos, estruturas de controle, unidades,\ngerenciamento de memória e aspectos de implementação. Linguagens\nimperativas. Linguagens orientadas a objetos. Linguagens funcionais.\nLinguagens lógicas. Linguagens concorrentes.', 'PARADIGMAS DE LINGUAGEM DE PROGRAMAÇÃO', 7, '\\N', '\\N', '\\N', '\\N'),
(143, 16, 48, 'Comunicação e sincronização em sistemas distribuídos. Protocolos. Sistemas operacionais distribuídos e de rede. Comunicação interprocessos. RPC (Remote Procedure Calling). Estudos de casos: modelos de sistemas de arquivos distribuídos. Serviços de nomes. Tempo e coordenação. Replicação. Transações e dados compartilhados. Controle de concorrência. Transações distribuídas. Tolerância a falhas. Tipos e motivação para aplicações distribuídas. Primitivas básicas de programação distribuída: controle de tarefas, comunicação e sincronização. Características básicas das primitivas. Tipos de linguagens e programas. Atividades em laboratório. \n', 'SISTEMAS DISTRIBUÍDOS I', 7, 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', '\\N', '\\N'),
(144, 16, 48, 'Objetivos e funções de um sistema operacional, evolução, principais contribuições, exemplos. Processos: estados, descrição, controle, fluxos de execução. Concorrência: princípios, exclusão mútua, impasse, problemas clássicos. Comunicação entre processos. Memória: requisitos de um gerenciador de memória, carga de programas, memória virtual, paginação, segmentação, exemplos. Agendamento de CPU: tipos, algoritmos, multiprocessamento, tempo-real. Gerenciamento de entrada/saída. Dispositivos de entrada e saída; funções dos dispositivos, aspectos de gerenciamento, discos. Sistemas de arquivos: organização, acesso, diretórios, registros, hierarquia, proteção, organização, segurança. Estudo de casos. ', 'SISTEMAS OPERACIONAIS I', 7, 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', '\\N', '\\N'),
(145, 10, 50, 'Técnicas básicas de Computação Gráfica; Classes de Dados; Visualização\nCientífica: escalares, vetoriais, tensoriais e amostrados;\nVisualização de Informação: dados sequenciais, hierárquicos,\nrelacionais, multivariáveis; Interações e Análises.', 'TÓPICOS ', 7, 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', 'Não está definida no PPC do curso. Ver plano de ensino anterior. ', '\\N', '\\N'),
(146, 0, 64, 'Etapas do processo de engenharia de sistema de informação (SI). Processos de desenvolvimento. Tipos de sistemas de informação: Sistemas Corporativos (CRM, DBM, ERP, Portais Corporativos e E-Learning, B2B, B2C, EDI), Sistemas de Gestão Eletrônica de Documentos (GED), Sistemas de Workflow e Aplicações WEB. Arquitetura de Gestão dos SI.', 'TÓPICOS EM ENGENHARIA DE SISTEMAS DE INFORMACOES 2', 7, 'Sommerville, Ian. Engenharia de Software - 8a edição - Addison Wesley. 2007\nLanger, Arthur M - Analysis and design of information systems.  Springer, 2001 \nLaudon, Kenneth C - Essentials of management information systems : organization and technology in the networked enterprise - Prentice Hall - 2001', 'Pressman R. Software engineering : a practitioner''s approach - 6a edição - McGraw-Hill. 2005\nPost, Gerald V , Anderson L. David . Management information systems : solving business problems with information tecnology. Irwin/McGraw-Hill, 2003\nJunior C, Cícero - Sistemas integrados de gestão - ERP : uma abordagem gerencial - IBPEX, 2008\nBrien, James A. Sistema de informação e as decisões gerenciais na era da internet. 3ª ed. Saraiva. 2010\nLaudon C. Kenneth, Laudon P. Jane. Sistemas de Informação Gerenciais. Pearson Education, 2009', '\\N', '\\N'),
(147, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.', 'INTRODUÇÃO À COMPUTAÇÃO ', 8, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(148, 15, 45, 'Lógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; expressões aritméticas e lógicas; estruturas de decisão; estruturas de controle; estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes; funções; recursão. Desenvolvimento de algoritmos. Transcrição de algoritmos para uma linguagem de programação. Domínio de uma linguagem de programação: sintaxe e semântica; estilo de codificação; ambiente de desenvolvimento. Desenvolvimento de pequenos programas.', 'ALGORITMOS E PROGRAMAÇÃO I', 9, 'FORBELLONE, A. L. V. Lógica de Programação: A construção de algoritmos e estrutura de dados. 3ª edição. Makron Books, 2005.\nDEITEL, H. M., Java: Como Programar. São Paulo: Pearson, 6 ed. 2007.', 'ASCENCIO, A. F. G. e CAMPOS, E. A. V. Fundamentos da Programação de Computadores. 2ª Edição. Prentice Hall, 2007.\nFARRER, H. et al. Algoritmos Estruturados. 3ª Edição. LTC, 1999.\nGUIMARÃES, A. M., LAGES, N. A. C. Algoritmos e Estruturas de Dados. LTC, 1994.\nHOLLOWAY, J. P., Introdução à Programação para Engenharia. LTC, 2006.', '\\N', '\\N'),
(149, 32, 32, 'Abstração; classe; objeto; herança; polimorfismo. Interface gráfica, entrada e saída (streams). Tratamento de exceção. Concorrência (threads). Ferramentas de desenvolvimento: testes de unidade; controle de versão e geradores (como GNU Make). Modelagem e especificação elementares de aplicações orientadas a objeto. Projeto orientado a objeto: noções, patterns e arquiteturas. Implementação de aplicações orientadas a objetos.', 'ALGORITMOS E PROGRAMAÇÃO II', 7, '1.DEITEL, H. M. Java: Como Programar. Porto Alegre: Bookman, 2003. ISBN: 8536301236.\n2.SANTOS, Rafael. Introdução à Programação Orientada a Objetos Usando Java. Rio de Janeiro: Elsevier, 2003.\n3.JANDL Junior, Peter, Java: guia do programador / Sao Paulo : Novatec, 2007. 681p.', '1.SINTES, Anthony. Aprenda Programação Orientada a Objetos em 21 Dias. São Paulo: Mackron Books, 2002.\n2.CADENHEAD, Rogers; LEMAY, Laura. Aprenda em 21 dias Java 2. Rio de Janeiro: Elsevier, 2005.\n3.HORSTMANN, Cay S.,, Big Java / Porto Alegre, RS: BOOKMAN, 2004. 1125p.\n4.MEYER, Bertrand. Object-Oriented Software Construction. 2.ed. New Jersey: Prentice Hall, 1997. 1254p.\n5.PAGE-JONES, Meilir. Fundamentos do Desenho Orientado a Objeto com UML. Tradução: Celso Roberto Paschoa. Revisão Técnica: José Davi Furlan. São Paulo: Pearson Education do Brasil, 2001. 462 p.', '\\N', '\\N'),
(150, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.\n', 'INTRODUÇÃO À COMPUTAÇÃO', 10, '\nFORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(151, 30, 60, 'Conceitos básicos de computação: Hardware e software. Noções de sistemas operacionais. Lógica de programação: algoritmos. Implementação em uma linguagem de programação.', 'PROCESSAMENTO DE DADOS', 11, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(152, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.\n', 'INTRODUÇÃO À COMPUTAÇÃO', 12, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.\n', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(153, 0, 64, '\\N', 'ESTRUTURAS DE DADOS E PROJETO DE ALGORITMOS', 13, '\\N', '\\N', '', '\\N'),
(154, 30, 30, '\\N', 'PROCESSAMENTO DIGITAL DE IMAGENS', 13, '\\N', '\\N', '\\N', '\\N'),
(155, 0, 60, '\\N', 'RECUPERAÇÃO DA INFORMAÇÃO', 13, '\\N', '\\N', '\\N', '\\N'),
(156, 0, 30, 'Esta é uma disciplina que consiste numa série de seminários dentro de \ncada área de concentração, coordenados por um professor responsável \npela disciplina. O estudante inscrito nesta disciplina, além de assistir aos \nseminários apresentados por seus colegas, professores do programa ou \npalestrantes convidados, deverá apresentar pelo menos um seminário \ndurante o período em que estiver matriculado na disciplina,  tendo por tema \num tópico relacionado a sua dissertação de mestrado.', 'SEMINÁRIOS', 13, '\\N', '\\N', '\\N', '\\N'),
(157, 0, 60, '\\N', 'REDES DEFINIDAS POR SOFTWARE', 13, '\\N', '\\N', '\\N', '\\N'),
(158, 0, 60, '\\N', 'METAHEURÍSTICAS APLICADAS', 13, '\\N', '\\N', '\\N', '\\N'),
(159, 0, 60, '\\N', 'ENGENHARIA DE SOFTWARE', 13, '\\N', '\\N', '\\N', '\\N'),
(160, 0, 64, '\\N', 'PROGRAMAÇÃO PARALELA E DISTRIBUÍDA', 13, '\\N', '\\N', '\\N', '\\N'),
(161, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.\n', 'INTRODUÇÃO A COMPUTAÇÃO', 16, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(162, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.\n', 'INTRODUÇÃO À COMPUTAÇÃO', 17, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(163, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.', 'INTRODUÇÃO À COMPUTAÇÃO ', 18, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(164, 16, 48, 'Inteligência computacional e conhecimento, representação do conhecimento e formalização, representação abstrata do conhecimento, representação formal do conhecimento, buscas, sistemas baseados no conhecimento, meta- interpretadores, conhecimento disjuntivo, quantificação explícita, cálculo de predicados de primeira ordem, ações e planejamento, decisões sob incerteza, aprendizado.', 'INTELIGENCIA COMPUTACIONAL', 7, 'NSA', 'NSA', 'NSA', 'NSA'),
(165, 15, 45, 'Abstração; classe; objeto; herança; polimorfismo. Interface gráfica, entrada e saída (streams). Tratamento de exceção. Concorrência (threads). Ferramentas de desenvolvimento: testes de unidade; controle de versão e geradores (como GNU Make). Modelagem e especificação elementares de aplicações orientadas a objeto. Projeto orientado a objeto: noções, patterns e arquiteturas. Implementação de aplicações orientadas a objetos.', 'ALGORITMOS E PROGRAMAÇÃO II', 9, 'DEITEL, Paul J; DEITEL, Harvey M. Java: como programar. 8.ed. Sao Paulo: Pearson Education do Brasil, 2010, 1144 p., ISBN 9788576055631.', 'The Java™ Tutorials (Oracle Tutorials and reference guides for the Java Programming Language) em: http://download.oracle.com/javase/tutorial/\nWU, C. Thomas. An introduction to object-oriented programming with Java. 5th ed. -. Boston: McGraw Hill Higher Education, c2010, 987 p., ISBN 0073523305.\n', '\\N', '\\N'),
(166, 0, 60, '\\N', 'INTRODUÇÃO À INTELIGÊNCIA COMPUTACIONAL', 13, '\\N', '\\N', '\\N', '\\N'),
(167, 0, 60, '\\N', 'METODOLOGIA CIENTÍFICA', 13, '\\N', '\\N', '\\N', '\\N'),
(168, 0, 60, '\\N', 'PROGRAMAÇÃO LINEAR', 13, '\\N', '\\N', '\\N', '\\N'),
(169, 0, 64, 'Conceituação de computador, informática e software. Histórico da computação e de sistemas de informação. Conceitos, objetivos, tipos, funções, organização e componentes dos sistemas de informação. Sistemas de informação empresariais, empresa digital, tipos de sistemas de informação empresariais. Infra-estrutura de tecnologia de informação: hardware e software, bancos de dados, telecomunicações, Internet e redes. Aplicações de sistemas de informação: sistemas integrados, comércio eletrônico, gestão do conhecimento e sistemas de apoio à decisão. Desenvolvimento e gerenciamento de sistemas de informação. Aspectos de segurança, éticos e sociais.', 'INTRODUÇÃO A SISTEMAS DE INFORMAÇÃO', 3, 'LAUDON, Kenneth C.; LAUDON, Jane P., Sistemas de Informação Gerenciais, 7ª. Edição, Prentice Hall Brasil, 2007.\nAUDY, J. L. N.; ANDRADE, G. K.; CIDRAL, A. Fundamento de Sistemas de Informação. Porto alegre: Bookman, 2005.\nO’BRIEN, James, Sistemas de Informação, 2ª. Edição, Editora Saraiva, 2006.', 'TAIR, R. M. Princípios de Sistemas de Informações. São Paulo :LTC, 1998.', '\\N', '\\N'),
(170, 15, 45, 'Métodos de ordenação: seleção, troca, distribuição, inserção, intercalação e cálculo de endereços. Pesquisa de dados: seqüencial, binária, hashing, árvores de pesquisa, árvores binárias de pesquisa, árvores AVL, árvores Patrícia, B- Trees. Organização de arquivos. Estudo da complexidade dos métodos \n', 'ESTRUTURAS DE DADOS II', 7, 'N. ZIVIANI, Projeto de Algoritmos com Implementações em JAVA e C++, Thomsom, 2007.', 'T. H. CORMEN et al., Algoritmos - Teoria e Prática, Campus, 2001.\nH. M. DEITEL, P. J. DEITEL, Java Como Programar. Pearson, sexta edição, 2005.', '\\N', '\\N'),
(171, 15, 45, 'Objetivos e funções de um sistema operacional, evolução, principais contribuições, exemplos. Processos: estados, descrição, controle, fluxos de execução. Concorrência: princípios, exclusão mútua, impasse, problemas clássicos. Comunicação entre processos. Memória: requisitos de um gerenciador de memória, carga de programas, memória virtual, paginação, segmentação, exemplos. Agendamento de CPU: tipos, algoritmos, multiprocessamento, tempo-real. Gerenciamento de entrada/saída. Dispositivos de entrada e saída; funções dos dispositivos, aspectos de gerenciamento, discos. Sistemas de arquivos: organização, acesso, diretórios, registros, hierarquia, proteção, organização, segurança. Estudo de casos. ', 'SISTEMAS OPERACIONAIS', 7, 'TANENBAUM, Andrew S. Sistemas Operacionais Modernos, 2a Edição, Prentice Hall, 2003.', 'SILBERSCHATZ, A. “Fundamentos de Sistemas Operacionais”, 6a Edição, LTC, 2004.\nTOSCANI, Simão. [et al] Sistemas Operacionais, 4a Edição; Sagra-Luzzato, 2010.', '\\N', '\\N'),
(172, 15, 45, 'Comunicação e sincronização em sistemas distribuídos. Protocolos. Sistemas operacionais distribuídos e de rede. Comunicação interprocessos. RPC (Remote Procedure Calling). Estudos de casos: modelos de sistemas de arquivos distribuídos. Serviços de nomes. Tempo e coordenação. Replicação. Transações e dados compartilhados. Controle de concorrência. Transações distribuídas. Tolerância a falhas. Tipos e motivação para aplicações distribuídas. Primitivas básicas de programação distribuída: controle de tarefas, comunicação e sincronização. Características básicas das primitivas. Tipos de linguagens e programas. Atividades em laboratório. \n', 'SISTEMAS DISTRIBUÍDOS I', 7, 'COULOURIS, G.F., J. Dollimore and T. Kindberg. Distributed Systems: Concepts and Design. 4th edition. Addison Wesley, 2005.', 'KUROSE, J.F. & ROSS, K.W., Redes de Computadores e a Internet: Uma abordagem top-down, 3a. Edição, Addison Wesley/Pearson, 2006.\nTANENBAUM, A.S. and STEEN, M. van . Distributed Systems: Principles and Paradigms. Prentice Hall, 2a Edição, 2006.', '\\N', '\\N'),
(173, 15, 45, 'Arquitetura de Sistemas de Banco de Dados: Conceitos básicos. Tipos de\narquiteturas. Usuários de Banco de Dados (Relacional, Rede,\nHierárquico e Orientado a Objetos). Modelagem de Dados: Modelagem\nconceitual de dados. Modelo Entidade Relacionamento (Entidades,\nAtributos, Relacionamentos). Normalização de Dados: Formas Normais\nBanco de Dados Relacional: Mapeamento para o Modelo Relacional.\nDefinição de dados. Manipulação de dados. Esquemas. Otimização.\nSegurança e Integridade de dados. Linguagens de Consulta: Álgebra\nrelacional. Linguagem de Manipulação de Dados. Linguagem de Definição\nde Dados. SQL. Ferramentas CASE: Introdução e aplicação de Ferramentas\nCASE para Banco de Dados.', 'BANCO DE DADOS I', 7, '\\N', '\\N', '\\N', '\\N'),
(174, 15, 45, 'Tipos abstratos de dados. Estudo das estruturas de dados, conceitos, operações, representações e manipulação de dados estruturados na forma de vetores, matrizes, listas lineares, pilhas, filas, grafos. Estudo da alocação seqüencial e ligada. Listas circulares e duplamente ligadas. Representação de estruturas em árvores. \n', 'ESTRUTURAS DE DADOS I', 7, 'Jayme L. Szwarcfiter e Lilian Markenzon. Estruturas de Dados e seus Algoritmos. LTC, 19A. M. Tenenbaum, Y. Langsam, M. J. Augenstein. Estruturas de Dados Usando C. Pearson Makron Books, 1995.\n', 'A. V. Aho, J. E. Hopcroft, J. D. Ullman, Data Structures and Algorithms, Addison-Wesley, 1987,\nP. Feofiloff. Algoritmos em linguagem C. Elsevier, Campus, 2009. \nNiklaus Wirth. Algoritmos e estruturas de dados. Prentice-Hall do Brasil, 1989.\nM. T. Goodrich et al., Data Structures and Algorithms in Java, John Wiley & Sons, 1998. \n\nKnuth D. E., The Art of Computer Programming, vol. 1 a 3, Addison-Wesley, 1997\nLEISERSON, Charles, E. RIVEST, Ronald L. CORMEN, Thomas H. Algoritmos - Teoria e Prática, Campus, 2001.\nZiviani N., Projeto de Algoritmos com Implementações em Pascal e C, Livraria Pioneira Editora, São Paulo, 1993.', '\\N', '\\N'),
(175, 0, 30, 'Introdução aos autômatos finitos. Representações estruturais.\nAutômatos e complexidade. Provas formais. Alfabetos, cadeias de\ncaracteres, linguagens. Autômatos finitos: regras e protocolos.\nAutômatos finitos determinísticos e não-determinísticos. Expressões\nregulares e suas propriedades. Gramáticas Livres de Contexto:\nlinguagens e aplicações, ambigüidade. Máquinas de Turing: programas,\nnotações, diagramas de transição, linguagens.', 'LINGUAGENS FORMAIS', 7, '1. HOPCROFT, John E.; ULLMAN, Jeffrey D.; MOTWANI, Rajeev; Introdução à Teoria de Autômatos, Linguagens e Computação; tradução da 2a edição original; Rio de Janeiro: Campus; 2003.\n2. MENEZES, Paulo F. Blauth. Linguagens Formais e Autômatos; 4a edição; Porto Alegre: Sagra-Luzzatto, 2001. \n3. SIMON, Imre. Linguagens Formais e Autômatos;  Segunda Escola de Computação - Instituto de Matematica, Estatistica e Ciencia da Computação da UNICAMP , 1981. ', '1. LEWIS, Harry R., PAPADIMITRIOU, Christos H. Elementos de Teoria da Computação; tradução da 2a edição original; Porto Alegre: Bookman, 2000. \n2. FLOYD, Robert, BEIGEL, Richard. The Language of Machines. Computer Science Press, New York, 1997. \n3. HAREL, David. Algorithmics: The spirit of computing. 2nd. ed., Addison-Wesley, Reading, MA, 1993. \n4. YAN, Song Y. Algorithmics: An Introduction to formal languages and machine computation. Singapore  World Science, 1998.\n5. KELLEY, Dean. Automata and formal Languages. Prentice Hall Press, 2004.', '\\N', '\\N'),
(176, 15, 45, 'Caracterização de software enquanto produto e processo. Gerência de\nprojetos de software: planejamento; métricas; análise e gerência de\nriscos e  acompanhamento de projetos. Controle de qualidade de\nsoftware. Gerência de configuração de software. Engenharia de\nsistemas. Análise e projeto de software. Ferramentas de apoio ao\ndesenvolvimento de software. Noções de tópicos avançados em engenharia\nde software (métodos formais, reengenharia e outros). Técnicas e\nferramentas CASE.', 'ENGENHARIA DE SOFTWARE I', 7, 'SOMMERVILLE, Ian. Engenharia de Software. Addison-Wesley, Oitava Edição, 2007.\nPFLEEGER, Shari L. Software Engineering: Theory and Practice. Prentice-Hall, Terceira Edição, 2006.\nPRESSMAN, Roger S..Engenharia de Software. McGraw-Hill, Sexta Edição, 2006.', 'Guide to the Software Engineering Body of Knowledge. Editado por IEEE Computer Society. Disponível em http://www.swebok.org/. Último acesso em 10/08/2008.\nBRAUDE, Eric. Software Engineering – An Object-Oriented Perspective. John Wiley & Sons, 2001.\nABRAN, Alain and MOORE, James W. Software Engineering Body of Knowledge. Executive Editors: Editors: Pierre Bourque and Robert Dupuis. Chair: Leonard L. Tripp. IEEE Computer Society, 2005.\nBROOKS JR, Frederick P. The Mythical Man-Month – Essays on Software Engineering. Addison-Wesley, 1995.\nMcCONNELL, Steve. Rapid Development - Taming Wild Software Schedules. Microsoft Press, 1996.\nPETERS, James e PEDRYCZ, Witold. Engenharia de Software – Teoria e Prática. Editora Campus, 2001.\nAdvances in Software Engineering. Hakan Erdogmus e Oryl Tanir (Editores). Springer, 2002.', '\\N', '\\N'),
(177, 30, 30, 'Introdução à compilação. Fases da compilação. Ambigüidade. Relações\nsobre gramáticas. Análise sintática ascendente e descendente. Análise\nléxica. Tabelas de símbolos. Análise semântica e geração de código\npara uma máquina virtual. Introdução à otimização de código.', 'COMPILADORES I', 7, '\\N', '\\N', '\\N', '\\N'),
(178, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.', 'INTRODUÇÃO À COMPUTAÇÃO ', 19, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(179, 32, 32, 'Conceitos básicos: Noções de lógica de programação; tipos primitivos; constantes e variáveis; operadores; expressões. Comandos básicos: atribuição, entrada e saída. Estruturas de controle: seleção e repetição. Estruturas de dados homogêneas: vetores e matrizes. Modularização. Desenvolvimento de programas utilizando uma linguagem de alto nível.', 'INTRODUÇÃO À COMPUTAÇÃO ', 20, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.', 'FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\nSOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.\nSCHILDT, H.; C - Completo e Total; Makron Books, 1996.', '\\N', '\\N'),
(180, 15, 45, 'Arquitetura de Sistemas de Banco de Dados: Conceitos básicos. Tipos de arquiteturas. Usuários de Banco de Dados (Relacional, Rede, Hierárquico e Orientado a Objetos). Modelagem de Dados: Modelagem conceitual de dados. Modelo Entidade Relacionamento (Entidades, Atributos, Relacionamentos). Normalização de Dados: Formas Normais Banco de Dados Relacional: Mapeamento para o Modelo Relacional. Definição de dados. Manipulação de dados. Esquemas. Otimização. Segurança e Integridade de dados. Linguagens de Consulta: Álgebra relacional. Linguagem de Manipulação de Dados. Linguagem de Definição de Dados. SQL. Ferramentas CASE: Introdução e aplicação de Ferramentas CASE para Banco de Dados.', 'BANCO DE DADOS I', 9, '\\N', '\\N', '\\N', '\\N'),
(181, 32, 32, 'Sistemas de bancos de dados. Projeto de banco de dados. Modelo entidade-relacionamento. Modelo relacional. Álgebra relacional. Normalização. SQL. ', 'BANCO DE DADOS', 3, '\\N', '\\N', '\\N', '\\N'),
(1000003, 30, 30, 'aaa', 'Teste de Inclusão', 1, 'aaa', 'aaa', 'aaa', '');

-- --------------------------------------------------------

--
-- Estrutura da tabela `itemcronograma`
--

CREATE TABLE IF NOT EXISTS `itemcronograma` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `inicio` timestamp NULL DEFAULT NULL,
  `numeroaulas` int(10) unsigned DEFAULT NULL,
  `procedimentodidatico` char(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `topico` text COLLATE utf8_unicode_ci,
  `plano_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `itemcronograma_FKIndex2` (`plano_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=6450 ;

--
-- Extraindo dados da tabela `itemcronograma`
--

INSERT INTO `itemcronograma` (`id`, `inicio`, `numeroaulas`, `procedimentodidatico`, `topico`, `plano_id`) VALUES
(2930, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação da disciplina.', 206),
(2932, '2013-08-26 15:00:00', 2, 'AEX,RE', 'Noções de lógica matemática.', 206),
(2933, '2013-08-28 15:00:00', 8, 'AEX,RE', 'Técnicas de demonstração.', 206),
(2936, '2013-09-11 15:00:00', 4, 'AEX,RE', 'Conjuntos', 206),
(2947, '2013-08-20 15:00:00', 6, 'AEX/RE', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados', 209),
(2948, '2013-08-30 15:00:00', 28, 'AEX/RE/AP/TG', '2. O Modelo Relacional', 209),
(2949, '2013-10-29 14:00:00', 12, 'AEX/RE/AP/TG', '3. Modelagem de Dados usando o Modelo E/R', 209),
(2950, '2013-11-19 14:00:00', 18, 'AEX/RE/APR/TG', '4. Projeto de Banco de Dados Relacional', 209),
(2951, '2013-09-23 15:00:00', 12, 'AEX,RE', 'Relações: introdução, operações, propriedades, relações de equivalência e ordem parcial.', 206),
(2952, '2013-10-02 15:00:00', 2, 'OTR', 'Prova 1', 206),
(2953, '2013-10-30 14:00:00', 4, 'AEX,RE', 'Funções', 206),
(2954, '2013-11-04 14:00:00', 8, 'AEX,RE', 'Indução matemática e recursão', 206),
(2956, '2013-11-18 14:00:00', 2, 'OTR', 'Prova 2', 206),
(2957, '2013-11-20 14:00:00', 6, 'AEX,RE', 'Matrizes e sistemas de equações lineares.', 206),
(2958, '2013-12-02 14:00:00', 10, 'AEX,RE', 'Introdução à Teoria dos Grafos', 206),
(2959, '2013-12-23 14:00:00', 2, 'OTR', 'Entrega das avaliações e da média final.', 206),
(2960, '2013-12-18 14:00:00', 2, 'OTR', 'Prova 3', 206),
(2961, '2012-10-18 15:00:00', 2, 'AEX', 'Apresentação da disciplina / Motivação, objetivos, organização, ementa, conteúdo programático, bibliografias, avaliações\n', 211),
(2962, '2012-10-23 14:00:00', 8, 'AEX, AP', 'Introdução aos Sistemas Operacionais \n', 211),
(2963, '2012-11-06 14:00:00', 8, 'AEX, AP', 'Gerência de Processos \n', 211),
(2964, '2012-11-22 14:00:00', 2, 'OTR', 'Simulado para a prova 1 ', 211),
(2965, '2012-11-27 14:00:00', 2, 'OTR', 'Prova 1', 211),
(2967, '2012-11-29 14:00:00', 8, 'AEX, TG, AP', 'Gerência de memória', 211),
(2968, '2012-12-13 14:00:00', 8, 'AEX, TG, AP', 'Dispositivos de entrada e saída', 211),
(2969, '2013-01-10 14:00:00', 2, 'OTR', 'Simulado para a prova 2', 211),
(2970, '2013-01-15 14:00:00', 2, 'OTR', 'Prova 2', 211),
(2971, '2013-01-17 14:00:00', 8, 'AEX, TG, AP', 'Gerência de Sistemas de Arquivos', 211),
(2972, '2013-01-31 14:00:00', 8, 'AEX, TG, AP', 'Projeto e estudo de caso', 211),
(2973, '2013-02-19 15:00:00', 2, 'OTR', 'Simulado para a prova 3', 211),
(2974, '2013-02-21 15:00:00', 2, 'OTR', 'Prova 3', 211),
(2975, '2013-02-26 15:00:00', 2, 'OTR', 'Entrega da prova 3 revisão de notas', 211),
(2976, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação da disciplina / Motivação, objetivos, organização, ementa, conteúdo programático, bibliografias, avaliações', 212),
(2977, '2013-08-26 15:00:00', 18, 'AEX, AP', 'Camada de Enlace', 212),
(2979, '2013-10-17 15:00:00', 2, 'OTR', 'Prova 1', 212),
(2980, '2013-09-26 15:00:00', 22, 'AEX, AP, RE', 'Camada física e comunicação sem fio', 212),
(2982, '2013-12-12 14:00:00', 2, 'OTR', 'Prova 2', 212),
(2983, '2013-11-14 14:00:00', 6, 'AEX, AP, RE', 'Gerenciamento de redes', 212),
(2984, '2013-11-25 14:00:00', 6, 'AEX', 'Segurança', 212),
(2988, '2013-12-19 14:00:00', 2, 'OTR', 'Entrega dos resultados finais', 212),
(2989, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação do Plano de Ensino; Motivação; 1.  Introdução às Linguagens Formais e Hierarquia de Chomsky.', 210),
(2990, '2013-08-23 15:00:00', 2, 'AEX', 'Revisão de Fundamentos Matemáticos', 210),
(2991, '2013-08-27 15:00:00', 2, 'AEX, RE', 'Alfabetos e Linguagens', 210),
(2992, '2013-08-30 15:00:00', 18, 'AEX, RE, LEX', 'Linguagens Regulares: \n + Autômatos Finitos\n + Não-determinismo e equivalência entre autômatos\n + Expressões Regulares\n + Minimização de Autômatos\n + Linguagens não-regulares', 210),
(2993, '2013-10-04 15:00:00', 20, 'AEX, LEX', 'Gramáticas Livres de Contexto:\n+ Gramáticas regulares e livres de contexto\n+ derivação e ambiguidade, \n+ formas normais de Chomsky e de Greibach\n', 210),
(2994, '2013-11-26 14:00:00', 8, 'AEX, RE', 'Autômatos com pilha:\n+ Variações de autômatos com pilha\n+ Automatos com Pilha e gramáticas livres de contexto.\n', 210),
(2995, '2013-12-10 14:00:00', 6, 'AEX, RE', 'Máquinas de Turing', 210),
(2996, '2013-09-20 15:00:00', 2, 'OTR', 'Prova 1', 210),
(2997, '2013-08-20 15:00:00', 2, 'RE', 'Apresentação do Plano de Disciplina:\n- Objetivos\n- Programação de aulas\n- Metodologia\n- Avaliações\n- Critérios de aprovação\n', 215),
(2998, '2013-08-22 15:00:00', 4, 'RE', 'Conceitos básicos:\n- Lógica Formal\n- Dedução e Indução\n- Lógica Clássica e Lógica Simbólica\n- Proposições e Predicados\n- Princípios da Lógica\n', 215),
(3000, '2013-08-27 15:00:00', 28, 'RE', 'Cálculo Proposicional:\n- Proposições simples e compostas\n- Operações lógicas sobre proposições\n- Fórmulas bem formadas\n- Construção de tabelas-verdade\n- Tautologias, contradições e contingências\n- Equivalência e inferência lógica\n- Formas normais\n- Sistemas dedutivos\n', 215),
(3001, '2013-10-17 15:00:00', 24, 'RE', 'Cálculo de Predicados:\n- Predicados, termos constantes e variáveis\n- Operações lógicas\n- Quantificadores\n- Representação clausal\n- Resolução e Refutação\n', 215),
(3003, '2013-12-03 14:00:00', 6, 'AP', 'Programação em Lógica:\n- Resolução SLD\n- Noções básicas da linguagem Prolog\n', 215),
(3009, '2013-12-10 14:00:00', 0, 'ED,OTR', 'Término das aulas\n\nObs.: Algumas aulas poderão ser ministradas de forma não presencial, sendo acompanhadas através de atividades no ambiente virtual Moodle, divulgadas previamente.\n', 215),
(3012, '2013-08-20 15:00:00', 2, 'RE', 'Apresentação do Plano de Disciplina:\n- Objetivos\n- Programação de aulas\n- Metodologia\n- Avaliações\n- Critérios de aprovação', 218),
(3013, '2013-08-22 15:00:00', 4, 'RE', 'Conceitos básicos:\n- Lógica Formal\n- Dedução e Indução\n- Lógica Clássica e Lógica Simbólica\n- Proposições e Predicados\n- Princípios da Lógica', 218),
(3014, '2013-08-27 15:00:00', 28, 'RE', 'Cálculo Proposicional:\n- Proposições simples e compostas\n- Operações lógicas sobre proposições\n- Fórmulas bem formadas\n- Construção de tabelas-verdade\n- Tautologias, contradições e contingências\n- Equivalência e inferência lógica\n- Formas normais\n- Sistemas dedutivos', 218),
(3015, '2013-10-17 15:00:00', 24, 'RE', 'Cálculo de Predicados:\n- Predicados, termos constantes e variáveis\n- Operações lógicas\n- Quantificadores\n- Representação clausal\n- Resolução e Refutação', 218),
(3016, '2013-12-03 14:00:00', 6, 'AP', 'Programação em Lógica:\n- Resolução SLD\n- Noções básicas da linguagem Prolog', 218),
(3017, '2013-12-10 14:00:00', 0, 'ED,OTR', 'Término das aulas\n\nObs.: Algumas aulas poderão ser ministradas de forma não presencial, sendo acompanhadas através de atividades no ambiente virtual Moodle, divulgadas previamente.\n', 218),
(3018, '2013-08-26 15:00:00', 2, 'OTR,AEX', 'Apresentação do Programa\n•	Explanação sobre conteúdos a serem abordados ao longo do curso \n•	Critérios de Avaliação\n•	Bibliografia\n•	Motivação/expectativas para a disciplina\n', 214),
(3019, '2013-09-02 15:00:00', 12, 'AEX', 'código de ética', 214),
(3022, '2013-11-04 14:00:00', 4, 'AEX', 'Legislação Brasileira e Crimes de Informática', 214),
(3027, '2013-10-14 15:00:00', 4, 'AEX', 'Aspectos Sociotécnicos', 214),
(3028, '2013-12-09 14:00:00', 2, 'AEX', 'Entrega de Notas e Trabalhos', 214),
(3029, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação da disciplina, motivação, objetivos e\ncritérios de avaliação.', 220),
(3030, '2013-08-23 15:00:00', 6, 'AEX', 'Introdução às LPs', 220),
(3031, '2013-09-03 15:00:00', 6, 'AEX,AP', 'Sintaxe e Semântica\n', 220),
(3032, '2013-09-13 15:00:00', 8, 'AEX,AP', 'Nomes, vinculações, tipos e escopo', 220),
(3033, '2013-09-27 15:00:00', 2, 'OTR', 'Prova 1', 220),
(3034, '2013-10-01 15:00:00', 6, 'AEX,AP', 'Tipos de dados', 220),
(3035, '2013-10-11 15:00:00', 4, 'AEX,AP', 'Expressões e instruções de atribuição', 220),
(3036, '2013-10-22 14:00:00', 4, 'TG,AEX,AP', 'Estruturas de controle no nível de instrução', 220),
(3037, '2013-11-01 14:00:00', 2, 'OTR', 'Prova 2', 220),
(3038, '2013-11-05 14:00:00', 6, 'AEX,AP', 'Subprogramas', 220),
(3040, '2013-11-19 14:00:00', 8, 'AEX,AP', 'Suporte para programação orientada a objetos e exceções', 220),
(3043, '2013-12-06 14:00:00', 2, 'AEX,AP', 'Linguagens Funcionais', 220),
(3044, '2013-12-03 14:00:00', 2, 'OTR', 'Prova 3', 220),
(3045, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação da Disciplina: Professor, Plano de Aula e Forma de\nAvaliação.', 221),
(3046, '2013-08-28 15:00:00', 2, 'AEX', 'Série ISO 9000: ISO 9000, ISO 9001, ISO 9004.', 221),
(3047, '2013-08-26 15:00:00', 2, 'AEX', 'Série ISO 9000: ISO 9000, ISO 9001, ISO 9004.', 221),
(3048, '2013-09-02 15:00:00', 2, 'AEX', 'Qualidade no Contexto de Software: ISO 9000-3.', 221),
(3049, '2013-09-04 15:00:00', 2, 'AEX', 'Qualidade no Produto de Software: ISO 9126.', 221),
(3050, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação da disciplina', 222),
(3051, '2013-08-23 15:00:00', 2, 'AEX', 'Evolução das arquiteturas de computadores', 222),
(3052, '2013-08-28 15:00:00', 2, 'AEX', 'Máquinas multiníveis', 222),
(3053, '2013-08-30 15:00:00', 4, 'AEX', 'Sistemas de numeração', 222),
(3054, '2013-09-11 15:00:00', 2, 'OTR', 'Lista 1 - Atividade não presencial', 222),
(3055, '2013-09-06 15:00:00', 2, 'AEX', 'Representação de dados: lógico, caractere e inteiro', 222),
(3056, '2013-09-13 15:00:00', 2, 'AEX', 'Representação de dados: real', 222),
(3057, '2013-09-25 15:00:00', 2, 'AEX', 'Memória e sua organização', 222),
(3058, '2013-09-27 15:00:00', 2, 'AEX', 'Memória de correção de erro', 222),
(3059, '2013-10-04 15:00:00', 2, 'RE', 'Lista 2', 222),
(3060, '2013-10-02 15:00:00', 2, 'AEX', 'Tipos de memória e ordenação de bytes', 222),
(3061, '2013-09-18 15:00:00', 2, 'RE', 'Revisão para a prova', 222),
(3062, '2013-09-20 15:00:00', 2, 'OTR', 'Primeira avaliação', 222),
(3063, '2013-10-09 15:00:00', 4, 'AEX', 'Cache', 222),
(3064, '2013-10-16 15:00:00', 4, 'AEX', 'Barramento', 222),
(3065, '2013-10-30 14:00:00', 4, 'AEX', 'Técnicas de Entrada e Saída', 222),
(3066, '2013-10-23 14:00:00', 2, 'RE', 'Lista 3', 222),
(3067, '2013-11-06 14:00:00', 2, 'OTR', 'Lista 4 - Atividade não presencial', 222),
(3068, '2013-10-25 14:00:00', 2, 'AEX', 'Disco', 222),
(3069, '2013-11-13 14:00:00', 4, 'AEX', 'Representação de instrução, ciclo de busca e execução', 222),
(3072, '2013-11-22 14:00:00', 2, 'AEX', 'Formato de instrução e modos de endereçamento', 222),
(3073, '2013-11-27 14:00:00', 2, 'AEX', 'Pipeline do processador', 222),
(3074, '2013-09-09 15:00:00', 2, 'AEX', 'Qualidade no Produto de Software: ISO 9126.', 221),
(3076, '2013-12-04 14:00:00', 2, 'AEX', 'Classificação de computadores: mono, multi e manycores', 222),
(3077, '2013-12-06 14:00:00', 2, 'AEX', 'Paralelismo de dados e controle', 222),
(3079, '2013-12-11 14:00:00', 2, 'RE', 'Revisão para a prova', 222),
(3082, '2013-09-11 15:00:00', 2, 'AEX', 'Qualidade no Processo de Software: ISO 12207.', 221),
(3083, '2013-09-16 15:00:00', 2, 'AEX', 'Qualidade no Processo de Software: ISO 12207.', 221),
(3084, '2013-09-23 15:00:00', 2, 'OTR', 'Primeira Avaliação (A1).', 221),
(3085, '2013-09-18 15:00:00', 2, 'AEX', 'Qualidade no Processo de Software: ISO 15504.', 221),
(3086, '2013-09-25 15:00:00', 2, 'AEX', 'Modelos de Maturidade de Processo: CMMI.', 221),
(3087, '2013-09-30 15:00:00', 2, 'AEX', 'Modelos de Maturidade de Processo: MPS.BR.', 221),
(3088, '2013-10-02 15:00:00', 2, 'AEX', 'Modelos de Maturidade de Processo: MPS.BR.', 221),
(3089, '2013-10-07 15:00:00', 2, 'AEX', 'Modelos de Maturidade de Processo: MPS.BR.', 221),
(3090, '2013-10-09 15:00:00', 2, 'AEX', 'Modelos de Maturidade de Processo: MPS.BR.', 221),
(3091, '2013-10-21 14:00:00', 2, 'AEX', 'Modelos de Maturidade de Processo: MPS.BR.', 221),
(3092, '2013-10-23 14:00:00', 2, 'AEX', 'Outros Padrões de Qualidade: IEEE Std 1028-2008, IEEE Std 1465-2004; IEEE Std 12207-2008.', 221),
(3093, '2013-10-30 14:00:00', 2, 'OTR', 'Segunda Avaliação (A2).', 221),
(3094, '2013-11-06 14:00:00', 2, 'AEX', 'Processo de Desenvolvimento de Software: RUP.', 221),
(3095, '2013-11-04 14:00:00', 2, 'AEX', 'Processo de Desenvolvimento de Software: RUP.', 221),
(3096, '2013-11-13 14:00:00', 2, 'AEX', 'Processo de Desenvolvimento de Software: Metodologia Ágeis.', 221),
(3097, '2013-11-11 14:00:00', 2, 'AEX', 'Processo de Desenvolvimento de Software: Metodologia Ágeis.', 221),
(3098, '2013-11-18 14:00:00', 2, 'AEX', 'Verificação e Validação.', 221),
(3099, '2013-11-20 14:00:00', 2, 'AEX', 'Verificação e Validação.', 221),
(3100, '2013-11-25 14:00:00', 2, 'AEX', 'Auditoria de Sistemas.', 221),
(3101, '2013-11-27 14:00:00', 2, 'OTR', 'Terceira Avaliação (A3).', 221),
(3102, '2013-12-04 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (RUP, Processos Ágeis de Software, Teste de software, Verificação e Validação de Software, Auditoria de Sistemas, ITIL, COBIT).', 221),
(3103, '2013-12-16 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (RUP, Processos Ágeis de Software, Teste de software, Verificação e Validação de Software, Auditoria de Sistemas, ITIL, COBIT).', 221),
(3104, '2013-12-18 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (RUP, Processos Ágeis de Software, Teste de software, Verificação e Validação de Software, Auditoria de Sistemas, ITIL, COBIT).', 221),
(3105, '2013-12-11 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (RUP, Processos Ágeis de Software, Teste de software, Verificação e Validação de Software, Auditoria de Sistemas, ITIL, COBIT).', 221),
(3106, '2013-12-09 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (RUP, Processos Ágeis de Software, Teste de software, Verificação e Validação de Software, Auditoria de Sistemas, ITIL, COBIT).', 221),
(3107, '2013-12-23 14:00:00', 2, 'OTR', 'Avaliação Substitutiva.', 221),
(3108, '2012-10-19 15:00:00', 2, 'OTR', 'Apresentação da Disciplina:\n•	Explanação sobre os conteúdos a serem abordados \n•	Critério de Avaliação\n•	Bibliografia\n•	Motivação e expectativas para a disciplina\n', 225),
(3109, '2012-10-23 14:00:00', 20, 'AEX/ED/RE/TG', 'Unidade I – Paradigmas de Desenvolvimento de Software\n1.	Software, Ciclo de Vida de Software e Processo de Software.\n2.	Engenharia de Software e a visão em camadas: qualidade, processo, métodos, ferramentas e técnicas.\n3.	Engenharia de software e princípios básicos de desenvolvimento de Software.\n4.	Evolução histórica de métodos de desenvolvimento\n5.	Visão geral das diferenças entre Paradigma Estruturado e Paradigma Orientado a Objetos.\n6.	Detalhamento dos conceitos do Paradigma Orientado a Objetos (abstração, encapsulamento, classes, métodos, objetos, herança, polimorfismo, delegação).\n7.	UML como ferramenta para modelagem orientada a objetos.', 225),
(3110, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação da disciplina, ementa e cronograma.\nHistórico da computação.', 226),
(3111, '2013-08-22 15:00:00', 2, 'aex', 'Noções de lógica de programação.', 226),
(3112, '2013-08-21 15:00:00', 2, 'aex', 'Conceituação de computador, informática e software. Noções básicas de arquitetura e organização de computadores; unidade central de processamento; memória; Dispositivos de entrada/saída; Armazenamento (disco rígido, CD-ROM, DVD e outros) e representação de dados;', 226),
(3114, '2012-12-04 14:00:00', 36, 'AEX/ED/RE/TG', 'Unidade II – Processo e Método de Desenvolvimento Orientado a Objetos. \n1.	Abordagem iterativa e incremental.\n2.	Etapas e artefatos produzidos.\n3.	Levantamento e Especificação de Requisitos.\n4.	Casos de uso.\n5.	Construção de modelo de análise e de desenho de software.\n6.	Mapeamento de modelo de projeto para implementação.\n7.	Processos Formais x Processos Ágeis\n8.	Práticas ágeis e contexto de sua aplicação.\n9.	Impacto das práticas ágeis nos métodos de desenvolvimento.\n', 225),
(3116, '2013-08-27 15:00:00', 4, 'AEX', 'Itens fundamentais de uma linguagem: os tipos primitivos de dados, variáveis identificadores e operadores. \nIdentificar as partes básicas de um programa escrito em C.  ', 226),
(3117, '2012-11-30 14:00:00', 2, 'OTR', 'Prova Escrita', 225),
(3118, '2013-03-01 15:00:00', 2, 'OTR', 'Prova Escrita', 225),
(3119, '2013-08-29 15:00:00', 6, 'ap ,ar,aex', 'Estrutura sequencial. Comando de atribuição. Comandos de entrada e saída. Elaboração de programas sequenciais', 226),
(3120, '2013-03-05 15:00:00', 2, 'OTR', 'Entrega dos resultados do semestre', 225),
(3126, '2013-09-05 15:00:00', 14, 'aex,ap,re', 'Estruturas de controle de fluxo\nEstruturas condicionais simples e compostas (if)\nEstruturas seletivas  (Switch e case)\n', 226),
(3128, '2013-08-20 15:00:00', 4, 'AEX', 'Apresentação do programa de curso e definição do escopo da disciplina / Revisão', 227),
(3130, '2013-08-27 15:00:00', 6, 'AEX, ED', 'Máquinas de Turing e a Tese de Church-Turing', 227),
(3133, '2013-10-22 14:00:00', 2, 'otr', 'Avaliação da aprendizagem – Prova P1', 226),
(3134, '2013-09-20 15:00:00', 10, 'AEX, RE, ED', 'Redutibilidade', 227),
(3136, '2013-09-24 15:00:00', 20, 'aex,re,ap', 'Estruturas de Repetição \nCom variável de controle (for)\nCom teste no início(while) \n\n ', 226),
(3139, '2013-10-31 14:00:00', 16, 'aex,re,ap', 'Estruturas de dados homogêneas \nVariáveis compostas homogêneas unidimensionais\nVariáveis compostas homogêneas multidimensionais', 226),
(3145, '2013-11-21 14:00:00', 14, 'aex,re,ap', 'Procedimentos e funções\nDeclaração do tipo da função \nTipos de passagem de parâmetro\n', 226),
(3146, '2013-08-20 15:00:00', 2, 'OTR', 'Apresentação da Disciplina:\n•	Explanação sobre os conteúdos a serem abordados \n•	Critério de Avaliação\n•	Bibliografia\n•	Motivação e expectativas para a disciplina\n', 228),
(3148, '2013-12-10 14:00:00', 2, 'otr', 'Avaliação da aprendizagem – P2', 226),
(3150, '2013-08-21 15:00:00', 22, 'AEX/ED/RE/TG', 'Unidade I – Paradigmas de Desenvolvimento de Software\n1.	Software, Ciclo de Vida de Software e Processo de Software.\n2.	Engenharia de Software e a visão em camadas: qualidade, processo, métodos, ferramentas e técnicas.\n3.	Engenharia de software e princípios básicos de desenvolvimento de Software.\n4.	Evolução histórica de métodos de desenvolvimento\n5.	Visão geral das diferenças entre Paradigma Estruturado e Paradigma Orientado a Objetos.\n6.	Detalhamento dos conceitos do Paradigma Orientado a Objetos (abstração, encapsulamento, classes, métodos, objetos, herança, polimorfismo, delegação).\n7.	UML como ferramenta para modelagem orientada a objetos.', 228),
(3153, '2013-08-22 15:00:00', 6, 'AEX', '1. Introdução à Inteligência Computacional', 229),
(3154, '2013-12-03 14:00:00', 2, 'OTR', 'Prova Escrita', 228),
(3156, '2013-10-02 15:00:00', 34, 'AEX/ED/RE/TG', 'Unidade II – Processo e Método de Desenvolvimento Orientado a Objetos. \n1.	Abordagem iterativa e incremental.\n2.	Etapas e artefatos produzidos.\n3.	Levantamento e Especificação de Requisitos.\n4.	Casos de uso.\n5.	Construção de modelo de análise e de desenho de software.\n6.	Mapeamento de modelo de projeto para implementação.\n7.	Processos Formais x Processos Ágeis\n8.	Práticas ágeis e contexto de sua aplicação.\n9.	Impacto das práticas ágeis nos métodos de desenvolvimento.\n', 228),
(3158, '2013-10-01 15:00:00', 2, 'OTR', 'Prova Escrita', 228),
(3159, '2013-09-02 15:00:00', 18, 'AEX e SE', '2. Introdução sobre Computação Evolucionária\n3. Algoritmos Genéticos', 229),
(3161, '2013-12-04 14:00:00', 2, 'OTR', 'Entrega dos resultados do semestre', 228),
(3166, '2013-09-17 15:00:00', 2, 'OTR', 'Avaliação I', 227),
(3167, '2013-10-03 15:00:00', 10, 'AP', 'Implementação do AG para o problema abordado.', 229),
(3170, '2013-09-06 15:00:00', 6, 'AEX, RE', 'Decidibilidade\n', 227),
(3174, '2013-10-21 14:00:00', 22, 'AEX', '5. Conceitos sobre Redes Neurais Artificias', 229),
(3181, '2013-11-25 14:00:00', 6, 'AP', 'Implementação da RNA para um problema.', 229),
(3182, '2013-08-20 15:00:00', 8, 'AEX/RE', '1 Introdução\n1.1.	Revisão de Conceitos de Arquitetura de Computadores\n1.2.	Definição de Sistema Operacional (SO)\n1.3.	História dos Sistemas Operacionais \n1.4.	Conceitos Fundamentais de SO\n1.5.	Chamadas ao SO\n1.6.	Estrutura de um SO\n1.7.	Revisão das estruturas de dados a serem usadas nos trabalhos práticos.\n', 230),
(3184, '2013-10-22 14:00:00', 2, 'OTR', 'PROVA 2', 230),
(3185, '2012-10-18 15:00:00', 2, 'AEX', 'Apresentação da disciplina (ementa, objetivo geral e objetivos específicos, relação com outras disciplinas, programa e critérios de avaliação) e suas respectivas bibliografias (básica e complementar).', 208),
(3186, '2013-10-08 15:00:00', 8, 'AEX/RE', 'Deadlocks\n3.1.	Recursos\n3.2.	Introdução aos Deadlocks\n3.3.	Algoritmo do Avestruz\n3.4.	Detecção e Recuperação de Deadlocks\n3.5.	Prevenção de Deadlocks', 230),
(3187, '2012-10-23 14:00:00', 4, 'AEX', 'Definição de software (definição, prerrequisitos para um bom processo de construção e as boas práticas para a definição de requisitos de software.', 208),
(3188, '2012-10-17 15:00:00', 6, 'AEX', '1. Introdução à Inteligência Computacional', 231),
(3189, '2013-10-29 14:00:00', 16, 'AEX/RE', '4 Gerenciamento de Memória\n4.1.	Gerenciamento básico\n4.2.	Troca de Processos\n4.3.	Memória Virtual\n4.4.	Algoritmo de substituição de páginas\n4.5.	Modelagem de algoritmos de substituição de páginas\n4.6.	Questões de projeto em sistemas de paginação\n4.7.	Implementação\n4.8.	Segmentação\n', 230),
(3190, '2012-10-27 14:00:00', 18, 'AEX e SE', '2. Introdução sobre Computação Evolucionária\n3. Algoritmos Genéticos', 231),
(3191, '2012-10-30 14:00:00', 6, 'AEX, AP', 'Arquitetura de software e seus componentes, escolha da linguagem de programação.', 208),
(3192, '2013-11-26 14:00:00', 8, 'SE', 'Apresentação de seminários', 230),
(3193, '2012-11-28 14:00:00', 10, 'AP', 'Implementação do AG para o problema abordado.', 231),
(3194, '2012-11-08 14:00:00', 2, 'AEX, AP', 'Convenções de programação e suas principais práticas.', 208),
(3196, '2012-12-15 14:00:00', 22, 'AEX', '5. Conceitos sobre Redes Neurais Artificias', 231),
(3197, '2012-11-13 14:00:00', 4, 'AEX, AP', 'Projeto de Software (principais conceitos, importância e desafios, níveis de projeto, principais metodologias e boas práticas, ', 208),
(3199, '2012-11-22 14:00:00', 4, 'AEX, AP', 'Formas de acoplamento de classes e de pacotes.', 208),
(3200, '2013-02-02 14:00:00', 6, 'AP', 'Implementação da RNA para um problema.', 231),
(3201, '2012-12-04 14:00:00', 4, 'AEX, AP', 'Rotinas (métodos), projeto de software em nível de rotina, recursividade.', 208),
(3202, '2012-12-11 14:00:00', 4, 'AEX, AP', 'Estudo sobre variáveis (nomenclatura, escopo, tempo de vida, notações, tipos de dados, estruturas, ponteiros, etc).', 208),
(3203, '2012-12-18 14:00:00', 4, 'AEX, AP', 'Otimização de código (conceito, tipos e aplicação).', 208),
(3204, '2013-01-08 14:00:00', 4, 'AEX, AP', 'Pesquisa em tabelas.', 208),
(3205, '2013-01-15 14:00:00', 4, 'AEX, AP', 'Qualidade de Software.', 208),
(3206, '2013-01-22 14:00:00', 2, 'AEX, AP', 'Construção colaborativa.', 208),
(3207, '2013-01-24 14:00:00', 4, 'AEX, AP', 'Testes do desenvolvedor.', 208),
(3208, '2013-01-31 14:00:00', 4, 'AEX, AP', 'Depuração.', 208),
(3209, '2013-02-12 14:00:00', 4, 'AEX, AP', 'Refatoração.', 208),
(3210, '2013-02-19 15:00:00', 4, 'AEX, AP', 'Ferramentas de programação.', 208),
(3211, '2013-02-26 15:00:00', 4, 'AEX, AP', 'Leiaute, estilo e documentação de código. ', 208),
(3216, '2013-02-20 14:00:00', 2, 'OTR', 'Prova', 231),
(3222, '2013-12-05 14:00:00', 2, 'OTR', 'Prova', 229),
(3224, '2012-10-18 15:00:00', 2, 'AEX', 'Apresentação da disciplina - Conceituação de Sistema de Informação', 235),
(3226, '2013-08-26 15:00:00', 8, 'AEX', 'Visão geral da disciplina e noções de engenharia econômica. Noção da importância e contexto de emprego da engenharia econômica.', 239),
(3227, '2013-08-20 15:00:00', 4, 'AEX, ED', 'Visão geral da disciplina.', 244),
(3228, '2013-08-20 15:00:00', 4, 'AEX/RE', '1. Introdução\n2. Arquitetura básica de um SGBD', 246),
(3229, '2013-08-27 15:00:00', 6, 'AEX/RE/AP', '3. Armazenamento e Estruturas de Arquivos', 246),
(3230, '2013-08-22 15:00:00', 4, 'AEX', 'Apresentação. Entrega e discussão do plano de ensino. Moodle', 245),
(3231, '2013-09-06 15:00:00', 6, 'AEX/RE/AP', '4. Indexação e Hashing', 246),
(3232, '2013-09-17 15:00:00', 8, 'AEX/RE/AP', '5. Processamento de Consulta\n6. Otimização de Consulta', 246),
(3234, '2013-10-01 15:00:00', 6, 'AEX/RE/AP', '7. Transações', 246),
(3235, '2013-08-29 15:00:00', 4, 'AEX/ RE', '1- . Conceitos básicos de OO\n1.1. Classe\n1.2. Objeto\n1.3. Atributo', 245),
(3236, '2012-10-23 14:00:00', 2, 'AEX', 'Etapas do processo de engenharia de sistema de informação (SI)', 235),
(3237, '2013-10-11 15:00:00', 10, 'AEX/RE/AP', '8. Controle de Concorrência', 246),
(3238, '2012-11-06 14:00:00', 6, 'AEX', 'Projeto de Sistema de Informação', 235),
(3239, '2013-09-05 15:00:00', 2, 'AP', '1- . Implementação de conceitos básicos de OO\n1.1. Classe\n1.2. Objeto\n1.3. Atributo', 245),
(3240, '2013-11-01 14:00:00', 8, 'AEX/RE/AP', '9. Sistema de Recuperação', 246),
(3241, '2013-11-19 14:00:00', 6, 'AEX/RE/AP', '10. Segurança e Autorização', 246),
(3242, '2012-10-25 14:00:00', 6, 'AEX', 'Análise de Sistema de Informação', 235),
(3243, '2013-09-09 15:00:00', 2, 'AEX/RE', '1.4. Método\n1.5. Construtor\n1.6. Pacote\n1.7. Encapsulamento', 245),
(3244, '2013-09-12 15:00:00', 2, 'AP', 'Implementação de:\n1.4. Método\n1.5. Construtor\n1.6. Pacote\n1.7. Encapsulamento', 245),
(3245, '2012-11-20 14:00:00', 6, 'AEX', 'Construção de Sistema de Informação', 235),
(3246, '2013-09-16 15:00:00', 2, 'AEX/RE', '1.8. Abstração\n1.9. Herança\n1.10. Polimorfismo', 245),
(3248, '2012-11-29 14:00:00', 4, 'AEX', 'Teste de Sistema de Informação', 235),
(3249, '2013-09-19 15:00:00', 2, 'AP', 'Implementação: 1.8. Abstração\n1.9. Herança\n1.10. Polimorfismo', 245),
(3250, '2012-12-06 14:00:00', 2, 'AEX', 'Projeto de implantação de Sistema de Informação', 235),
(3252, '2013-09-23 15:00:00', 2, 'AEX/RE', 'Revisão Conceitos básicos de OO\n1.1. Classe\n1.2. Objeto\n1.3. Atributo\n1.4. Método\n1.5. Construtor\n1.6. Pacote\n1.7. Encapsulamento\n1.8. Abstração\n1.9. Herança\n1.10. Polimorfismo', 245),
(3254, '2012-12-20 14:00:00', 2, 'OTR', 'Prova 1', 235),
(3255, '2013-09-26 15:00:00', 2, 'OTR', 'Avaliação P1', 245),
(3258, '2012-12-18 14:00:00', 2, 'RE', 'Aula de Exercícios ', 235),
(3260, '2013-09-30 15:00:00', 2, 'OTR', 'Entrega e Revisão de notas', 245),
(3262, '2013-10-03 15:00:00', 2, 'AEX/AP', '2. AWT e Swing\n2.1. AWT\n2.2. Swing\n2.3. Containers e componentes', 245),
(3264, '2013-10-10 15:00:00', 2, 'AP', 'Implementação AWT e Swing\n2.1. AWT\n2.2. Swing\n2.3. Containers e componentes', 245),
(3267, '2013-10-14 15:00:00', 2, 'AEX/RE', '2.4. GUI\n2.5. Gerenciadores de layout: FlowLayout, BorderLayout e GridLayout\n2.6. Criação de layouts complexos', 245),
(3268, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação da Disciplina:\n\n• Identificação Professor e Aluno\n• Programa do Curso\n• Lista de Chamada\n• Provas (critérios de avaliações) Introdução\n\n1.Introdução\n    1.1. Introdução às Linguagens Formais\n    1.2. Hierarquia de Chomsky \n', 236),
(3270, '2013-10-17 15:00:00', 2, 'AP', 'Implementação de:\n2.4. GUI\n2.5. Gerenciadores de layout: FlowLayout, BorderLayout e GridLayout\n2.6. Criação de layouts complexos', 245),
(3272, '2012-10-18 15:00:00', 2, 'OTR', 'Apresentação da ementa da disciplina.', 237),
(3275, '2013-10-21 14:00:00', 2, 'AEX/RE', '3. Tratamento de eventos em interfaces gráficas\n3.1. Componentes do modelo de delegação de eventos\n3.2. Interfaces gráficas que interagem com o usuário\n3.3. Classes adapter\n3.4. Utilização de inner e anonymous inner class\n', 245),
(3278, '2013-09-04 15:00:00', 10, 'AEX/RE', '2. Autômatos Finitos\n	2.1. Autômatos Finitos Determinísticos.\n	2.2. Autômatos Finitos Não - Determinísticos\n	2.3. Autômatos Finitos Não-Determinísticos com movimentos vazios \n	2.4. Minimização de Autômatos Finitos\n         2.5. Equivalência entre Autômatos  \n        2.6. Autômatos Finitos e Expressões Regulares. \n', 236),
(3279, '2013-10-28 14:00:00', 2, 'AP', '3. Tratamento de eventos em interfaces gráficas\n3.1. Componentes do modelo de delegação de eventos\n3.2. Interfaces gráficas que interagem com o usuário\n3.3. Classes adapter\n3.4. Utilização de inner e anonymous inner class\n', 245),
(3282, '2012-10-29 14:00:00', 4, 'AEX, AP', 'Revisão dos conceitos básicos de Java e orientação a objetos.', 237),
(3283, '2012-10-17 15:00:00', 2, 'AEX', 'Apresentação da disciplina:\nIdentificação do Professor e do Aluno\nPrograma do Curso\nProvas (Critério de Avaliação)\nMotivação e expectativas para a disciplina\n', 248),
(3285, '2013-10-31 14:00:00', 2, 'AEX/RE', '4. Tratamento básico de exceções\n4.1. Exceções\n4.2. Try-catch-finally\n4.3. Utilização de throw e throws\n4.4. Exceções verificadas e não-verificadas', 245),
(3286, '2012-10-19 15:00:00', 6, 'AEX', 'Banco de Dados Orientados a Objetos:\nNecessidade dos Sistemas Complexos;\nLinguagem de Definição de Objetos;\nLinguagem de Consulta a Objetos;\n', 248),
(3288, '2013-11-04 14:00:00', 2, 'AP', '4. Tratamento básico de exceções\n4.1. Exceções\n4.2. Try-catch-finally\n4.3. Utilização de throw e throws\n4.4. Exceções verificadas e não-verificadas', 245),
(3289, '2012-11-07 14:00:00', 6, 'AEX', 'Banco de Dados Objeto Relacional:\nTipos de dados complexos\nTipos estruturados e herança em SQL\nHerança de tabela\nImplementando recursos O-R\nOrientação a objeto versus relacional de objeto\n', 248),
(3290, '2012-11-16 14:00:00', 8, 'AEX', 'DataWare House e Mineração de Dados:\nSistemas de apoio à decisão\nAnálise de dados e OLAP\nDepósito de dados\nMineração de dados\n', 248),
(3291, '2012-11-05 14:00:00', 6, 'AEX, AP', 'Vetores unidimensionais e multidimensionais.\nAlgoritmos de Ordenação: Bubble-sort e Selection-sort.\nAlgoritmos de Pesquisa: Pesquisa linear e Pesquisa binária.', 237),
(3292, '2013-11-07 14:00:00', 2, 'AEX/RE', '5. Threads\n5.1. Diferentes estados de uma thread\n5.2. Prioriadade na thread\n5.3. Métodos da classe Thread\n5.4. Sincronização de threads\n5.5. Comunicação entre threads\n', 245),
(3293, '2013-11-11 14:00:00', 2, 'AP', '5. Threads\n5.1. Diferentes estados de uma thread\n5.2. Prioriadade na thread\n5.3. Métodos da classe Thread\n5.4. Sincronização de threads\n5.5. Comunicação entre threads\n', 245),
(3294, '2012-11-30 14:00:00', 16, 'AP', 'Atividade prática em laboratório: BDOO, BDOR e\nMineração de Dados\n', 248),
(3295, '2013-01-11 14:00:00', 2, 'OTR', 'Avaliação Parcial do Projeto Final', 248),
(3297, '2013-11-14 14:00:00', 2, 'AEX/RE', '6. Teste de software\n6.1. Definição\n6.2. Tipos de teste\n6.3. Teste de unidade\n6.4. Testes e métricas\n', 245),
(3298, '2013-01-16 14:00:00', 8, 'AEX', 'Controle de Transações:\nControle de concorrência\nRecuperação contra falhas.\nMono/Multi-usuário.', 248),
(3302, '2013-01-30 14:00:00', 8, 'AEX', 'Banco de Dados Distribuídos:\nArmazenamento distribuído.\nProcessamento de Consultas.\nSistemas homogêneos / heterogêneos.\nReplicação / Reprodução.\nFragmentação.\n', 248),
(3304, '2012-11-19 14:00:00', 4, 'AEX, AP', 'Tipos Abstratos de Dados.', 237),
(3305, '2013-11-18 14:00:00', 2, 'AP', '6. Teste de software\n6.1. Definição\n6.2. Tipos de teste\n6.3. Teste de unidade\n6.4. Testes e métricas\n', 245),
(3310, '2013-11-21 14:00:00', 2, 'AEX/RE', '7. Projeto orientado a objetos\n7.1. Noções\n7.2. Patterns\n7.3. Arquiteturas', 245),
(3311, '2013-02-20 15:00:00', 2, 'OTR', 'Prova Teórica \n', 248),
(3313, '2013-11-25 14:00:00', 2, 'AP', '7. Projeto orientado a objetos\n7.1. Noções\n7.2. Patterns\n7.3. Arquiteturas', 245),
(3314, '2013-02-22 15:00:00', 6, 'OTR', 'Avaliação do Projeto Final. \n', 248),
(3316, '2013-10-09 15:00:00', 2, 'OTR', '1ª Avaliação', 236),
(3318, '2012-11-26 14:00:00', 8, 'AEX, AP', 'Listas Simplesmente Encadeadas. Listas Duplamente Encadeadas. Listas Encadeadas Circulares.', 237),
(3321, '2013-09-02 15:00:00', 6, 'AEX/RE', 'Conceitos fundamentais sobre banco de dados.', 252),
(3323, '2013-10-30 14:00:00', 10, 'AEX/RE', '3. Linguagens Livres de Contexto Gramáticas Livres de Contexto\n        3.1. Árvores de análise sintática \n       3.2. Ambigüidade em gramáticas e linguagens\n        3.3. Propriedades das Linguagens Livres de Contexto \n       3.4. Formas Normais ', 236),
(3325, '2013-09-12 15:00:00', 12, 'AEX/RE/AP/TG', 'Modelo relacional e álgebra relacional', 252),
(3326, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação e Contextualização da disciplina e dos alunos\nDefinição de critérios e expectativas da disciplina\n', 251),
(3327, '2012-12-10 14:00:00', 6, 'AEX, AP', 'Pilhas e Filas.', 237),
(3330, '2013-10-21 14:00:00', 16, 'AEX/RE/AP/TG', 'Modelo Entidade Relacionamento. Mapeamento MER-MR', 252),
(3332, '2013-12-04 14:00:00', 4, 'AEX/RE', '4. Máquinas de Turing \n	4.1. Definição formal e exemplos \n        4.2.Técnicas de programação, Extensões das máquinas de Turing \n        4.3. Reconhecimento de Linguagens ', 236),
(3334, '2013-11-28 14:00:00', 14, 'AEX/RE/AP/TG', 'Prática de projeto e normalização.', 252),
(3336, '2012-12-20 14:00:00', 2, 'OTR', 'Primeira avaliação escrita.', 237),
(3337, '2013-11-28 14:00:00', 4, 'OTR', 'Avaliação P2 (correção)', 245),
(3344, '2013-01-07 14:00:00', 8, 'AEX, AP', 'Árvores Binárias e algoritmos de percurso.', 237),
(3346, '2013-08-27 15:00:00', 2, 'AEX', 'Noções de Lógica, Lógica de Programação, Algoritmo. Exercícios.\n', 251),
(3347, '2013-12-18 14:00:00', 2, 'OTR', '2ª Avaliação', 236),
(3350, '2012-12-11 14:00:00', 4, 'AEX', 'Tipos de Sistema de Informação', 235),
(3352, '2013-09-03 15:00:00', 4, 'AEX,AP', 'Tipos primitivos. Constantes Variáveis. Formação de Identificadores.', 251),
(3353, '2013-01-21 14:00:00', 4, 'AEX, AP', 'Filas de Prioridade.', 237),
(3355, '2012-10-17 15:00:00', 2, 'AEX', 'Apresentação da Disciplina:\nIdentificação;\nEmenta;\nConteúdo Programático;\nObjetivos;\nProcedimentos Didáticos;\nAvaliação da Aprendizagem;\nBibliografias.\nHistórico da Computação', 247),
(3356, '2013-09-10 15:00:00', 4, 'AEX,AP', 'Estrutura Sequencial, Expressões Aritméticas e Lógicas. Exercícios.\n', 251),
(3359, '2013-01-28 14:00:00', 8, 'AEX, AP', 'Árvores de Pesquisa: Árvores Binárias Balanceadas e Árvores B.', 237),
(3364, '2013-02-11 14:00:00', 6, 'AEX, AP', 'Tabelas de dispersão.', 237),
(3365, '2013-09-17 15:00:00', 4, 'AEX,AP', 'Estrutura básica de um programa. Comandos de Atribuição, E/S, Blocos.\n', 251),
(3367, '2013-01-08 14:00:00', 4, 'AEX', 'SI Corporativos (CRM, DBM, ERP, Portais Corporativos e E-Learning, B2B, B2C, EDI)', 235),
(3369, '2013-01-15 14:00:00', 2, 'AEX', 'Sistemas de Gestão Eletrônica de Documentos (GED)\n', 235),
(3371, '2013-02-21 15:00:00', 2, 'OTR', 'Segunda avaliação escrita.', 237),
(3374, '2013-01-17 14:00:00', 2, 'AEX', 'Sistemas de Workflow', 235),
(3377, '2013-02-25 15:00:00', 2, 'SE, OTR', 'Apresentação do trabalho final da disciplina.', 237),
(3378, '2013-01-22 14:00:00', 2, 'AEX', 'Aplicações WEB e e-commerce', 235),
(3380, '2013-03-26 15:00:00', 2, 'AEX', 'Apresentação da disciplina, Explanação sobre os conteúdos, Critério de avaliação, expectativas e relacionamento com outras disciplinas do curso, Ambiente Virtual de Aprendizagem;', 254),
(3383, '2013-09-24 15:00:00', 4, 'AEX,AP', 'Estruturas de Controle – Sequencial e Seleção Simples – Exercícios\n', 251),
(3385, '2013-01-24 14:00:00', 6, 'AEX', 'Gestão de Sistema de Informação', 235),
(3386, '2013-02-28 15:00:00', 2, 'OTR', 'Entrega das notas e encerramento da disciplina.', 237),
(3389, '2013-10-08 15:00:00', 8, 'AEX,AP,RE', 'Estruturas de Controle – Seleção Composta e Encadeada\n', 251),
(3392, '2012-10-19 15:00:00', 2, 'AEX,TG,', 'Visão Geral do Computador: Hardware e Software;\nNoções de Sistemas Operacionais e Arquivos;\nVisão sobre algoritmos e linguagens de programação;\nUtilitários, Compiladores e Interpretadores.', 247),
(3395, '2013-01-31 14:00:00', 2, 'RE', 'Aula de Exercícios', 235),
(3397, '2013-03-27 15:00:00', 6, 'AEX', 'Introdução ao conceito de algoritmo e programação estruturada. Elementos Fundamentais da Construção de Algoritmos: Tipo de Dados; Formação de Identificadores; Constantes; Variáveis; Comando de Atribuição; Comandos de Entrada e Saída.', 254),
(3399, '2012-10-22 14:00:00', 2, 'AEX, ED, RE', 'Noções de lógica.\nLógica de Programação.', 247),
(3400, '2013-10-01 15:00:00', 2, 'OTR', 'Primeira Avaliação - Teórica (NP3)', 251),
(3403, '2013-02-05 14:00:00', 2, 'OTR', 'Prova 2', 235),
(3405, '2013-10-22 14:00:00', 6, 'AEX,AP', 'Estruturas de Controle – Seleção de Múltipla Escolha\n', 251),
(3406, '2013-08-22 15:00:00', 2, 'OTR', 'Apresentação da disciplina', 257),
(3407, '2012-10-26 14:00:00', 4, 'AEX, ED, RE', 'Construção de Algoritmos: Elementos Fundamentais\nTipo de Dados;\nFormação de Identificadores;\nConstantes;\nVariáveis;\n', 247),
(3410, '2013-09-09 15:00:00', 4, 'AEX', 'Escopo da Engenharia Econômica. Fornecimento, demanda e produção. ', 239),
(3418, '2013-02-07 14:00:00', 8, 'TG, SE', 'Seminários e Apresentação de Trabalhos', 235),
(3421, '2012-11-09 14:00:00', 4, 'AEX, RE,TG', 'Expressões e Operadores\nExpressões Aritméticas\nExpressões Lógicas\nEstrutura Seqüencial', 247),
(3425, '2013-11-05 14:00:00', 8, 'AEX,AP', 'Estrutura de Repetição\n\n', 251),
(3444, '2013-11-26 14:00:00', 4, 'AEX,AP', 'Estrutura de Dados – Vetores\n', 251),
(3448, '2013-04-04 15:00:00', 4, 'AEX', 'Conceitos básicos de algoritmos e notação assintótica', 258),
(3451, '2013-04-11 15:00:00', 4, 'AEX', 'Estruturas de dados lista, fila, pilha e árvores', 258),
(3452, '2013-12-03 14:00:00', 8, 'AEX,AP', 'Estrutura de Dados – Matrizes\n', 251),
(3454, '2013-04-18 15:00:00', 4, 'AEX', 'Recorrências', 258),
(3455, '2013-04-25 15:00:00', 8, 'AEX', 'Algoritmos de ordenação', 258),
(3456, '2013-12-17 14:00:00', 2, 'OTR', 'Terceira Avaliação - Teórica (NP3)', 251),
(3458, '2013-06-13 15:00:00', 4, 'AEX', 'Programação dinâmica', 258),
(3460, '2013-06-20 15:00:00', 4, 'AEX', 'Algoritmos gulosos', 258),
(3461, '2013-08-23 15:00:00', 2, 'AEX', '1. Apresentação da Disciplina\n     1.1	Identificação; \n     1.2	Ementa; \n     1.3	Conteúdo Programático; \n     1.4	Objetivos; \n     1.5.      Procedimentos Didáticos; \n     1.6.	Avaliação da Aprendizagem; \n     1.7.      Bibliografias; \n     1.8.	Motivação; \n     1.9.	Relacionamento com outras disciplinas. ', 256),
(3462, '2013-05-09 15:00:00', 4, 'AEX', 'Árvores de pesquisa binária', 258),
(3463, '2013-08-26 15:00:00', 4, 'AEX/TG', '2. Projeto pedagógico e o profissional de sistemas de informação\n     2.1. Os cursos da área de computação e suas diferenças; \n     2.2. Matriz curricular; \n     2.3. Ementa das disciplinas; \n     2.4. Carreiras em Sistemas de Informação. \n     2.5. Aspectos de segurança, éticos, morais e sociais da computação; ', 256),
(3464, '2013-05-16 15:00:00', 8, 'AEX', 'Algoritmos de grafos', 258),
(3465, '2013-08-22 15:00:00', 1, 'AEX', 'Apresentação do plano da disciplina: objetivo geral, explanação sobre conteúdos a serem abordados, critérios de avaliação, bibliografia, motivação e expectativas para a disciplina\n', 249),
(3466, '2013-09-02 15:00:00', 8, 'AEX,RE,SE,TG, ED', '3. Conceituação de computador, informática e software\n     3.1. Breve histórico da computação; \n     3.2. Recursos de hardware \n     3.3. Componentes de hardware de um sistema; \n     3.4. Processamento paralelo e sequencial; \n     3.5. Classificação de computadores; \n     3.6. Sistemas operacionais (processos, arquivos, memória, armazenamento, entrada e saída); \n     3.7. Linguagens de programação (evolução, compiladores, interpretadores, modelos, aplicações).', 256),
(3467, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação da Disciplina: Professor, Plano de Aula e Forma de\nAvaliação.', 217),
(3468, '2013-10-28 14:00:00', 2, 'OTR', 'Prova1', 256),
(3472, '2013-09-02 15:00:00', 2, 'AEX', 'Processo de Teste de Software.', 217),
(3476, '2012-10-17 15:00:00', 2, 'AEX', 'Apresentação da disciplina', 233),
(3478, '2013-08-29 15:00:00', 1, 'AEX', 'Definições de Engenharia de Requisitos; Processo de Engenharia de Requisitos\n', 249),
(3479, '2013-09-16 15:00:00', 6, 'AEX,RE,SE', '4. Recursos de dados\n      4.1. Banco de dados; \n      4.2. Modelo relacional; \n      4.3. Modelo ER; \n      4.4. SQL. ', 256),
(3480, '2013-06-06 15:00:00', 4, 'AEX', 'Avaliação 1', 258),
(3481, '2013-08-29 15:00:00', 2, 'AEX', 'Introdução ao Teste de Software.', 217),
(3482, '2013-03-25 15:00:00', 10, 'AEX/RE/AP', '1. Introdução a redes de computadores e à Internet \n1.1. Arquitetura de redes de computadores \n1.2. Protocolos e serviços de rede \n1.3. Meios físicos de transmissão\n1.4. Comutação de circuitos e de pacotes \n1.5. Hierarquia em camadas: ISO/OSI e TCP/IP \n1.6. Organismos internacionais de padronização (ISO, IEEE, ITU-T, IETF, W3C) \n1.7. História da Internet', 255),
(3484, '2013-09-27 15:00:00', 4, 'AEX,SE', '5. Recursos de Telecomunicações: internet e rede de computadores.', 256),
(3485, '2012-10-19 15:00:00', 2, 'AEX', 'Evolução das arquiteturas de computadores', 233),
(3486, '2013-08-22 15:00:00', 2, 'AEX', '1. Apresentação do Programa:\n 1.1 Explanação sobre os conteúdos a serem abordados durante o curso\n  1.2  Critério de Avaliação\n  1.3  Bibliografia\n  1.4  Motivação e expectativas para a disciplina.', 203),
(3488, '2013-04-11 15:00:00', 18, 'AEX/RE/TG/AP/O TR', '2. Camada de aplicação \n2.1. Protocolos de aplicação – princípios gerais \n2.2. WWW e HTTP\n2.3. FTP \n2.4. Correio eletrônico \n2.5. DNS \n2.6. P2P \n2.7. Programação com sockets', 255),
(3492, '2013-10-04 15:00:00', 8, 'AEX,RE,SE,ED', '6. Fundamentos de sistemas de informação\n\n       6.1. Conceitos, componentes e recursos; \n       6.2. Modelo de sistema de informação; \n       6.3. A empresa como um sistema; \n       6.4. Os componentes de um sistema de informação; \n       6.5. Dados X Informação; \n       6.6. Atividades e funções de sistemas de informação. ', 256),
(3493, '2012-10-26 14:00:00', 2, 'AEX', 'Máquinas multi-níveis', 233),
(3495, '2013-06-27 15:00:00', 4, 'AEX', 'Problemas NP-Completos e Algoritmos Aproximativos', 258),
(3497, '2013-05-13 15:00:00', 18, 'AEX/RE/TG/AP/O TR', '3. Camada de transporte \n3.1. Tipos de serviço de transporte \n3.2. Protocolo UDP \n3.3. Transmissão de dados confiável \n3.4. Protocolo TCP \n3.5. Controle de congestionamento', 255),
(3498, '2013-09-09 15:00:00', 2, 'AEX', 'Técnicas, Níveis e Tipos de Teste de Software.', 217),
(3499, '2013-07-04 15:00:00', 8, 'OTR', 'Seminários', 258),
(3502, '2013-08-26 15:00:00', 4, 'AEX', '2.  Introdução\n  2.1  Estruturas de dados simples\n  2.2  Estruturas de dados vetores e matrizes\n  2.3  Exercícios de estruturas homogenias.', 203),
(3503, '2013-11-01 14:00:00', 8, 'AEX, TG,SE, ED', '7. Sistemas de informação na empresa\n	7.1.	Empresa digital; \n	7.2.	Tipos de sistemas de informação empresariais; \n        7.3. Aplicações de sistemas de informação \n        7.4. Sistemas integrados; 		\n	7.5.	Relacionamentos entre os tipos de sistemas. ', 256),
(3505, '2012-10-31 14:00:00', 4, 'AEX', 'Sistemas de Numeração', 233),
(3506, '2013-07-18 15:00:00', 4, 'OTR', 'Avaliação 2', 258),
(3507, '2013-09-02 15:00:00', 8, 'AEX/TG', '3. Matrizes\n   3.1 Tipos especiais de matrizes\n   3.2 Mapeamento de matrizes em vetores,\n   3.3 Aplicação de Matrizes\n   3.4 Matrizes esparsas e algoritmos de atuação\n    3.5 Exercícios práticos', 203),
(3508, '2013-06-17 15:00:00', 18, 'AEX/RE/TG/AP/O TR', '4. Camada de rede \n4.1. Modelos de serviço de rede \n4.2. Roteamento – princípios gerais e algoritmos \n4.3. Protocolo IP \n4.4. Roteamento na Internet \n4.5. Interconexão de redes', 255),
(3510, '2012-10-31 14:00:00', 6, 'AEX,RE,AP', 'Comandos Básicos\nAtribuição\nEntrada/Saída \nEstrutura Seqüencial\n', 247),
(3511, '2013-11-18 14:00:00', 4, 'AEX,RE', '8. Infra-estrutura de TI\n	8.1.	Componentes; \n	8.2. Integração de componentes ', 256),
(3513, '2013-09-12 15:00:00', 2, 'AEX', 'Técnicas, Níveis e Tipos de Teste de Software.', 217),
(3515, '2012-11-09 14:00:00', 2, 'TG', 'Lsita 1', 233),
(3516, '2013-11-25 14:00:00', 10, 'AEX/RE, ED', '9. Desenvolvimento e gerenciamento de sistemas\n        9.1. Modelos de processos; \n        9.2. Técnicas de desenvolvimento.', 256),
(3517, '2013-09-16 15:00:00', 10, 'AEX/RE/TG', '4. Listas Lineares Estáticas e seus algoritmos:\n    4.1 Definição de Tipos de listas estáticas\n     4.2 Listas sequenciais\n     4.3 Listas com apontadores de controle\n     4.4 Pilhas estáticas\n     4.5 Filas estáticas\n     4.6 Exercícios práticos', 203),
(3518, '2013-09-16 15:00:00', 2, 'AEX', 'Técnicas, Níveis e Tipos de Teste de Software.', 217),
(3519, '2013-12-13 14:00:00', 4, 'AEX,EX', 'Administração de recursos de TI.\n', 256),
(3520, '2012-11-14 14:00:00', 20, 'AEX,RE,TG,AP', 'Estruturas de Seleção\nSimples\nCompostas\nEscolha Múltipla', 247),
(3523, '2013-12-23 14:00:00', 2, 'OTR', 'Prova2', 256),
(3524, '2012-11-14 14:00:00', 2, 'AEX', 'Representação de dados: lógico, caracter e inteiro / Ordem de bytes', 233),
(3526, '2013-10-07 15:00:00', 4, 'AEX/RE', '5. Recursos de Encadeamentos em listas:\n     5.1 Representação visual.\n     5.2 Representação de inserção e remoção.', 203),
(3529, '2013-09-05 15:00:00', 2, 'AEX', 'Processo de Teste de Software.', 217),
(3530, '2012-11-16 14:00:00', 2, 'AEX', 'Representação de dados: real', 233),
(3532, '2013-10-14 15:00:00', 8, 'AEX/RE/TG/ED', '6. Listas Encadeadas Dinamicamente e algoritmos:\n     6.1 Listas lineares encadeadas;\n     6.2 Pilhas encadeadas;\n     6.3 Filas encadeadas;\n     6.4 Listas duplamente encadeadas.', 203),
(3534, '2013-08-26 15:00:00', 2, 'AEX', 'Introdução ao Teste de Software.', 217),
(3535, '2012-11-21 14:00:00', 2, 'AEX', 'Memória e sua organização', 233),
(3537, '2012-11-23 14:00:00', 2, 'AEX', 'Memória Cache', 233),
(3538, '2013-12-20 14:00:00', 2, 'AEX', 'Aula de Revisão para a Prova', 256),
(3540, '2012-12-10 14:00:00', 2, 'OTR', 'Avaliação de aprendizagem', 247),
(3541, '2013-10-28 14:00:00', 2, 'AVL', '- Primeira Avaliação  e entrega de trabalhos individuais;', 203),
(3542, '2012-11-28 14:00:00', 2, 'TG/OR', 'Lista 2 - Aula não presencial', 233),
(3545, '2013-11-04 14:00:00', 6, 'AEX/RE/TG/ED', '7. Árvores e seus algoritmos\n    7.1 Introdução à teoria de árvores\n    7.2 Árvore binária e seus algoritmos\n    7.3 Árvores binárias de buscas e seus algoritmos', 203),
(3548, '2012-12-12 14:00:00', 22, 'AEX,RE,TG,AP', 'Estruturas de Repetição\nCom Variável de Controle\nCom Teste no Início\nCom Teste no Final', 247),
(3549, '2013-11-14 14:00:00', 6, 'AEX/TG/ED', '8. Árvores binárias Balanceadas e seus algoritmos:\n    8.1 Introdução à Arvores AVL;\n    8.2 Balanceamento de Árvores e seus tipos;\n    8.3 Inserção em árvores balanceadas binárias;\n    8.4 Remoção em árvores balanceadas binárias;\n    8.5 Exemplos e algoritmos de buscas\n', 203),
(3552, '2012-12-05 14:00:00', 2, 'AEX', 'Barramento', 233),
(3553, '2012-12-07 14:00:00', 2, 'TG', 'Lista 3', 233),
(3555, '2012-12-12 14:00:00', 2, 'AEX', 'Revisão', 233),
(3557, '2013-01-21 14:00:00', 2, 'OTR', 'Avaliação de Aprendizagem', 247),
(3560, '2012-12-14 14:00:00', 2, 'OTR', 'Prova 1', 233),
(3561, '2013-02-15 14:00:00', 2, 'AEX, RE, TG, AP, SE', 'Apresentação de conteúdo, plano de aula e socialização.', 262),
(3563, '2012-12-19 14:00:00', 2, 'AEX', 'Técnicas de entrada e saída', 233),
(3564, '2013-12-12 14:00:00', 2, 'AVL', 'Segunda Avaliação Teórica', 203),
(3565, '2012-12-21 14:00:00', 2, 'AEX', 'Dispositivo de E/S: disco', 233),
(3568, '2013-01-09 14:00:00', 2, 'TG', 'Lista 4', 233),
(3570, '2013-01-23 14:00:00', 14, 'AEX, RE, TG,AP', 'Estruturas de Dados \nVariáveis Compostas Homogêneas\nUnidimensionais (Vetores)\nMultidimensionais (Matrizes)', 247),
(3573, '2013-01-11 14:00:00', 2, 'AEX', 'Formato de instrução', 233),
(3575, '2013-01-16 14:00:00', 4, 'AEX', 'Processador - xComputer', 233),
(3576, '2013-08-20 15:00:00', 2, 'OTR', '1. Apresentação da disciplina e do plano de ensino', 261),
(3578, '2013-01-23 14:00:00', 2, 'AEX', 'Pipeline', 233),
(3579, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação do professor, no plano de aula, forma de avaliação. Gestão de TI: conceito, objetivos e componentes.', 250),
(3581, '2013-01-25 14:00:00', 2, 'TG', 'Lista 5', 233),
(3582, '2013-08-26 15:00:00', 2, 'AEX', 'Gestão de TI: conceito, objetivos e componentes; O Modelo de Governança de TI: visão geral do modelo de Gestão de TI;', 250),
(3584, '2013-08-23 15:00:00', 4, 'RE, AEX', 'Introdução à Manutenção de Software', 261),
(3587, '2013-08-28 15:00:00', 2, 'AEX', 'Planejamento Estratégico de TI.', 250),
(3588, '2013-08-30 15:00:00', 4, 'AEX, AP, RE', 'Tipos de Manutenção de Software', 261),
(3589, '2013-01-30 14:00:00', 2, 'AEX', 'Classificaçãode computadores:mono,multi e manycores', 233),
(3590, '2013-09-02 15:00:00', 2, 'AEX', 'Alinhamento estratégico de TI ao negócio.', 250),
(3592, '2013-09-06 15:00:00', 4, 'AEX', 'Questões-chave da Manutenção de Software', 261),
(3593, '2013-02-01 14:00:00', 8, 'AEX/OTR', 'Paralelismo', 233),
(3594, '2013-12-09 14:00:00', 2, 'AVL', 'Avaliação Prática e Entrega de Trabalhos.', 203);
INSERT INTO `itemcronograma` (`id`, `inicio`, `numeroaulas`, `procedimentodidatico`, `topico`, `plano_id`) VALUES
(3596, '2013-02-20 15:00:00', 2, 'TG', 'Lista 6', 233),
(3597, '2013-09-16 15:00:00', 12, 'AEX', 'Valor presente (PV) e valor futuro (FV). Taxa de retorno. Payback period. Benefit Cost Ratio. Break-even analysis. Lucro produzido por capital (interest). Análise custo-benefício. Retorno de investimento. ', 239),
(3599, '2013-09-04 15:00:00', 2, 'AEX, TG', 'O Plano de Tecnologia da Informação.', 250),
(3600, '2013-02-22 15:00:00', 2, 'AEX', 'Revisão', 233),
(3601, '2013-09-09 15:00:00', 2, 'AEX, TG', 'O Plano de Tecnologia da Informação.', 250),
(3602, '2013-09-11 15:00:00', 2, 'AEX', 'ITIL V3 - Information Technology Infrastructure Library: Histórico, Objetivos, Estrutura, Aplicabilidade, Benefícios, Certificações relacionadas.', 250),
(3603, '2013-02-27 15:00:00', 2, 'OTR', 'Prova 2', 233),
(3604, '2013-09-16 15:00:00', 2, 'AEX, RE', 'ITIL V3 - Information Technology Infrastructure Library: Histórico, Objetivos, Estrutura, Aplicabilidade, Benefícios, Certificações relacionadas.', 250),
(3605, '2013-09-18 15:00:00', 2, 'OTR', 'Primeira Avaliação (A1).', 250),
(3606, '2013-09-23 15:00:00', 2, 'AEX', 'ITIL – Estratégia de Serviço (Service Estrategy).', 250),
(3607, '2013-09-25 15:00:00', 2, 'AEX', 'ITIL – Estratégia de Serviço (Service Estrategy).', 250),
(3608, '2013-09-30 15:00:00', 2, 'AEX', 'ITIL - Desenho de Serviço (Service Design).', 250),
(3609, '2013-10-02 15:00:00', 2, 'AEX', 'ITIL - Desenho de Serviço (Service Design).', 250),
(3610, '2012-11-30 14:00:00', 2, 'AEX', 'Memória de Correção de erro', 233),
(3611, '2013-10-07 15:00:00', 2, 'AEX', 'ITIL - Desenho de Serviço (Service Design).', 250),
(3612, '2013-10-09 15:00:00', 2, 'AEX', 'ITIL - Transição de Serviço (Service Transition).', 250),
(3613, '2013-10-14 15:00:00', 2, 'AEX', 'ITIL - Transição de Serviço (Service Transition).', 250),
(3614, '2013-09-13 15:00:00', 4, 'AEX', 'Estimativa de Custo da Manutenção', 261),
(3615, '2013-10-16 15:00:00', 2, 'AEX, RE', 'ITIL - Transição de Serviço (Service Transition).', 250),
(3616, '2013-10-21 14:00:00', 2, 'OTR', 'Segunda Avaliação (A2).', 250),
(3617, '2013-09-20 15:00:00', 4, 'AEX, AP', 'Medição da Manutenção de Software', 261),
(3618, '2013-10-23 14:00:00', 2, 'AEX', 'ITIL - Operação de Serviço (Service Operation).', 250),
(3619, '2013-10-30 14:00:00', 2, 'AEX', 'ITIL - Operação de Serviço (Service Operation).', 250),
(3620, '2013-11-04 14:00:00', 2, 'AEX, RE', 'ITIL - Operação de Serviço (Service Operation).', 250),
(3622, '2013-11-06 14:00:00', 2, 'AEX', 'ITIL - Melhoria Contínua do Serviço (Continual Service Improvement).', 250),
(3623, '2013-09-27 15:00:00', 8, 'AEX', 'Processo de Manutenção', 261),
(3625, '2012-10-22 14:00:00', 4, 'Aula Inicial', 'Apresentação da disciplina, levantamento de expectativas, apresentação do conteúdo e visão do mercado web de aplicações;', 266),
(3626, '2013-10-11 15:00:00', 2, 'OTR', ' Aplicação da 1ª Prova – P1', 261),
(3628, '2013-11-11 14:00:00', 2, 'AEX', 'CobiT 4.1 - Control Objectives for Information and Related Technology: Histórico, Objetivos, Estrutura, Aplicabilidade, Benefícios, Certificações relacionadas.', 250),
(3629, '2013-11-13 14:00:00', 2, 'AEX', 'COBIT - Domínio Planejar e Organizar (PO).', 250),
(3630, '2012-10-29 14:00:00', 4, 'Aula Teórica', 'Fundamentos de arquitetura Web;', 266),
(3631, '2013-11-18 14:00:00', 2, 'AEX', 'COBIT - Domínio Adquirir e Implementar (AI).', 250),
(3632, '2013-11-20 14:00:00', 2, 'OTR', 'Terceira Avaliação (A3).', 250),
(3633, '2013-10-22 14:00:00', 4, 'AEX, RE', 'Norma IEEE Std 14764-2006', 261),
(3634, '2012-11-05 14:00:00', 4, 'Aula teórica', 'Introdução ao Servidor web e seus serviços principais, http, ftp, https, pop, imap, smtp e os novos mms de compartilhamento de streams', 266),
(3635, '2013-11-27 14:00:00', 2, 'AEX', 'COBIT - Domínio Entregar e Suportar (DS).', 250),
(3636, '2013-12-02 14:00:00', 2, 'AEX, RE', 'COBIT - Domínio Monitorar e Avaliar (ME).', 250),
(3637, '2012-11-12 14:00:00', 4, 'Aula prática', 'Instalação e configuração de servidores e gestão de serviços web', 266),
(3639, '2013-12-04 14:00:00', 2, 'AEX', 'Gestão Estratégica da Informação. Business Intelligence (BI).', 250),
(3641, '2013-12-09 14:00:00', 2, 'AEX', 'Cloud Computing.', 250),
(3643, '2012-11-19 14:00:00', 4, 'Aula teórica', 'Modelo de internet; \nTecnologias aplicadas a Web;\nEstudo de casos;\nApresentação dos trabalhos a serem entregues;', 266),
(3646, '2012-11-26 14:00:00', 4, 'Aula teórica', 'Ferramentas de recursos web;\nModelos de internet\nMais estudos de casos', 266),
(3647, '2013-12-11 14:00:00', 2, 'OTR', 'Quarta Avaliação (A4).', 250),
(3650, '2013-12-16 14:00:00', 2, 'OTR', 'Avaliação Substitutiva (AS).', 250),
(3651, '2012-12-03 14:00:00', 4, 'Aula teórica', 'Entrega e apresentação dos trabalhos', 266),
(3653, '2013-11-01 14:00:00', 4, 'TG', 'Apresentação de Trabalhos - ponto de controle', 261),
(3654, '2012-12-10 14:00:00', 4, 'Aula teórica', 'Primeira avaliação A1', 266),
(3658, '2012-12-17 14:00:00', 4, 'Aula teórica', 'Resolução da prova e aplicação prática dos conceitos;\nTrabalho de recesso: Aplicar os conceitos da prova em uma implementação de site real;\nEspecificação e projeto web para entrega após o recesso.', 266),
(3660, '2013-01-07 14:00:00', 4, 'Aula teórica', 'Recebimento do trabalho de recesso e avaliação juntamente com a turma', 266),
(3662, '2013-01-14 14:00:00', 4, 'Aula prática', 'Comparação entre linguagens, implementação do projeto e validação da qualidade dos projetos', 266),
(3663, '2013-11-08 14:00:00', 4, 'AEX, AP', 'Técnicas para Manutenção', 261),
(3664, '2013-01-21 14:00:00', 4, 'Aula Teórica', 'Banco de dados online e acesso a dados online, conceitos de segurança, integridade de dados e disponibilidade de dados online;', 266),
(3665, '2013-11-19 14:00:00', 8, 'AEX, AP', 'Engenharia Reversa', 261),
(3666, '2013-01-28 14:00:00', 4, 'Aula teórica', 'Visita técnica a empresa', 266),
(3668, '2013-02-04 14:00:00', 4, 'Aula teórica', 'Avaliação', 266),
(3671, '2013-02-18 14:00:00', 0, 'Aula teórica', 'Trabalho sobre APis Web; REst, zend framework e outros;\nServiços web; utilização básicas de apis; ( a ser realizado no periodo do Carnaval)', 266),
(3672, '2013-12-03 14:00:00', 4, 'AEX, AP', 'Refatoração e transformação de programas', 261),
(3673, '2013-02-18 14:00:00', 4, 'Aula teórica', 'Entrega do trabalho;\nEntrega de resultados finais;', 266),
(3674, '2013-02-25 15:00:00', 4, 'Aula teórica', 'Entrega de resultados finais, entrega final de trabalhos;', 266),
(3675, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação da Disciplina: Professor, Plano de Aula e Forma de\nAvaliação.', 263),
(3676, '2013-12-10 14:00:00', 4, 'TG', 'Apresentação de Trabalhos - ponto de controle final', 261),
(3680, '2013-08-22 15:00:00', 2, 'AEX', 'Introdução ao curso; \nApresentação do plano de aula;\nApresentação da metodologia de ensino e de avaliação;\nApresentação da bibliografia básica.', 270),
(3681, '2013-08-23 15:00:00', 2, 'AEX', 'Conceitos Básicos de Empreendedorismo.', 263),
(3682, '2013-08-26 15:00:00', 4, 'AEX', 'Introdução a Inteligência Artificial: o que é AI, bases da AI, histórico, estado da arte, ambientes e agentes inteligentes.', 270),
(3683, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação da disciplina', 272),
(3684, '2013-09-02 15:00:00', 12, 'AEX', 'Introdução a Agentes Inteligentes:\n- Agentes e objetos, agentes e sistemas especialistas;\n- Arquiteturas abstratas para agentes inteligentes;\n- Arquiteturas concretas para agentes inteligentes;\n- Agentes de raciocínio dedutivo;\n- Agentes de raciocínio prático;\n- Agentes reativos e híbridos.', 270),
(3686, '2013-08-27 15:00:00', 2, 'AEX', 'Conceitos Básicos de Empreendedorismo.', 263),
(3687, '2013-08-23 15:00:00', 2, 'AEX', 'Evolução  das arquiteturas de computadores', 272),
(3688, '2013-09-23 15:00:00', 16, 'AEX/AP', 'Introdução a Sistemas Multi-Agentes:\n- Motivações e características de SMA;\n- Comunicação entre agentes;\n- Interação e cooperação;\n- Protocolos de interação;\n- Organização de SMA;\n- Ações e comportamentos;\n- Colaboração e repartição de tarefas;\n- Coordenação de ações.', 270),
(3689, '2013-08-28 15:00:00', 2, 'AEX', 'Máquinas multi-níveis', 272),
(3690, '2013-10-21 14:00:00', 8, 'AEX/AP', 'Introdução a Aspectos Sociais de Sistemas Multi-Agentes:\n- Trabalho em equipe;\n- Sociedade de agentes.', 270),
(3691, '2013-08-30 15:00:00', 4, 'AEX', 'Sistemas de numeração', 272),
(3692, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação do programa da disciplina: explanação dos conteúdos a serem abordados, critérios de avaliação; bibliografia adotada e objetivos.', 268),
(3694, '2013-08-30 15:00:00', 2, 'AEX', 'Características do Empreendedor.', 263),
(3695, '2013-08-26 15:00:00', 4, 'AEX/RE', 'Introdução à linguagem Java: fundamentos, variáveis, tipos, objetos, controle, arrays, métodos. Os exemplos e exercícios serão apresentados diretamente em um ambiente de desenvolvimento integrado Java.', 268),
(3696, '2013-09-06 15:00:00', 2, 'AEX', 'Representação de dados: lógico, caractere e inteiro', 272),
(3698, '2013-09-02 15:00:00', 14, 'AEX/AP/RE', 'Introdução à orientação a objetos: classes, métodos, objetos, mensagens, escopo, controle de acesso, visibilidade, construtores, sobrecarga, métodos set e get.\n\nO conteúdo será apresentado eminentemente por meio de exemplos práticos diretamente no ambiente de desenvolvimento Java. Em todos os exemplos e exercícios serão apresentados diagramas de classes UML, para que se familiarizem com a notação. Em laboratório, os alunos terão problemas de implementação reais para resolverem.', 268),
(3699, '2013-12-17 14:00:00', 2, 'RE', 'Revisão Geral', 261),
(3700, '2013-09-03 15:00:00', 2, 'AEX', 'Características do Empreendedor.', 263),
(3702, '2013-09-13 15:00:00', 2, 'AEX', 'Representação de dados: real', 272),
(3703, '2013-09-26 15:00:00', 8, 'OTR', 'Período previsto para a defesa de tese de doutoramento.', 268),
(3704, '2013-12-20 14:00:00', 2, 'OTR', 'Aplicação da 2ª Prova – P2', 261),
(3706, '2013-09-06 15:00:00', 2, 'AEX', 'Características do Empreendedor.', 263),
(3707, '2013-09-25 15:00:00', 2, 'AEX', 'Memória e sua organização', 272),
(3708, '2013-09-13 15:00:00', 2, 'AEX', 'Empreendedor Social.', 263),
(3710, '2013-09-10 15:00:00', 2, 'AEX', 'Empreendedorismo no Brasil.', 263),
(3714, '2013-02-08 14:00:00', 6, 'AEX,RE,TG', 'Modularização ', 247),
(3716, '2013-02-20 14:00:00', 2, 'OTR', 'Avaliação de aprendizagem', 247),
(3718, '2013-10-09 15:00:00', 4, 'AEX', 'Memória cache', 272),
(3720, '2013-02-22 15:00:00', 2, 'OTR', 'Entrega de resultados', 247),
(3721, '2013-10-04 15:00:00', 2, 'RE', 'Lista 2', 272),
(3724, '2013-09-27 15:00:00', 2, 'AEX', 'Memória de correção de erro', 272),
(3726, '2013-10-16 15:00:00', 4, 'AEX', 'Barramento', 272),
(3729, '2013-11-11 14:00:00', 10, 'AEX/AP', 'Apresentação de frameworks para desenvolvimento de SMA.', 270),
(3730, '2013-10-23 14:00:00', 2, 'RE', 'Lista 3', 272),
(3731, '2013-09-18 15:00:00', 2, 'RE', 'Revisão', 272),
(3735, '2013-09-20 15:00:00', 2, 'OTR', 'Primeira avaliação', 272),
(3736, '2013-09-17 15:00:00', 2, 'SE', 'Entrega e Apresentação: Primeiro Trabalho (TG1).', 263),
(3738, '2013-10-25 14:00:00', 2, 'RE', 'Disco', 272),
(3740, '2013-09-20 15:00:00', 2, 'AEX', 'O Cenário Mundial.', 263),
(3741, '2013-11-28 14:00:00', 6, 'AEX/AP', 'Orientação de projetos.', 270),
(3743, '2013-10-30 14:00:00', 4, 'AEX', 'Técnicas de entrada e saída', 272),
(3745, '2013-11-06 14:00:00', 2, 'OTR', 'Lista 4 - Atividade não presencial', 272),
(3749, '2013-12-12 14:00:00', 6, 'AEX/AP', 'Apresentação de Projetos.', 270),
(3751, '2013-11-22 14:00:00', 2, 'AEX', 'Formato de instrução, modos de endereçamento', 272),
(3759, '2013-09-24 15:00:00', 2, 'AEX', 'O Cenário Mundial.', 263),
(3760, '2013-11-27 14:00:00', 2, 'AEX', 'Pipeline', 272),
(3762, '2013-11-29 14:00:00', 2, 'RE', 'Lista 5', 272),
(3766, '2013-09-27 15:00:00', 2, 'AEX', 'O Cenário Mundial.', 263),
(3768, '2013-12-04 14:00:00', 2, 'AEX', 'Classificação de computadores:mono, multi e manycores', 272),
(3770, '2013-12-06 14:00:00', 2, 'AEX', 'Paralelismo de dados e controle', 272),
(3773, '2013-11-13 14:00:00', 4, 'AEX', 'Representação de instrução, ciclo de busca e execução', 272),
(3774, '2013-10-01 15:00:00', 2, 'AEX', 'O Cenário Mundial.', 263),
(3776, '2013-12-11 14:00:00', 2, 'RE', 'Revisão para a prova', 272),
(3778, '2013-12-13 14:00:00', 2, 'OTR', 'Segunda avaliação', 272),
(3783, '2013-09-11 15:00:00', 2, 'OTR', 'Lista 1 - Atividade não presencial', 272),
(3791, '2012-11-22 14:00:00', 2, 'OTR', 'APLICAÇÃO DA PRIMEIRA PROVA', 278),
(3792, '2013-01-17 14:00:00', 2, 'OTR', 'APLICAÇÃO DA SEGUNDA PROVA', 278),
(3793, '2013-02-27 15:00:00', 2, 'OTR', 'APLICAÇÃO DA TERCEIRA PROVA', 278),
(3796, '2012-10-17 15:00:00', 2, 'AEX', 'APRESENTAÇÃO DA DISCIPLINA E ENTREGA DA EMENTA', 278),
(3799, '2012-10-18 15:00:00', 2, 'AEX, TG, SE', '1. INTRODUÇÃO A FERRAMENTAS E MÉTODOS\n1.1. VISÃO GERAL E INTRODUÇÃO A  ÁREA DE CONHECIMENTO', 278),
(3800, '2012-10-25 14:00:00', 4, 'TG, SE', '1.2. VISÃO GERAL DAS FERRAMENTAS DE ENGENHARIA DE SOFTWARE\n1.3. VISÃO GERAL DOS MÉTODOS DE ENGENHARIA DE SOFTWARE', 278),
(3802, '2013-09-12 11:00:00', 12, 'AEX, RE, AP', 'Estrutura de Repetição', 279),
(3803, '2013-10-07 11:00:00', 10, 'AEX, RE, AP', 'Estrutura de Dados Homogênea', 279),
(3804, '2013-10-03 11:00:00', 2, 'OTR', 'Prova 1', 279),
(3805, '2013-11-07 12:00:00', 8, 'AEX, RE, AP', 'Estrutura de Dados Heterogênea', 279),
(3806, '2013-11-21 12:00:00', 12, 'AEX, RE, AP', 'Linguagem C', 279),
(3807, '2013-12-12 12:00:00', 2, 'OTR', 'Prova 3', 279),
(3808, '2013-12-16 12:00:00', 4, 'AP', 'Entrega de exercícios', 279),
(3809, '2012-10-19 15:00:00', 2, 'AEX', 'Apresentação da disciplina,  plano de ensino e critérios de avaliação.', 264),
(3810, '2012-10-19 15:00:00', 2, 'AEX', 'Conceitos de representação, conhecimento, raciocínio, engenharia do conhecimento e ontologias.', 264),
(3812, '2012-11-01 14:00:00', 6, 'AEX, TG,SE', '2. MÉTODOS DE ENGENHARIA DE SOFTWARE\n2.1. MÉTODOS HEURÍSTICOS\n    2.1.1 MÉTODOS ESTRUTURADOS\n    2.1.2. MÉTODOS ORIENTADOS AOS DADOS\n    2.1.3. MÉTODOS ORIENTADOS AOS OBJETOS', 278),
(3813, '2012-10-26 14:00:00', 4, 'AEX e RE', 'Lógica de primeira ordem, sintaxe, semântica, base de fatos, mecanismo de inferência.', 264),
(3814, '2012-11-09 14:00:00', 4, 'AP', 'Exercícios sobre lógica de primeira ordem', 264),
(3815, '2012-11-14 14:00:00', 6, 'AEX, TG', '2.2. MÉTODOS FORMAIS\n    2.2.1. LINGUAGENS DE ESPECIFICAÇÃO E NOTAÇÕES\n    2.2.2. REFINAMENTO\n    2.2.3. PROPRIEDADES DE APROVAÇÃO/VERIFICAÇÃO', 278),
(3816, '2012-11-16 14:00:00', 12, 'AEX, RE, AP', 'Lógica proposicional, fatos e regras, estratégias de busca, algoritmo de inferência, controle de backtracking e linguagem prolog', 264),
(3817, '2012-11-29 14:00:00', 4, 'AEX, SE,TG', '2.3. MÉTODOS DE PROTOTIPAÇÃO\n    2.3.1. ESTILOS\n    2.3.2. ALVO DA PROTOTIPAÇÃO\n    2.3.3. TÉCNICAS DE AVALIAÇÃO', 278),
(3818, '2012-12-07 14:00:00', 2, 'RE', 'Revisão para a primeira avaliação', 264),
(3819, '2012-12-07 14:00:00', 2, 'OTR', 'Primeira avaliação', 264),
(3820, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação do programa da disciplina: objetivos geral e específicos, explanação sobre os conteúdos a serem abordados, critérios de avaliação, bibliografia, motivação e expectativas para a disciplina.', 280),
(3821, '2013-08-23 15:00:00', 4, 'AEX', 'Revisão da Engenharia de Software: caracterização de software como produto, processos de desenvolvimento de um software, relação com Engenharia de Sistemas, papel dos requisitos.', 280),
(3822, '2012-12-14 14:00:00', 8, 'AEX, RE, AP', 'Regras de produção e estudo de aplicações', 264),
(3823, '2012-12-06 14:00:00', 4, 'AEX, AP', '3. FERRAMENTAS DA ENGENHARIA DE SOFTWARE\n3.1. FERRAMENTAS PARA ELICITAÇÃO E RASTREAMENTO DE REQUISITOS', 278),
(3824, '2013-08-30 15:00:00', 4, 'AEX', 'Definições e taxonomia de requisitos, fontes de requisitos, relações com outros artefatos, processos de Engenharia de Requisitos.', 280),
(3825, '2013-09-06 15:00:00', 12, 'AEX', 'Engenharia de Requisitos em detalhes: técnicas de levantamento e elicitação de requisitos; processos de negócio, casos de uso e modelos de análise detalhada de requisitos; especificação e normas para documentação de requisitos.', 280),
(3826, '2012-12-13 14:00:00', 4, 'AEX, SE, OTR', '3.2. FERRAMENTAS DE CONSTRUÇÃO DE PROJETOS', 278),
(3827, '2013-10-08 15:00:00', 12, 'ED, TG', 'Acompanhamento de trabalho prático de levantamento, especificação e documentação de requisitos.', 280),
(3828, '2012-12-20 14:00:00', 4, 'AEX, TG', '3.3. FERRAMENTAS PARA TESTE DE SOFTWARE', 278),
(3829, '2013-03-04 15:00:00', 2, 'AVL', 'Avaliação Prática e Entrega de Trabalhos', 282),
(3830, '2013-11-05 14:00:00', 10, 'ED, TG', 'Gerência de Requisitos, segundo o modelo MPS.Br.', 280),
(3831, '2013-01-11 14:00:00', 4, 'AEX, RE', ' Representação orientada à objetos, frames', 264),
(3832, '2013-11-19 14:00:00', 4, 'AEX', 'Gerenciamento de Requisitos: processo, rastreabilidade e controle de mudanças.', 280),
(3833, '2013-01-10 14:00:00', 4, 'AEX, TG', '3.4. FERRAMENTAS PARA MANUTENÇÃO DE SOFTWARE ', 278),
(3834, '2012-10-18 15:00:00', 2, 'AEX', '1. Apresentação do Programa:\n 1.1 Explanação sobre os conteúdos a serem abordados durante o curso\n  1.2  Critério de Avaliação\n  1.3  Bibliografia\n  1.4  Motivação e expectativas para a disciplina.', 282),
(3835, '2013-01-18 14:00:00', 4, 'RE', 'Exercícios de aprofundamento sobre regras de produção e frames', 264),
(3836, '2012-10-22 14:00:00', 4, 'AEX', '2.  Introdução\n  2.1  Estruturas de dados simples\n  2.2  Estruturas de dados vetores e matrizes\n  2.3  Exercícios de estruturas homogenias.', 282),
(3837, '2013-12-03 14:00:00', 4, 'AEX', 'Verificação e Validação de Requisitos.', 280),
(3838, '2013-01-23 14:00:00', 4, 'AEX, TG', '3.5 FERRAMENTAS PARA GERÊNCIA DE CONFIGURAÇÃO ', 278),
(3839, '2012-10-29 14:00:00', 8, 'AEX/TG', '3. Matrizes\n   3.1 Tipos especiais de matrizes\n   3.2 Mapeamento de matrizes em vetores,\n   3.3 Aplicação de Matrizes\n   3.4 Matrizes esparsas e algoritmos de atuação\n    3.5 Exercícios práticos', 282),
(3840, '2013-10-01 15:00:00', 2, 'OTR', 'Aplicação de Prova Escrita\n', 280),
(3841, '2012-11-12 14:00:00', 10, 'AEX/RE/TG', '4. Listas Lineares Estáticas e seus algoritmos:\n    4.1 Definição de Tipos de listas estáticas\n     4.2 Listas sequenciais\n     4.3 Listas com apontadores de controle\n     4.4 Pilhas estáticas\n     4.5 Filas estáticas\n     4.6 Exercícios práticos', 282),
(3842, '2013-01-30 14:00:00', 4, 'AEX, TG', '3.6. FERRAMENTAS PARA GERÊNCIA DE PROJETOS DE SOFTWARE', 278),
(3843, '2012-12-03 14:00:00', 4, 'AEX/RE', '5. Recursos de Encadeamentos em listas:\n     5.1 Representação visual.\n     5.2 Representação de inserção e remoção.', 282),
(3844, '2013-01-25 14:00:00', 8, 'AEX, RE, AP', 'Descrições estruturadas', 264),
(3845, '2012-12-10 14:00:00', 8, 'AEX/RE/TG/ED', '6. Listas Encadeadas Dinamicamente e algoritmos:\n     6.1 Listas lineares encadeadas;\n     6.2 Pilhas encadeadas;\n     6.3 Filas encadeadas;\n     6.4 Listas duplamente encadeadas.', 282),
(3846, '2013-02-06 14:00:00', 4, 'AEX, TG', '3.7. FERRAMENTAS PARA GERÊNCIA DE PROCESSOS', 278),
(3847, '2012-12-20 14:00:00', 2, 'AVL', '- Primeira Avaliação  e entrega de trabalhos individuais;', 282),
(3848, '2013-01-14 14:00:00', 8, 'AEX/RE/TG/ED', '7. Árvores e seus algoritmos\n    7.1 Introdução à teoria de árvores\n    7.2 Árvore binária e seus algoritmos\n    7.3 Árvores binárias de buscas e seus algoritmos', 282),
(3849, '2013-01-28 14:00:00', 6, 'AEX/TG/ED', '8. Árvores binárias Balanceadas e seus algoritmos:\n    8.1 Introdução à Arvores AVL;\n    8.2 Balanceamento de Árvores e seus tipos;\n    8.3 Inserção em árvores balanceadas binárias;\n    8.4 Remoção em árvores balanceadas binárias;\n    8.5 Exemplos e algoritmos de buscas', 282),
(3850, '2013-02-08 14:00:00', 4, 'AEX, AP', 'Hierarquias', 264),
(3851, '2013-02-28 15:00:00', 2, 'AVL', 'Segunda Avaliação Teórica', 282),
(3852, '2013-02-14 14:00:00', 4, 'AEX, TG', '3.8. FERRAMENTAS PARA QUALIDADE DE SOFTWARE', 278),
(3854, '2013-02-15 14:00:00', 4, 'AEX, AP', 'Imprecisão, Incerteza e Grau de Confiança', 264),
(3856, '2013-02-21 15:00:00', 2, 'AEX, TG', '3.9. OUTRAS FERRAMENTAS PARA ENGENHARIA DE SOFTWARE', 278),
(3857, '2013-02-22 14:00:00', 2, 'OTR', 'Revisão para segunda avaliação', 264),
(3859, '2013-02-22 14:00:00', 2, 'OTR', 'Segunda avaliação', 264),
(3865, '2013-02-14 14:00:00', 8, 'AEX/TG', '9. Árvores Balanceadas B Tree e principais algoritmos:\n    9.1 Árvores 2,3,4;\n    9.2 Árvores B;\n    9.3 Exercícios e trabalhos práticos.', 282),
(3866, '2013-09-12 15:00:00', 12, 'AEX, RE, AP', 'Estrutura de repetição', 286),
(3867, '2013-10-10 15:00:00', 10, 'AEX, RE, AP', 'Estrutura de dados homogênea', 286),
(3868, '2013-10-07 15:00:00', 2, 'OTR', 'Prova 1', 286),
(3869, '2013-11-04 14:00:00', 4, 'AEX, RE, AP', 'Estrutura de dados heterogênea', 286),
(3870, '2013-11-14 14:00:00', 12, 'AEX, RE, AP', 'Funções', 286),
(3871, '2013-12-16 14:00:00', 2, 'OTR', 'Prova 3', 286),
(3872, '2013-12-19 14:00:00', 2, 'OTR', 'Entrega de Resultados', 286),
(3873, '2013-08-21 15:00:00', 10, 'AEX/PRA/ED', '- Apresentação do Programa: Explanação da disciplina e dos conteúdos a serem abordados; Explicação do critério de avaliação; Bibliografia adotada; Perspectivas da disciplina e dos conteúdos a serem abordados;\n- Como funciona a Web: Protocolos, pedidos e respostas.\n- Introdução à HTML: Estruturas e principais balizas (tags) em HTML.\n- Java na Web e Introdução aos Servlets: Servidores e Containeres Servlets\nAplicações; Ciclo de vida de um Servlet.', 284),
(3874, '2013-08-30 15:00:00', 6, 'AEX/PRA', '- Introdução à Classe HttpServlet: Criação de Servlets usando método Post e Get; Recuperação de strings de consulta com Servlets\n- Interface HttpServletRequest: Uso de métodos de HttpServletRequest; Leitura de formulários e recuperação de cabeçalhos\n- Cookies e Sessões: Criaçao de Cookies; Recuperação de Cookies; Uso, término e gerenciamento de sessões.', 284),
(3875, '2013-09-06 15:00:00', 6, 'AEX/PRA', '- Introdução à JSP (Java Server Pages): Estrutura de uma página JSP; Configuração da aplicação (arquivo web.xml); Diretiva Page e Include; Comparação de JSP com Servlets.\n- Controle de Erros: Tratamento de erros; Captura de erros usando JSP.', 284),
(3876, '2013-08-21 15:00:00', 2, 'AEX', 'Introdução: apresentação da disciplina e do plano de ensino', 287),
(3877, '2013-09-13 15:00:00', 6, 'AEX/PRA', '- Ações: Standard actions; Custom actions; JSTL actions.\n- Introdução aos JavaBeans: Criaçao de JavaBeans; Uso de actions; JavaBeans mais dinâmicos.', 284),
(3878, '2013-09-04 15:00:00', 16, 'AEX, RE', 'Introdução a Metodologia Cientifica', 287),
(3879, '2013-08-23 15:00:00', 6, 'AEX, TG', 'Leitura de documentos', 287),
(3880, '2013-10-02 15:00:00', 6, 'AEX, TG, SE', 'Pesquisa e Desenvolvimento', 287),
(3881, '2013-10-11 15:00:00', 2, 'SE', 'Avaliação 1', 287),
(3883, '2013-11-25 14:00:00', 8, 'AEX/TG', '9. Árvores Balanceadas B Tree e principais algoritmos:\n    9.1 Árvores 2,3,4;\n    9.2 Árvores B;\n    9.3 Exercícios e trabalhos práticos.', 203),
(3884, '2013-10-16 15:00:00', 8, 'AEX, TG', 'Linguagem Científica', 287),
(3885, '2013-11-06 14:00:00', 6, 'AEX', 'Trabalhos e Comunicação Científica', 287),
(3886, '2013-11-22 14:00:00', 6, 'AEX, TG, ED', 'Escrita de artigos', 287),
(3887, '2013-11-27 14:00:00', 2, 'AEX', 'Técnicas de apresentações', 287),
(3888, '2013-12-11 14:00:00', 8, 'SE', 'Avaliação 2', 287),
(3889, '2013-12-13 14:00:00', 2, 'OTR', 'Entrega de Resultados', 287),
(3890, '2013-09-20 15:00:00', 12, 'AEX/PRA', 'Uso de Banco de Dados e JDBC (Java Database Connectivity): Conexao JDBC; Principais statements.\n- Introdução à arquitetura MVC (Model-View-Controller) e DAO (Data Acceess Object): O quê é MVC; Aplicações Web; O que é DAO; Usando DAO para fazer operações de acesso a dados.', 284),
(3892, '2013-10-04 15:00:00', 8, 'AEX/PRA', '- JSP EL (Expression Language): Sintaxe; Literals; Operadores; EL e JavaBeans.\n- STL (Standard Tag Library): JavaServer Pages Standard Tag Library (JSTL); Tags SQL; Uso de STL e EL.', 284),
(3893, '2013-10-16 15:00:00', 8, 'RE/SE', 'Apresentação de trabalhos', 284),
(3894, '2013-10-23 14:00:00', 6, 'AEX/PRA', '- Introdução à Custom Tags: Uso de Custom Tags; Construção de Tags; Tag Library Descriptor (TLD); Criação de TLD.', 284),
(3895, '2013-10-30 14:00:00', 14, 'AEX/PRA', 'Introdução à JSF (Java Server Faces):\nExemplo de JSF\nTags padrões do JSF\nCiclo de vida do JSF\nBanco de dados e JSF\nPáginas JSF', 284),
(3896, '2013-11-20 14:00:00', 8, 'AEX/PRA', 'Introdução à JSF e Hibernate: Conexão ao Hibernate; Hibernate; Annotations; API de persistência.', 284),
(3897, '2013-11-29 14:00:00', 6, 'AEX/PRA', '- Introdução ao RIA com Primefaces: O que é e como funciona Primefaces; Principais componentes Primefaces.', 284),
(3899, '2013-12-06 14:00:00', 6, 'SE/TG', '- Apresentação de trabalhos.', 284),
(3910, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação da Disciplina. ', 288),
(3911, '2013-08-23 15:00:00', 8, 'AEX, AP, ED', 'Conceitos Básicos', 288),
(3912, '2013-09-06 15:00:00', 10, 'AEX, RE, AP, ED', 'Estrutura Sequencial e de Seleção', 288),
(3914, '2013-09-27 15:00:00', 2, 'AEX', 'Revisão Geral para Prova', 280),
(3915, '2013-10-29 14:00:00', 2, 'OTR', 'Avaliação 1', 288),
(3916, '2013-08-22 15:00:00', 2, 'AEX', 'Introdução à Metodologia de Ensino, apresentação da disciplina e plano de ensino.\n', 289),
(3917, '2013-10-05 15:00:00', 2, 'OTR', 'Definição de Trabalhos Práticos', 280),
(3918, '2013-11-01 14:00:00', 14, 'AEX, RE, AP', 'Estrutura de dados homogênea', 288),
(3919, '2013-12-17 14:00:00', 2, 'OTR', 'Aplicação de Prova Escrita', 280),
(3921, '2013-12-23 14:00:00', 2, 'OTR', 'Entrega de Provas e Trabalhos', 280),
(3922, '2013-11-29 14:00:00', 8, 'AEX, RE, AP', 'Módulos', 288),
(3923, '2013-12-13 14:00:00', 2, 'OTR', 'Avaliação 2', 288),
(3924, '2013-12-17 14:00:00', 2, 'OTR', 'Entrega de Resultados', 288),
(3926, '2013-12-10 14:00:00', 2, 'AEX', 'Revisão Geral para Prova', 280),
(3928, '2013-10-01 15:00:00', 16, 'AEX, RE, AP', 'Estrutura de Repetição', 288),
(3940, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação do Curso; Máquinas multinível', 291),
(3941, '2013-08-23 15:00:00', 2, 'AEX', 'Evolução das arquiteturas de computadores', 291),
(3942, '2013-08-27 15:00:00', 2, 'AEX', 'Sistemas de numeração e Sistemas Digitais', 291),
(3943, '2013-08-30 15:00:00', 2, 'OTR', 'Exercícios – lista 1', 291),
(3944, '2013-09-03 15:00:00', 2, 'AEX', 'Organização da Memória', 291),
(3945, '2013-09-06 15:00:00', 2, 'AEX', 'Representação de dados: tipos caractere e inteiro', 291),
(3946, '2013-09-10 15:00:00', 2, 'AEX', 'Representação de dados: tipo real', 291),
(3947, '2013-09-13 15:00:00', 2, 'OTR', 'Exercícios – lista 2', 291),
(3948, '2013-09-17 15:00:00', 2, 'RE', 'Revisão', 291),
(3949, '2013-09-20 15:00:00', 2, 'OTR', 'Prova 1', 291),
(3950, '2013-09-24 15:00:00', 2, 'AEX', 'Barramentos', 291),
(3951, '2013-09-27 15:00:00', 2, 'AEX', 'Dispositvos de Entrada e Saída (E/S): discos', 291),
(3953, '2013-10-01 15:00:00', 2, 'AEX', 'Técnicas de Entrada e Saída (E/S)', 291),
(3954, '2013-10-04 15:00:00', 2, 'OTR', 'Exercícios – lista 3', 291),
(3955, '2013-10-08 15:00:00', 2, 'AEX', 'Representação de instruções, ciclo de busca-decodifica-executa', 291),
(3956, '2013-10-11 15:00:00', 2, 'AEX', 'Processador – xComputer', 291),
(3957, '2013-10-18 15:00:00', 2, 'AEX', 'Formato de instruções, Modos de endereçamento', 291),
(3958, '2013-10-22 14:00:00', 2, 'AEX', 'Arquitetura e Linguagem de Montagem MIPS', 291),
(3959, '2013-10-25 14:00:00', 2, 'OTR', 'Exercícios – lista 4', 291),
(3960, '2013-10-29 14:00:00', 2, 'RE', 'Revisão', 291),
(3961, '2013-11-01 14:00:00', 2, 'OTR', 'Prova 2', 291),
(3962, '2013-11-05 14:00:00', 2, 'AEX', 'Pipeline', 291),
(3963, '2013-11-08 14:00:00', 2, 'AEX', 'Ordem de bytes e introdução a memória cache', 291),
(3964, '2013-11-12 14:00:00', 2, 'AEX', 'Memória e correção de erros', 291),
(3965, '2013-11-19 14:00:00', 2, 'OTR', 'Exercícios – lista 5', 291),
(3966, '2013-11-22 14:00:00', 2, 'AEX', 'Classificação de Computadores: mono, multi e manycore', 291),
(3967, '2013-11-26 14:00:00', 2, 'AEX', 'Paralelismo de dados e controle, Desenvolvimento de Programas Paralelos', 291),
(3968, '2013-11-29 14:00:00', 2, 'AEX', 'Speedup, eficiência e escalabilidade, Leis de Amadahl e Gustafson', 291),
(3969, '2013-12-03 14:00:00', 2, 'OTR', 'Exercícios – lista 6', 291),
(3970, '2013-12-06 14:00:00', 2, 'RE', 'Revisão', 291),
(3971, '2013-12-10 14:00:00', 2, 'OTR', 'Prova 3', 291),
(3972, '2013-12-13 14:00:00', 2, 'OTR', 'Entrega de notas e discussão', 291),
(3973, '2013-08-22 15:00:00', 2, 'AEX, OTR', 'Apresentação da Disciplina', 290),
(3976, '2013-08-26 15:00:00', 2, 'RE', 'Revisão sobre conceitos básicos de linguagem C', 290),
(3977, '2013-08-29 15:00:00', 10, 'RE', 'Estruturas de dados homogêneas', 290),
(3978, '2013-09-16 15:00:00', 6, 'RE', 'Funções e estrutura de um programa', 290),
(3981, '2013-09-26 15:00:00', 24, 'RE', 'Ponteiros', 290),
(3982, '2013-11-18 14:00:00', 8, 'RE', 'Estruturas e dados definidos pelo usuário', 290),
(3988, '2013-08-21 15:00:00', 4, 'AEX', 'Apresentação da disciplina; Processo de Software (MPS.Br, CMMI e Metodologias Ágeis)', 281),
(3989, '2013-12-02 14:00:00', 12, 'RE', 'Arquivos', 290),
(3991, '2013-03-25 15:00:00', 4, 'AEX', 'Introdução à Programação Paralela e Distribuída', 293),
(3992, '2013-04-01 15:00:00', 4, 'AEX', 'Modelos e Arquiteturas Paralelas', 293),
(3994, '2013-04-08 15:00:00', 4, 'AEX', 'Arquiteturas Paralelas e Programação Paralela', 293),
(3996, '2013-04-15 15:00:00', 4, 'AEX', 'Memória Compartilhada e Passagem de Mensagem', 293),
(3997, '2013-04-22 15:00:00', 4, 'OTR', 'Prova 1', 293),
(3998, '2013-08-28 15:00:00', 4, 'AEX', 'Gerência de Projetos', 281),
(3999, '2013-04-29 15:00:00', 4, 'AEX', 'Arquitetura e Linguagem CUDA', 293),
(4000, '2013-05-06 15:00:00', 4, 'AEX', 'Otimização de programas CUDA ', 293),
(4001, '2013-05-13 15:00:00', 4, 'AEX', 'OpenCL e outras tendências ', 293),
(4002, '2013-09-04 15:00:00', 4, 'AEX', 'Gerência de Configuração', 281),
(4003, '2013-10-23 14:00:00', 4, 'AEX', 'Definição do trabalho Final e apresentação de Ferramentas CASE e Frameworks', 281),
(4004, '2013-05-20 15:00:00', 4, 'AEX', 'Arquiteturas e modelos de programação distribuída', 293),
(4005, '2013-09-11 15:00:00', 4, 'AEX', 'Engenharia de Requisitos', 281),
(4006, '2013-05-27 15:00:00', 4, 'AEX', 'Comunicação e gerência de processos', 293),
(4007, '2013-06-03 15:00:00', 4, 'AEX', 'Paradigmas para Computação Distribuídas', 293),
(4008, '2013-09-18 15:00:00', 4, 'AEX', 'Projeto de Software/Software Orientado a Objetos', 281),
(4009, '2013-06-10 15:00:00', 4, 'AEX', 'Paradigmas para Computação Distribuídas', 293),
(4010, '2013-06-17 15:00:00', 4, 'AEX', 'Paradigmas para Computação Distribuídas', 293),
(4011, '2013-09-25 15:00:00', 4, 'AEX', 'Projeto de Interface com o Usuário', 281),
(4012, '2013-06-24 15:00:00', 4, 'AEX', 'Paradigmas para Computação Distribuídas', 293),
(4013, '2013-07-01 15:00:00', 4, 'OTR', 'Prova 2', 293),
(4014, '2013-10-02 15:00:00', 4, 'AEX', 'Verificação e Validação de Software;  Manutenção, Evolução e Reengenharia', 281),
(4015, '2013-10-09 15:00:00', 4, 'OTR', 'Prova 1', 281),
(4016, '2013-10-30 14:00:00', 20, 'TG,AP,ED', 'Acompanhamento do trabalho prático de engenharia de um software', 281),
(4017, '2013-12-04 14:00:00', 8, 'SE, ED', 'Seminários e Apresentação dos trabalhos', 281),
(4018, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação, Planejamento da Disciplina e Calendário', 295),
(4019, '2013-08-23 15:00:00', 6, 'AEX, RE', 'Noções básicas de grafos', 295),
(4020, '2013-09-03 15:00:00', 4, 'AEX, RE', 'Representação de grafos', 295),
(4021, '2013-09-10 15:00:00', 8, 'AEX, RE', 'Algoritmos de caminho mais curto', 295),
(4022, '2013-10-04 15:00:00', 4, 'AEX, RE', 'Arvores', 295),
(4023, '2013-10-01 15:00:00', 2, 'OTR', 'Prova 1', 295),
(4024, '2013-10-18 15:00:00', 4, 'AEX, RE', 'Ciclos Eulerianos e Hamiltonianos', 295),
(4025, '2013-11-01 14:00:00', 2, 'RE', 'Exercicios', 295),
(4026, '2013-11-08 14:00:00', 4, 'AEX, RE', 'Coloração', 295),
(4027, '2013-11-05 14:00:00', 2, 'OTR', 'Prova 2', 295),
(4028, '2013-11-19 14:00:00', 4, 'AEX, RE', 'Conjunto independente de vertices', 295),
(4029, '2013-11-26 14:00:00', 4, 'AEX, RE', 'Matching', 295),
(4030, '2013-12-03 14:00:00', 4, 'AEX, RE', 'Fluxo em Redes', 295),
(4031, '2013-12-13 14:00:00', 2, 'OTR', 'Prova 3', 295),
(4033, '2013-12-17 14:00:00', 2, 'OTR', 'Entrega de Resultados', 295),
(4035, '2013-08-23 15:00:00', 4, 'AEX', 'Apresentação do plano de curso e formas de avaliação.\nDefinição dos grupos de apresentação. Explicação sobre a elaboração dos artigos e forma de avaliação.\nÉtica e comportamento ético em ciência da computação.', 296),
(4036, '2013-09-06 15:00:00', 2, 'SE', 'Tecnologia da Informação e Sociedade.', 296),
(4037, '2013-09-13 15:00:00', 2, 'SE', 'Aplicações Sociais da Computação: Educação, Medicina, Governo, etc.', 296),
(4038, '2013-09-20 15:00:00', 2, 'SE', 'Aspectos sociais, éticos, legais e profissionais da área de TI.', 296),
(4039, '2013-09-27 15:00:00', 4, 'SE', 'Propriedade intelectual. ', 296),
(4040, '2013-10-11 15:00:00', 2, 'SE', 'Software Proprietário x Software Livre.', 296),
(4041, '2013-10-18 15:00:00', 6, 'SE', 'Segurança, privacidade de dados e acesso não autorizado. Ameaças à segurança. ', 296),
(4043, '2013-11-22 14:00:00', 2, 'SE', 'Doenças Profissionais na Área de Computação. ', 296),
(4044, '2013-11-29 14:00:00', 2, 'SE', 'Regulamentação da profissão. Códigos de ética profissional. Computação Social e Inclusão Digital. Redes Sociais.\n', 296),
(4050, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação, Planejamento da Disciplina, Calendário, Nivelamento', 297),
(4051, '2013-08-23 15:00:00', 8, 'AEX', 'Histórico da Computação, Visão Geral do Computador, Software e Hardware ', 297),
(4052, '2013-09-06 15:00:00', 10, 'AEX', 'Visão Geral do INF e do Curso de Ciências da Computação', 297),
(4053, '2013-09-24 15:00:00', 8, 'AEX', 'Profissionalismo e Etica', 297),
(4054, '2013-10-11 15:00:00', 2, 'OTR', 'Prova 1', 297),
(4055, '2013-10-15 15:00:00', 14, 'AEX', 'Metodologia cientifica e elaboração de documentos técnico-científicos', 297),
(4056, '2013-11-08 14:00:00', 6, 'AEX, RE', 'Representação de dados', 297),
(4057, '2013-12-10 14:00:00', 2, 'OTR', 'Prova 2', 297),
(4058, '2013-11-22 14:00:00', 10, 'RE', 'Modelagem e resolução de problemas', 297),
(4059, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação do Programa, Explanação sobre os conteúdos a serem abordados durante o curso, Critério de Avaliação, Motivação e expectativas para a disciplina, Teste de autoavaliação.', 298),
(4062, '2013-12-13 14:00:00', 2, 'OTR', 'Revisão de notas', 297),
(4075, '2013-12-09 14:00:00', 4, 'OTR', 'Divulgação dos resultados', 294),
(4076, '2013-11-18 14:00:00', 10, 'SE', 'Apresentação dos seminários da disciplina', 294),
(4077, '2013-12-05 14:00:00', 2, 'OTR', 'Resolução da avaliação e solução das dúvidas', 294),
(4078, '2013-11-14 14:00:00', 4, 'OTR', 'Avaliação', 294),
(4079, '2013-11-11 14:00:00', 2, 'RE', 'Revisão e solução de dúvidas', 294),
(4080, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação da disciplina', 294),
(4081, '2013-08-26 15:00:00', 4, 'RE', 'Conceitualização de imagens digitais', 294),
(4082, '2013-09-02 15:00:00', 6, 'RE', 'Modelo digital de cores e níveis de cinza', 294),
(4083, '2013-09-12 15:00:00', 8, 'RE', 'Filtros e operadores de imagens', 294),
(4084, '2013-09-26 15:00:00', 8, 'RE', 'Segmentação', 294),
(4085, '2013-10-10 15:00:00', 6, 'RE', 'Morfologia', 294),
(4086, '2013-10-21 14:00:00', 8, 'RE', 'Texturas', 294),
(4087, '2012-10-18 15:00:00', 4, 'AEX', 'O Contexto da Experimentação na Engenharia de Software', 299),
(4088, '2012-11-01 14:00:00', 8, 'AEX, TG, AP', 'Metodologia Científica aplicada à Engenharia de Software', 299),
(4089, '2012-11-20 14:00:00', 16, 'AEX, RE, TG, AP, ED', 'Engenharia de Software Experimental', 299),
(4090, '2012-12-18 14:00:00', 16, 'ED, SE, TG, AEX, OTR', 'Definição de Experimentos com Software', 299),
(4091, '2013-01-29 14:00:00', 16, 'AEX, RE, TG, AP, ED. SE, OTR', 'O Estado da Arte em Experimentação com Software', 299),
(4092, '2013-02-28 15:00:00', 4, 'AP', 'Realização de Experimentos em Software', 299),
(4093, '2012-10-23 14:00:00', 2, 'AEX, AP', '01', 262),
(4094, '2012-10-26 14:00:00', 2, 'AEX, RE, AP', '01, 02', 262),
(4095, '2012-10-30 14:00:00', 2, 'AEX, RE, AP', '02', 262),
(4096, '2012-11-06 14:00:00', 2, 'AEX, RE, AP', '02', 262),
(4097, '2012-11-09 14:00:00', 2, 'AEX, RE, AP', '02,03', 262),
(4098, '2013-08-29 15:00:00', 6, 'AEX, ED, AP, SE, TG', 'Processo de Engenharia de Software', 300),
(4099, '2012-11-13 14:00:00', 2, 'AEX, RE, AP', '03', 262),
(4100, '2013-08-22 15:00:00', 4, 'AEX', 'Apresentação do Programa da Disciplina e do Projeto a ser desenvolvido', 300),
(4101, '2013-09-05 15:00:00', 6, 'AEX, TG, AP, ED, SE', 'Gerência de Engenharia de Software', 300),
(4102, '2012-11-16 14:00:00', 2, 'AEX, RE, AP', '03', 262),
(4103, '2013-09-19 15:00:00', 6, 'AEX, AP, TG, ED', 'Requisitos de Software', 300),
(4104, '2013-09-26 15:00:00', 6, 'AEX, TG, AP, ED', 'Arquitetura e Design de Software', 300),
(4105, '2012-11-20 14:00:00', 2, 'AEX, RE, AP', '04', 262),
(4106, '2013-10-10 15:00:00', 6, 'AEX, AP, ED, SE, TG', 'Gerência de Configuração de Software', 300),
(4107, '2012-11-23 14:00:00', 2, 'AEX, RE, AP', '04', 262),
(4108, '2013-10-17 15:00:00', 6, 'AEX, TG, AP, ED', 'Construção de Software', 300),
(4109, '2012-11-27 14:00:00', 2, 'AEX, RE, AP', '05', 262),
(4110, '2013-11-07 14:00:00', 6, 'AEX, RE, TG, SE, ED', 'Teste de Software', 300),
(4111, '2012-11-30 14:00:00', 2, 'AEX, RE, AP', '05', 262),
(4112, '2013-11-14 14:00:00', 6, 'AEX, SE, ED, AP, TG', 'Manutenção de Software', 300),
(4113, '2012-12-04 14:00:00', 2, 'AEX, RE, AP', '05,06', 262),
(4114, '2013-11-28 14:00:00', 6, 'AEX, SE, TG, AP, ED', 'Métodos e Ferramentas de Engenharia de Software', 300),
(4115, '2012-12-07 14:00:00', 2, 'AEX, RE, AP', '06', 262),
(4116, '2013-12-05 14:00:00', 6, 'AEX, SE, ED, TG, AP', 'Qualidade de Software', 300),
(4117, '2012-12-11 14:00:00', 2, 'OTR', 'Avaliação', 262),
(4118, '2012-12-14 14:00:00', 2, 'AEX, RE, AP', '.', 262),
(4119, '2012-12-18 14:00:00', 2, 'AEX, RE, AP', '.', 262),
(4120, '2012-12-21 14:00:00', 2, 'AEX, RE, AP', '.', 262),
(4121, '2013-08-23 15:00:00', 4, 'AP', 'Apresentação do Programa da Disciplina e realização de atividades de iniciação do projeto ', 302),
(4122, '2012-11-08 14:00:00', 2, 'AEX, RE, AP', '07', 262),
(4123, '2013-08-30 15:00:00', 4, 'AP, TG, ED', 'Realização de atividades de planejamento do projeto', 302),
(4124, '2013-01-11 14:00:00', 2, 'AEX, RE, AP', '07', 262),
(4125, '2013-09-06 15:00:00', 52, 'AP, TG, ED, OTR', 'Realização de atividades técnicas, gerenciais e de apoio, dentro do contexto de execução, monitoramento e controle do projeto', 302),
(4126, '2013-01-15 14:00:00', 2, 'AEX, RE, AP', '07', 262),
(4127, '2013-12-06 14:00:00', 4, 'AP, TG', 'Realização de atividades de encerramento do projeto', 302),
(4128, '2013-01-18 14:00:00', 2, 'AEX, RE, AP', '07,08', 262),
(4129, '2013-01-22 14:00:00', 2, 'AEX, RE, AP', '08', 262),
(4130, '2013-01-25 14:00:00', 2, 'AEX, RE, AP''', '07,08', 262),
(4131, '2013-01-29 14:00:00', 2, 'AEX, RE, AP', '08', 262),
(4132, '2013-02-01 14:00:00', 2, 'AEX, RE, AP', '08', 262),
(4133, '2013-02-05 14:00:00', 2, 'AEX, RE, AP', '08', 262),
(4134, '2013-02-08 14:00:00', 2, 'AEX, RE, AP''', '08', 262),
(4135, '2013-01-15 14:00:00', 2, 'AP', 'acompanhamento dos trabalhos', 262),
(4136, '2013-02-19 14:00:00', 2, 'OTR', 'avaliação', 262),
(4137, '2013-02-22 14:00:00', 2, 'OTR', 'correção de atividades.', 262),
(4138, '2013-02-26 15:00:00', 2, 'AEX, RE, AP', 'resultados finais.', 262),
(4139, '2013-08-19 15:00:00', 2, 'OTR', 'Apresentação do Programa da disciplina:\nConteúdo programático, metodologia de trabalho, critério de avaliação, referências bibliográficas\n', 301),
(4140, '2013-08-26 15:00:00', 12, 'AEX/RE', 'MPS.BR', 301),
(4141, '2013-09-30 15:00:00', 8, 'OTR', 'PROVA', 301),
(4144, '2013-10-21 14:00:00', 4, 'ED', 'AVALIAÇÃO DE PROCESSOS', 301),
(4145, '2013-11-29 14:00:00', 4, 'OTR', 'AVALIAÇÃO E ENTREGA DE NOTAS', 301),
(4146, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação da disciplina levantamento de motivaçãoes e primeiros conceitos.', 213),
(4147, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação da Disciplina: Identificação; Ementa; Conteúdo Programático; Objetivos; Procedimentos Didáticos; Avaliação da Aprendizagem; Bibliografias.', 283),
(4148, '2013-08-22 15:00:00', 2, 'AEX', 'Visão sobre algoritmos e linguagens de programação.', 283),
(4149, '2013-08-29 15:00:00', 4, 'AEX,RE,AP', 'Elementos Fundamentais da Construção de Algoritmos: Tipo de Dados; Formação de Identificadores; Constantes; Variáveis; Comando de Atribuição; Comandos de Entrada e Saída.', 283),
(4150, '2013-09-05 15:00:00', 2, 'AEX', 'Expressões e Operadores: Expressões Aritméticas; Expressões Lógicas.', 283),
(4151, '2013-09-05 15:00:00', 2, 'AEX,RE', 'Estrutura Sequencial.', 283),
(4152, '2013-09-12 15:00:00', 8, 'AEX,RE,AP', 'Estruturas de Seleção: Simples; Compostas; Encadeada Heterogênea; Encadeada Homogênea; Múltipla Escolha.', 283),
(4153, '2013-09-26 15:00:00', 12, 'AEX,RE,AP', 'Estruturas de Repetição: Com Teste no Início; Com Teste no Final; Com Variável de Controle; Encadeada.', 283),
(4154, '2013-10-17 15:00:00', 14, 'AEX,RE,AP', 'Estruturas de Dados Simples: Variáveis Compostas Homogêneas (Vetores e Matrizes).', 283),
(4155, '2013-11-21 14:00:00', 8, 'AEX,RE,AP', 'Modularização e Funções.', 283),
(4156, '2013-12-05 14:00:00', 6, 'AEX,RE,AP', 'Recursividade.', 283),
(4161, '2013-08-23 15:00:00', 2, 'AEX', 'Apresentação da disciplina levantamento de motivaçãoes e primeiros conceitos.', 213),
(4162, '2013-08-27 15:00:00', 4, 'AEX', 'Características do Empreendedor', 213),
(4163, '2013-09-10 15:00:00', 2, 'AEX', 'Empreendedor Social', 213),
(4165, '2013-09-03 15:00:00', 2, 'AEX', 'Empreendedorismo no Brasil', 213),
(4166, '2013-09-13 15:00:00', 16, 'AEX', 'O Cenário Mundial', 213),
(4167, '2013-10-11 15:00:00', 4, 'AEX', 'Movimento Startup', 213),
(4168, '2013-12-06 14:00:00', 4, 'AEX', 'Avaliação de resultados', 213),
(4171, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação do Programa: Conteúdo a ser abordado durante o curso; Critério de Avaliação; Motivação e expectativas; Contextualização histórica da Pesquisa Operacional.', 303),
(4173, '2013-08-26 15:00:00', 6, 'RE', 'Modelagem em Programação Linear e Programação Inteira.', 303),
(4174, '2013-09-05 15:00:00', 6, 'AEX, RE', 'Resolução gráfica de Problemas de Programação Linear (PPL).', 303),
(4175, '2013-09-16 15:00:00', 6, 'AEX,RE', 'O PPL primal no formato padrão (P); Definições associadas ao problema (P): Conjunto viável, Matriz Base, Solução básica viável, Solução ótima.', 303),
(4176, '2013-09-26 15:00:00', 4, 'RE', 'Redução de um PPL qualquer para o formato padrão.', 303),
(4177, '2013-10-03 15:00:00', 2, 'OTR', 'Prova 1.', 303),
(4178, '2013-10-07 15:00:00', 4, 'AEX', 'Caracterização do conjunto viável.', 303),
(4179, '2013-10-17 15:00:00', 8, 'AEX', 'Fundamentação teórica do Simplex.', 303),
(4182, '2013-11-07 14:00:00', 8, 'AEX,RE', 'Algoritmo Simplex Fase 2.', 303),
(4183, '2013-11-25 14:00:00', 6, 'AEX,RE', 'Algoritmo Simplex Fases 1 e 2.', 303),
(4184, '2013-12-09 14:00:00', 6, 'AEX,RE', 'Introdução à Dualidade em PL e o algoritmo Dual Simplex.', 303),
(4185, '2013-12-19 14:00:00', 2, 'OTR', 'Prova 3.', 303),
(4186, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação do programa da disciplina: explanação dos conteúdos a serem abordados, critérios de avaliação; bibliografia adotada e objetivos. Caracterização de sistemas distribuídos.', 304),
(4187, '2013-08-26 15:00:00', 8, 'AEX, RE', 'Caracterização  e Modelos de Sistemas Distribuídos: middleware e arquiteturas de Sistemas Distribuídos.', 304),
(4188, '2013-09-09 15:00:00', 10, 'AEX, AP, RE', 'Objetos Distribuídos: RPC, modelo de objetos distribuídos, noções de CORBA. implementação de RMI. Aulas práticas de RMI  e CORBA em laboratório.', 304),
(4189, '2013-09-26 15:00:00', 8, 'AEX, AP, RE', 'Comunicação Inter-processo: API Java UDP e TCP, representação externa de dados e empacotamento, comunicação cliente-servidor, protocolo requisição/resposta, comunicação em grupo. Implementação de sockets em laboratório.', 304),
(4190, '2013-10-10 15:00:00', 2, 'OTR', '1a. prova escrita individual.', 304),
(4191, '2013-10-21 14:00:00', 6, 'AEX,AP', 'Java Message Services (JMS): Conceitos, arquitetura e protocolos.', 304),
(4193, '2013-11-18 14:00:00', 8, 'AEX, RE, AP', 'Replicação, transação distribuída e tolerância a falhas: comunicação confiável; replicação e manutenção de consistência entre réplicas; comunicação de grupo.', 304),
(4194, '2013-12-05 14:00:00', 2, 'OTR', '2a. prova escrita individual.', 304),
(4195, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação da disciplina:\n- plano de aulas;\n- sistema de avaliação;\n- datas importantes;\n- bibliografia.', 305),
(4199, '2013-08-22 15:00:00', 4, 'AEX  e TG', 'Definição de projeto.\nInteração entre projeto,requisitos e construção.\nRelação entre arquitetura de software e projeto de software.\nContexto de projeto em vários modelos de desenvolvimento de software.\nQuestões fundamentais do projeto: persistência dos dados; concorrência; exceções e outras.', 305),
(4201, '2013-08-29 15:00:00', 4, 'AEX', 'Noções básicas de Projeto Arquitetural.', 305),
(4202, '2013-09-05 15:00:00', 4, 'AEX e TG', 'Projeto Orientado a Objetos: revisão de fundamentos de O. O. : classe, relacionamento, objeto, interface, herança, polimorfismo, composição.', 305),
(4204, '2013-09-12 15:00:00', 8, 'AEX e AP', 'Princípios de projeto por meio dos padrões GRASP:\n- encapsulamento de informações,\n- alta coesão e\n- baixo acoplamento.', 305),
(4206, '2013-09-26 15:00:00', 2, 'OTR', 'Primeira Avaliação', 305),
(4208, '2013-10-03 15:00:00', 8, 'AEX e AP', 'Padrões de projeto Gang of Four', 305),
(4209, '2013-10-01 15:00:00', 2, 'AEX', 'Apresentação do Projeto a ser desenvolvido pelas equipes.', 305),
(4210, '2013-10-17 15:00:00', 2, 'OTR', 'Acompanhamento do Desenvolvimento do Projeto.', 305),
(4211, '2013-10-31 14:00:00', 8, 'AEX e TG', 'Padrões de Projeto GoF', 305),
(4212, '2013-11-14 14:00:00', 2, 'OTR', 'Segunda Avaliação.', 305),
(4214, '2013-08-20 15:00:00', 8, 'AEX e AP', '1. Comunicação Interprocessos e Programação com Sockets', 307),
(4219, '2013-11-19 14:00:00', 6, 'AEX, TG e AP', 'Acompanhamento do desenvolvimento do trabalho prático.', 305),
(4221, '2013-11-28 14:00:00', 2, 'OTR', 'Entrega do Trabalho prático.', 305),
(4226, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação da ementa da disciplina.', 308),
(4228, '2013-08-30 15:00:00', 8, 'AEX, AP', 'Conceitos básicos de programação em Java.', 308),
(4233, '2013-09-20 15:00:00', 6, 'AEX, AP', 'Encapsulamento:\n- Modificadores de acesso (publico e privado)\n- Getters e setters \n- Construtores\n', 308),
(4236, '2013-08-26 15:00:00', 4, 'AEX', 'Conceitos básicos de OO: Tipos abstratos de dados, Classe, objeto, mensagem e método, construtor e destrutor', 308),
(4239, '2013-08-23 15:00:00', 2, 'AEX', 'Motivação para orientação a objetos. Linguagens orientadas a objetos. ', 308),
(4240, '2013-08-21 15:00:00', 4, 'AEX', '1. Introdução à Segurança Computacional', 310),
(4241, '2013-08-28 15:00:00', 10, 'AEX e AP', '2. Criptografia', 310),
(4242, '2013-09-13 15:00:00', 4, 'AEX e AP', '3. Integridade', 310),
(4243, '2013-09-18 15:00:00', 8, 'AEX e AP', '4. Distribuição de Chaves e Certificação', 310),
(4244, '2013-10-02 15:00:00', 8, 'AEX e AP', '5. Autenticação', 310),
(4245, '2013-10-16 15:00:00', 8, 'AEX e AP', '6. Protocolos de Segurança', 310),
(4246, '2012-10-17 15:00:00', 6, 'AEX, RE, TG, AP', 'Definições Básicas', 277),
(4247, '2013-10-30 14:00:00', 10, 'AEX e AP', '7. Gerenciamento de Segurança', 310),
(4248, '2012-10-31 14:00:00', 10, 'AEX, RE, TG, AP', 'Ciclo de Vida de um Projeto', 277),
(4249, '2013-11-20 14:00:00', 12, 'AEX e AP', '8. Ameaças e Ataques', 310),
(4250, '2012-11-21 14:00:00', 20, 'AEX, RE, TG, AP', 'Áreas do Gerenciamento de Projetos ', 277),
(4251, '2013-01-09 14:00:00', 12, 'AEX, RE, TG, AP', 'Competências e Habilidades do Gerente de Projeto', 277),
(4252, '2013-01-30 14:00:00', 8, 'AEX, RE, TG, AP', 'Metodologias e Ferramentas de Gerenciamento', 277),
(4253, '2013-02-20 14:00:00', 8, 'AEX, RE, TG, AP', 'Ferramentas Computacionais de Gerenciamento', 277),
(4254, '2013-09-27 15:00:00', 6, 'AEX, AP', 'UML.', 308),
(4255, '2013-08-21 15:00:00', 6, 'AEX, RE, TG, AP', 'Definições Básicas', 312),
(4256, '2013-08-29 15:00:00', 10, 'AEX, RE, TG, AP', 'Ciclo de Vida de um Projeto', 312),
(4258, '2013-09-18 15:00:00', 20, 'AEX, RE, TG, AP', 'Áreas do Gerenciamento de Projetos', 312),
(4259, '2013-10-23 14:00:00', 12, 'AEX, RE, TG, AP', 'Competências e Habilidades do Gerente de Projeto', 312),
(4260, '2013-11-14 14:00:00', 8, 'AEX, RE, TG, AP', 'Metodologias e Ferramentas de Gerenciamento', 312),
(4261, '2013-11-28 14:00:00', 8, 'AEX, RE, TG, AP', 'Ferramentas Computacionais de Gerenciamento', 312),
(4262, '2013-10-04 15:00:00', 6, 'AEX, AP', 'Herança e polimorfismo.', 308),
(4263, '2013-10-14 15:00:00', 6, 'AEX, AP', 'Herança e composição.', 308);
INSERT INTO `itemcronograma` (`id`, `inicio`, `numeroaulas`, `procedimentodidatico`, `topico`, `plano_id`) VALUES
(4264, '2012-10-17 15:00:00', 6, 'AEX/RE', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados\n', 314),
(4265, '2012-10-31 14:00:00', 28, 'AEX/RE/AP/TG', '2. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacionais\n- Linguagens para BD relacionais (álgebra relacional e cálculo relacional)\n- SQL', 314),
(4266, '2012-12-19 14:00:00', 12, 'AEX/RE/AP/TG', '3. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML', 314),
(4267, '2013-01-23 14:00:00', 18, 'AEX/RE/APR/TG', '4. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 314),
(4268, '2013-10-11 15:00:00', 2, 'OTR', 'Primeira avaliação escrita.', 308),
(4269, '2012-10-25 14:00:00', 2, 'ssss', 'dddd', 243),
(4271, '2013-11-04 14:00:00', 12, 'AEX,AP', 'Programação baseada em evento; Interface Gráfica.', 308),
(4272, '2013-09-17 15:00:00', 2, 'AEX, AP', 'Ambiente Integrado de Desenvolvimento (IDE): Eclipse e NetBeans.', 308),
(4273, '2013-10-21 14:00:00', 6, 'AEX, AP', 'Classes abstratas e Interfaces.', 308),
(4274, '2013-10-28 14:00:00', 6, 'AEX, AP', 'Tratamento de erros.', 308),
(4275, '2013-11-19 14:00:00', 8, 'AEX, AP', 'Pacotes, JAR e javadoc.', 308),
(4276, '2013-11-29 14:00:00', 4, 'AEX, AP', 'Padrões de projeto.', 308),
(4277, '2013-12-03 14:00:00', 2, 'OTR', 'Segunda avaliação escrita.', 308),
(4281, '2013-08-26 15:00:00', 6, 'AEX/RE', '2. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados\n', 315),
(4282, '2013-09-05 15:00:00', 26, 'AEX/RE/AP/TG', '3. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacionais\n- Linguagens para BD relacionais (álgebra relacional e cálculo relacional)\n- SQL\n', 315),
(4283, '2013-10-21 14:00:00', 12, 'AEX/RE/AP/TG', '4. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML', 315),
(4284, '2013-11-18 14:00:00', 18, 'AEX/RE/APR/TG', '5. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 315),
(4287, '2013-08-22 15:00:00', 26, 'AEX', 'Modularização\nFunções;\n	Escopo;\n	Passagens de parâmetros;\n	Retorno de função;', 313),
(4288, '2013-09-03 15:00:00', 2, 'AEX', 'Estruturação de memória ocupada e utilizada por um programa objeto: código, área de globais, pilha, heap. Tipos de dados primitivos e tipos de dados criados pelo programador. \n', 313),
(4289, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação do professor e da disciplina, entrega do planejamento do curso, discussão sobre a metodologia de ensino e sobre as avaliações. Revisão de vetores e matrizes.\n', 313),
(4291, '2013-10-01 15:00:00', 22, 'AEX', 'Cadeias de caracteres – implementação e funções para manipulação  de cadeias de   caracteres;\nPesquisa binária\nO Tipo ponteiro\nAlocação e liberação dinâmica de memória;\nEstruturas de dados heterogêneas: registros (structs) e registros variantes (union)', 313),
(4293, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação do programa da disciplina. Explanação sobre os conteúdos a serem abordados durante o curso. Critério de Avaliação. Motivação, expectativas e relacionamento com outras disciplinas do curso. Conceito de modelo computacional.', 316),
(4297, '2013-03-25 15:00:00', 10, 'AEX, RE, ED, AP', 'Introdução a Estrutura de Dados\n	- Conceitos de Programação Estruturada\n	- Tipos primitivos, tipos abstratos de dados\n	- Revisão de comandos, linguagem c\n	- Introdução a vetores e matrizes\n	- Características de Alocação Sequencial e Ligada', 276),
(4298, '2013-04-25 15:00:00', 8, 'AEX, RE, ED, AP', 'Pilhas\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada', 276),
(4302, '2013-04-11 15:00:00', 8, 'AEX, RE, ED, AP', 'Listas lineares\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada', 276),
(4309, '2013-05-09 15:00:00', 8, 'AEX, RE, ED, AP', 'Filas\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada', 276),
(4317, '2013-05-23 15:00:00', 12, 'AEX, RE, ED, AP', 'Grafos\n	- Conceitos\n	- Operações\n	- Representação matricial\n	- Operações em alocação sequencial e ligada', 276),
(4331, '2013-08-26 15:00:00', 2, 'AEX', 'Visão geral do proecesso de compilação: análise léxica, sintática, semântica, geração de código, otimização de código.\n\n', 317),
(4332, '2013-08-29 15:00:00', 8, 'AEX', 'Análise léxica – o papel do analisador léxico, tokens, lexemas, expressões regulares. O analisador léxico como um autômato finito, Gerador de analisador léxico – Lex. Especificação do analisador léxico. Implementação de analisadores léxicos, introdução à geração automática de analisadores léxicos: conversão de expressões regulares em AFNDs. Conversão de AFNDs e AFDs e Minimização de AFDs. \n\n\n\n ', 317),
(4333, '2013-09-12 15:00:00', 2, 'AEX', 'Introdução à análise sintática, gramáticas livres de contexto, derivações, árvores gramáticas. Especificação do analisador sintático. \n', 317),
(4334, '2013-09-16 15:00:00', 2, 'AEX', 'Conjuntos Primeiro e Seguinte\n\n', 317),
(4335, '2013-09-19 15:00:00', 6, 'AEX', 'Análise ascendente - métodos SLR', 317),
(4336, '2013-10-03 15:00:00', 6, 'AEX', 'Anaálise Ascendente, métodos LR(1), LALR', 317),
(4337, '2013-10-14 15:00:00', 4, 'AEX', 'Definição dirigida por sintaxe, atributos sintetizados e herdados, grafos de dependência', 317),
(4338, '2013-10-21 14:00:00', 2, 'AEX', 'Árvores de sintaxe – esquemas de tradução para criação de árvores de sintaxe – ', 317),
(4339, '2013-11-04 14:00:00', 2, 'AEX', 'Espeficação do trabalho', 317),
(4340, '2013-11-18 14:00:00', 2, 'RE', 'Prova 2\n\n', 317),
(4342, '2013-08-22 15:00:00', 2, 'AEX', 'Entrega do programa de curso e discussão sobre o escopo da disciplina\n\n', 317),
(4346, '2013-08-27 15:00:00', 4, 'ED, AEX, OTR', 'Mercado de Empresas de Alta Tecnologia', 244),
(4347, '2013-09-17 15:00:00', 10, 'ED, AEX, OTR', 'Legislação brasileira para software.', 244),
(4348, '2013-09-24 15:00:00', 4, 'ED, AEX, OTR', 'Vendas', 244),
(4351, '2013-09-03 15:00:00', 4, 'ED, AEX, OTR', 'Criatividade e Inovação em software.', 244),
(4354, '2013-10-15 15:00:00', 10, 'TG', 'Modelos de Negócios e Oportunidades de inovação em software e potenciais investidores.', 244),
(4355, '2013-10-29 14:00:00', 10, 'TG', 'Plano de Negócio que apresenta oportunidade (inovação de software), seja nacional ou não, dirigido a um potencial patrocinador.', 244),
(4357, '2013-11-04 14:00:00', 22, 'TG', 'Trabalho escrito (impresso) e apresentação sobre coletânea de textos e estudos de caso a serem trabalhados pelos estudantes em grupos.', 239),
(4359, '2013-08-26 15:00:00', 2, 'AEX', 'Estimativas de tempo de execução', 316),
(4360, '2013-08-29 15:00:00', 2, 'AEX', 'Comportamento Assintótico de Funções', 316),
(4361, '2013-09-02 15:00:00', 2, 'AEX', 'Classes de Comportamento Assintótico', 316),
(4362, '2013-09-05 15:00:00', 2, 'RE', 'Listas de exercícios 1', 316),
(4363, '2013-09-09 15:00:00', 2, 'RE', 'Revisão', 316),
(4364, '2013-09-12 15:00:00', 2, 'OTR', 'Prova 1', 316),
(4365, '2013-09-16 15:00:00', 2, 'AEX', 'Algoritmos de ordenação, Seleção', 316),
(4366, '2013-09-19 15:00:00', 2, 'AEX', 'Algoritmos de ordenação, Inserção', 316),
(4367, '2013-09-23 15:00:00', 2, 'AEX', 'Algoritmos de ordenação, ShellSort', 316),
(4368, '2013-09-26 15:00:00', 2, 'AEX', 'Algoritmos de ordenação, Quicksort', 316),
(4369, '2013-08-22 15:00:00', 2, 'AEX', '1. Apresentação do Programa:\n 1.1 Explanação sobre os conteúdos a serem abordados durante o curso\n  1.2  Critério de Avaliação\n  1.3  Bibliografia\n  1.4  Motivação e expectativas para a disciplina.', 318),
(4392, '2013-09-30 15:00:00', 2, 'AEX', 'Algoritmos de ordenação, HeapSort', 316),
(4393, '2013-10-03 15:00:00', 8, 'TG', 'Apresentação de trabalhos', 316),
(4394, '2013-10-21 14:00:00', 2, 'AEX', 'Busca Sequencial, Binária', 316),
(4395, '2013-10-31 14:00:00', 2, 'AEX', 'Busca com árvores de pesquisa', 316),
(4396, '2013-11-04 14:00:00', 2, 'AEX', 'Implementação de Hashing', 316),
(4397, '2013-11-07 14:00:00', 2, 'AEX', 'Implementação de Arquivos: acesso sequencial indexado', 316),
(4398, '2013-11-11 14:00:00', 2, 'AEX', 'Implementação de Arquivos: árvores B', 316),
(4399, '2013-11-14 14:00:00', 2, 'RE', 'Listas de exercícios 2', 316),
(4400, '2013-11-18 14:00:00', 2, 'RE', 'Revisão', 316),
(4401, '2013-11-21 14:00:00', 2, 'OTR', 'Prova 2', 316),
(4402, '2013-11-25 14:00:00', 4, 'AEX', 'Casamento de Cadeias: exato', 316),
(4403, '2013-12-05 14:00:00', 4, 'AEX', 'Casamento de Cadeias: aproximado', 316),
(4404, '2013-12-12 14:00:00', 8, 'TG', 'Apresentação de trabalhos', 316),
(4405, '2013-08-22 15:00:00', 4, 'AEX, RE, TG, AP', 'Introdução e Revisão', 319),
(4407, '2013-08-21 15:00:00', 6, 'AEX, RE, TG, AP', 'Introdução e Revisão', 321),
(4408, '2013-08-22 15:00:00', 2, 'AP', 'Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas e relacionamento com outras disciplinas do curso. ', 322),
(4428, '2012-10-17 15:00:00', 8, 'AEX/ AP/ RE', 'Entrega e apresentação do plano de ensino.\n1. Paradigma de orientação a objetos.\n2. Abstração', 324),
(4429, '2012-10-31 14:00:00', 6, 'AEX / AP / RE', '3. Classe', 324),
(4430, '2012-11-07 14:00:00', 8, 'AEX/ AP /RE', '4. Objeto\n', 324),
(4431, '2012-11-21 14:00:00', 6, 'AEX/ AP', '7. Construtor\n8. Pacote', 324),
(4432, '2012-11-14 14:00:00', 6, 'AEX/ AP', '5. Método\n6. Mensagem', 324),
(4433, '2012-11-28 14:00:00', 6, 'AEX/ AP', '9. Encapsulamento', 324),
(4434, '2012-12-05 14:00:00', 6, 'OTR/ RE/ TG', 'Revisão dos conceitos de OO e Resolução de exercícios.\n1. Paradigma de orientação a objetos.\n2. Abstração\n3. Classe\n4. Objeto\n5. Atributo\n6. Método\n7. Construtor\n8. Pacote\n9. Encapsulamento', 324),
(4435, '2012-12-12 14:00:00', 2, 'OTR', 'Avalição Teórica 1', 324),
(4436, '2012-12-13 14:00:00', 4, 'OTR', 'Avaliação Prática 1', 324),
(4437, '2012-12-19 14:00:00', 2, 'OTR', 'Entrega e correção da avaliação teórica 1', 324),
(4438, '2013-01-09 14:00:00', 6, 'AEX / AP', '10. Tratamento básico de exceções', 324),
(4439, '2013-01-16 14:00:00', 12, 'AEX/ AP', '11. Herança e composição', 324),
(4440, '2013-01-30 14:00:00', 6, 'AEX/ AP', '12. Interface', 324),
(4441, '2013-02-06 14:00:00', 6, 'AEX/ AP', '13. Polimorfismo', 324),
(4442, '2013-02-13 14:00:00', 4, 'OTR', 'Revisão avaliação 2:\n10. Tratamento básico de exceções\n11. Herança e composição\n12. Interface\n13. Polimorfismo', 324),
(4443, '2013-02-19 14:00:00', 4, 'OTR', 'Avaliação Prática 2', 324),
(4444, '2013-02-20 14:00:00', 2, 'OTR', 'Avaliação Teórica 2', 324),
(4445, '2013-02-27 15:00:00', 2, 'OTR', 'Entrega e correção da avaliação teórica 2. Entrega dos resultados finais.', 324),
(4446, '2013-08-22 15:00:00', 2, 'AEX', 'Introdução: apresentação da disciplina e do plano de ensino.', 286),
(4447, '2013-08-26 15:00:00', 4, 'AEX, RE, AP', 'Conceitos Básicos', 286),
(4448, '2013-09-02 15:00:00', 6, 'AEX, RE, AP', 'Estrutura sequencial e seleção', 286),
(4449, '2013-08-22 11:00:00', 2, 'AEX', 'Introdução: apresentação da disciplina e do plano de ensino.', 279),
(4450, '2013-08-26 11:00:00', 4, 'AEX, RE, AP', 'Conceitos Básicos', 279),
(4451, '2013-09-02 11:00:00', 6, 'AEX, RE, AP', 'Estrutura sequencial e seleção', 279),
(4454, '2013-10-18 15:00:00', 16, 'AEX', 'Modelo e Validação', 213),
(4455, '2013-11-15 14:00:00', 4, 'AEX', 'Financiamento', 213),
(4456, '2013-11-22 14:00:00', 4, 'AEX', 'Prova', 213),
(4457, '2013-11-29 14:00:00', 4, 'AEX', 'Entrega de resultados', 213),
(4487, '2013-08-21 15:00:00', 2, 'AEX', '1. Apresentação da Disciplina\nIdentificação Professor e Aluno\nPrograma do Curso\nProvas (critérios de avaliação)', 326),
(4488, '2013-08-22 15:00:00', 6, 'AEX,AP', '2. Conceitos Preliminares\nConceito de Interação\nConceito de Affordance\nConceito de Metáfora\nElementos de Interação\nModelos Conceituais\nDispositivos de Interação', 326),
(4489, '2013-09-04 15:00:00', 6, 'AEX,AP', '3. Princípios de Projeto de Interfaces Homem-computador\n', 326),
(4490, '2013-09-19 15:00:00', 6, 'AEX,AP', '4.  Métodos de Projeto de Interfaces Homem-computador', 326),
(4491, '2013-10-02 15:00:00', 6, 'AEX,AP', '5. Avaliação de Interfaces Homem-computador\nTestes de Usabilidade\nHeurísticas para Avaliação de Interfaces\nMétodos para Avaliação de Interfaces', 326),
(4492, '2013-10-10 15:00:00', 6, 'AEX,AP', '6. Visão geral de ferramentas de desenvolvimento de interfaces homem-computador.', 326),
(4493, '2013-10-31 14:00:00', 32, 'AEX, AP', '7. Padrões e Anti-padroes do Design da Interação Homem-computador', 326),
(4494, '2013-08-23 15:00:00', 6, 'AEX', 'Apresentação da disciplina\nIdentificação\nEmenta\nConteúdo programático\nObjetivos\nProcedimentos didáticos\nAvaliação da aprendizagem\nBibliografias\nMoodle', 327),
(4495, '2013-08-26 15:00:00', 2, 'AEX', 'Conceitos básicos de OO, Classe, Objeto , Atributo, Método', 327),
(4496, '2013-08-29 15:00:00', 2, 'AEX', 'Conceitos básicos de OO, Construtores, Overloading de métodos, Importação e criação de pacotes, Encapsulamento', 327),
(4497, '2013-09-02 15:00:00', 2, 'AP', 'Prática de conceitos básicos de OO', 327),
(4498, '2013-09-05 15:00:00', 4, 'AEX', 'Abstração,  Herança, Polimorfismo', 327),
(4499, '2013-09-12 15:00:00', 2, 'AEX, RE, AP', 'Abstração,  Herança, Polimorfismo', 327),
(4500, '2013-09-16 15:00:00', 2, 'AEX', 'Modelagem UML', 327),
(4501, '2013-09-19 15:00:00', 2, 'AEX, RE, AP', '1ª Avaliação', 327),
(4502, '2013-09-23 15:00:00', 4, 'OTR', 'Correção e avaliação e atividades em sala.', 327),
(4503, '2013-09-27 15:00:00', 2, 'OTR, AP', 'AWT e Swing AWT containers e componentes.', 327),
(4505, '2013-10-04 15:00:00', 2, 'AEX, RE, AP', 'AWT e Swing', 327),
(4506, '2013-09-30 15:00:00', 2, 'AEX', 'GUI e Layout\nGerenciadores de layout: FlowLayout, BorderLayout, GridLayout\nCriação de layouts complexos', 327),
(4507, '2013-10-07 15:00:00', 2, 'AEX, RE, AP', 'GUI e Layout', 327),
(4508, '2013-10-14 15:00:00', 2, 'AEX', 'Tratamento de eventos em interface gráfica, Componentes do modelo de delegação de eventos, Interfaces gráficas que interagem com o usuário\n', 327),
(4509, '2013-10-21 14:00:00', 2, 'AEX, RE, AP', 'Tratamento de exceções, Try-catch-finally, Throw e throws, Exceções verificadas e não verificadas', 327),
(4510, '2013-10-11 15:00:00', 2, 'AEX', 'Tratamento de eventos em interface gráfica\nComponentes do modelo de delegação de eventos\nInterfaces gráficas que interagem com o usuário', 327),
(4511, '2013-11-01 14:00:00', 2, 'AEX, RE, AP', 'Tratamento de eventos em interface gráfica', 327),
(4514, '2013-11-22 14:00:00', 2, 'OTR', 'Revisao', 327),
(4515, '2013-11-04 14:00:00', 2, 'OTR, AP', 'Entrega e correção de prova, revisão de nota, exercícios práticos', 327),
(4516, '2013-10-18 15:00:00', 2, 'AEX', 'Tratamento de exceções, Try-catch-finally, Throw e throws, Exceções verificadas e não verificadas', 327),
(4517, '2013-11-25 14:00:00', 2, 'AEX, RE, AP', '2ª Avaliacao', 327),
(4518, '2013-11-08 14:00:00', 2, 'AEX', 'Threads, Estados, Prioridade, Métodos, Sincronização, Comunicação', 327),
(4519, '2013-11-29 14:00:00', 4, 'AEX, RE, AP', 'Correção de avaliacao e entrega de atividades', 327),
(4520, '2013-12-02 14:00:00', 4, 'AEX', 'Correção de avaliacao e entrega de atividades, entrega de notas e correção.', 327),
(4521, '2013-11-11 14:00:00', 2, 'AEX, RE, AP', 'Prática de exceções, threads, teste e projeto', 327),
(4522, '2013-11-18 14:00:00', 2, 'TG, RE, AP', 'Prática de exceções, threads, teste e projeto', 327),
(4554, '2013-10-15 15:00:00', 2, 'OTR', 'Avaliação II', 227),
(4560, '2013-11-26 14:00:00', 2, 'OTR', 'Avaliação III', 227),
(4561, '2013-03-26 15:00:00', 2, 'AEX', 'Introdução e Motivação. ', 330),
(4562, '2013-03-26 15:00:00', 2, 'AEX', 'Introdução e Motivação.', 331),
(4563, '2013-04-02 15:00:00', 4, 'AEX,RE', 'Dedução Natural', 331),
(4564, '2013-04-02 15:00:00', 4, 'AEX,RE', 'Dedução Natural', 330),
(4565, '2013-04-09 15:00:00', 12, 'AEX,RE,ED', 'Lógica Proposicional - Sintaxe e Semântica', 330),
(4566, '2013-04-09 15:00:00', 12, 'AEX,RE,ED', 'Lógica Proposicional - Sintaxe e Semântica', 331),
(4567, '2013-05-02 15:00:00', 2, 'AEX,RE', 'Indução Matemática', 330),
(4568, '2013-05-02 15:00:00', 2, 'AEX,RE', 'Indução Matemática', 331),
(4569, '2013-05-07 15:00:00', 8, 'AEX,RE', 'Lógica Proposicional - Semântica', 330),
(4570, '2013-05-07 15:00:00', 8, 'AEX,RE', 'Lógica Proposicional - Semântica', 331),
(4571, '2013-05-21 15:00:00', 4, 'AEX,RE', 'Formas Normais', 331),
(4572, '2013-05-21 15:00:00', 4, 'AEX,RE', 'Formas Normais', 330),
(4573, '2013-05-28 15:00:00', 2, 'OTR', 'Avaliação I', 331),
(4574, '2013-05-28 15:00:00', 2, 'OTR', 'Avaliação I', 330),
(4575, '2013-06-04 15:00:00', 2, 'AEX', 'Satisfatibilidade', 330),
(4576, '2013-06-04 15:00:00', 2, 'AEX', 'Satisfatibilidade', 331),
(4577, '2013-06-06 15:00:00', 16, 'AEX,RE', 'Lógica de Predicados - Sintaxe e Semântica', 330),
(4578, '2013-06-06 15:00:00', 16, 'AEX,RE', 'Lógica de Predicados - Sintaxe e Semântica', 331),
(4579, '2013-07-04 15:00:00', 2, 'AEX', 'Indecidibilidade da Lógica de Predicados', 330),
(4580, '2013-07-04 15:00:00', 2, 'AEX', 'Indecidibilidade da Lógica de Predicados', 331),
(4581, '2013-07-09 15:00:00', 6, 'AEX', 'Aplicação da Lógica em Computação', 330),
(4582, '2013-07-09 15:00:00', 6, 'AEX', 'Aplicação da Lógica em Computação', 331),
(4583, '2013-07-18 15:00:00', 2, 'OTR', 'Avaliação II', 330),
(4584, '2013-07-18 15:00:00', 2, 'OTR', 'Avaliação II', 331),
(4585, '2013-07-23 15:00:00', 2, 'OTR', 'Revisão e Resultado Final', 331),
(4586, '2013-07-23 15:00:00', 2, 'OTR', 'Revisão e Resultado Final', 330),
(4587, '2013-08-23 15:00:00', 2, 'OTR', 'Apresentação da disciplina;\nExplanação sobre os conteúdos a serem ministrados; \nCritérios de avaliação e postura esperada dos alunos; \nMotivação e expectativa para a disciplina.', 285),
(4588, '2013-08-27 15:00:00', 2, 'AEX/RE', 'Lógica Proposicional. Proposições e conectivos \n', 285),
(4589, '2013-08-30 15:00:00', 2, 'AEX/RE', 'Operações Lógicas sobre proposições; Exercícios \n', 285),
(4590, '2013-09-03 15:00:00', 2, 'AEX/RE', ' Implicação Lógica; Exercícios\n', 285),
(4591, '2013-09-06 15:00:00', 2, 'AEX/RE', 'Equivalência Lógica; Exercícios', 285),
(4592, '2013-09-10 15:00:00', 2, 'AEX/RE', 'Álgebra de Proposições; Exercícios', 285),
(4593, '2013-09-13 15:00:00', 8, 'AEX/RE', ' Método Dedutivo; Exercícios', 285),
(4594, '2013-09-27 15:00:00', 4, 'AEX/RE', 'Implicação Lógica: Argumentos; Exercícios', 285),
(4596, '2013-10-22 14:00:00', 2, 'AEX/RE', 'Demostração Condicional e Demonstração Indireta; Exercícios', 285),
(4597, '2013-10-25 14:00:00', 2, 'AEX/RE', 'Lógica de Predicados: Sentenças Abertas de uma, duas e N variáveis', 285),
(4598, '2013-10-29 14:00:00', 2, 'AEX/RE', 'Operações Lógicas sobre sentenças abertas.', 285),
(4599, '2013-11-01 14:00:00', 2, 'AEX/RE', 'Lógica de Predicados: Quantificadores;Quantificadores de Sentenças Abertas com mais de uma variável', 285),
(4601, '2013-11-05 14:00:00', 6, 'AEX/RE', 'Dedução na Lógica de Predicados  – Exercícios', 285),
(4602, '2013-11-19 14:00:00', 8, 'AEX/RE', ' Demonstração indireta – Árvore de refutação', 285),
(4603, '2013-12-03 14:00:00', 8, 'AEX/RE', 'Programação em Lógica; Aula de Laboratório', 285),
(4604, '2013-10-08 15:00:00', 4, 'AEX/RE', 'Validade Mediante Regras de Inferência;', 285),
(4605, '2013-10-15 15:00:00', 4, 'AEX/RE', 'Validade Mediante Regras de Inferência e Equivalências; Exercícios.', 285),
(4606, '2013-10-04 15:00:00', 2, 'AEX/RE', 'Validade Mediante Tabela-verdade; Exercícios.', 285),
(4607, '2013-04-09 15:00:00', 6, 'AEX/RE', 'Expressões e Operadores: Expressões Aritméticas; Expressões Lógicas. Estruturas Básicas de Controle: Sequência, Seleção, Repetição', 254),
(4609, '2013-04-17 15:00:00', 4, 'AEX/RE/OTR', 'Algoritmos com Estruturas de dados homogêneas: vetores', 254),
(4610, '2013-05-07 15:00:00', 4, 'AEX/RE/OTR', 'Algoritmos com Estruturas de dados homogêneas: matrizes', 254),
(4611, '2013-05-14 15:00:00', 4, 'AEX/RE', 'Algoritmos com Estruturas de dados heterogêneas: registros', 254),
(4612, '2013-05-21 15:00:00', 8, 'AEX/RE', 'Procedimentos, funções e recursão', 254),
(4613, '2013-06-04 15:00:00', 2, 'OTR', '1a prova', 254),
(4614, '2013-06-05 15:00:00', 2, 'RE', 'Gabarito da prova', 254),
(4615, '2013-06-11 15:00:00', 8, 'AEX/RE/OTR', 'Introdução à linguagem de programação C\r\n', 254),
(4616, '2013-06-25 15:00:00', 8, 'AEX/RE', 'Transcrição de algoritmos para a linguagem de programação C', 254),
(4617, '2013-07-10 15:00:00', 6, 'AEX/RE', 'Tópicos especiais de linguagem C: Ponteiros', 254),
(4618, '2013-07-24 15:00:00', 2, 'OTR', '2a prova', 254),
(4619, '2013-07-30 15:00:00', 2, 'RE', 'Gabarito da prova', 254),
(4620, '2013-03-25 15:00:00', 6, 'AEX/RE', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\r\n- Bancos de Dados e usuários de BD\r\n- Sistemas de Bancos de Dados\r\n- Modelos de Dados e Esquemas de BD\r\n- Arquiteturas de Sistemas de Bancos de Dados', 238),
(4622, '2013-04-04 15:00:00', 28, 'AEX/RE/AP/TG', '2. O Modelo Relacional\r\n- Conceitos, fundamentos, restrições de integridade\r\n- Esquemas de BD relacionais\r\n- Linguagens para BD relacionais (álgebra relacional e cálculo relacional)\r\n- SQL', 238),
(4623, '2013-05-23 15:00:00', 2, 'OTR', '1ª Prova', 238),
(4624, '2013-05-27 15:00:00', 10, 'AEX/RE/AP/TG', '3. Modelagem de Dados usando o Modelo E/R\r\n- O Modelo de Entidades e Relacionamentos\r\n- Diagrama de Entidades e Relacionamentos\r\n- Dicionário de Dados\r\n- Modelo ER estendido e diagrama de classe UML', 238),
(4625, '2013-06-17 15:00:00', 2, 'OTR', '2ª Prova', 238),
(4626, '2013-06-20 15:00:00', 14, 'AEX/RE/APR/TG', '4. Projeto de Banco de Dados Relacional\r\n- mapeamento a partir do modelo ER e EER\r\n- Dependências funcionais\r\n- Formas normais e normalização', 238),
(4627, '2013-07-22 15:00:00', 2, 'OTR', '3ª Prova', 238),
(4653, '2013-03-25 15:00:00', 2, 'AEX', 'Apresentação da Disciplina', 333),
(4654, '2013-04-01 15:00:00', 2, 'AEX', 'Histórico da Computação', 333),
(4655, '2013-04-05 15:00:00', 2, 'AEX,RE', 'Noções de Lógica; \nLógica de Programação', 333),
(4656, '2013-04-08 15:00:00', 4, 'AEX,RE', 'Construção de Algoritmos: Elementos Fundamentais', 333),
(4657, '2013-04-15 15:00:00', 2, 'AEX,RE', 'Estrutura Sequencial', 333),
(4658, '2013-04-19 15:00:00', 14, 'AEX,RE,ED', 'Estrutura de Seleção', 333),
(4659, '2013-05-13 15:00:00', 4, 'AEX,RE', 'Estrutura de Repetição', 333),
(4660, '2013-05-20 15:00:00', 2, 'OTR', 'Avaliação I', 333),
(4661, '2013-05-27 15:00:00', 14, 'AEX,RE,ED', 'Estrutura de Repetição', 333),
(4662, '2013-06-24 15:00:00', 10, 'AEX,RE', 'Estruturas de Dados (Vetores e Matrizes)', 333),
(4663, '2013-07-12 15:00:00', 6, 'AEX,RE', 'Modularização', 333),
(4664, '2013-07-22 15:00:00', 2, 'OTR', 'Avaliação II', 333),
(4666, '2013-04-06 15:00:00', 4, 'AEX', 'Apresentação do professor, no plano de aula, forma de avaliação. Conceitos Básicos sobre Qualidade. Série ISO 9000: ISO 9000, ISO 9001, ISO 9004.', 334),
(4668, '2013-04-13 15:00:00', 4, 'AEX', 'Série ISO 9000: ISO 9000, ISO 9001, ISO 9004. Norma ISO no contexto de software: ISO 9000-3.', 334),
(4669, '2013-04-20 15:00:00', 4, 'AEX', 'Qualidade de produto de software: ISO 9126.', 334),
(4670, '2013-04-27 15:00:00', 4, 'AEX', 'Qualidade de processo de software. ISO 12207.', 334),
(4671, '2013-05-04 15:00:00', 5, 'AEX, OTR', 'Qualidade de processo de software. Norma ISO de Maturidade de Processo: ISO 15504. Primeira avaliação (A1).', 334),
(4672, '2013-05-11 15:00:00', 4, 'AEX', 'Modelos de maturidade de processo: CMMi. Modelos de maturidade de processo: MPS.BR.', 334),
(4673, '2013-05-18 15:00:00', 4, 'AEX', 'Modelos de maturidade de processo: MPS.BR.', 334),
(4674, '2013-06-08 15:00:00', 4, 'AEX', 'Modelos de maturidade de processo: MPS.BR.', 334),
(4675, '2013-06-15 15:00:00', 5, 'AEX, OTR', 'Outros padrões de qualidade: IEEE Std 1028-2008, IEEE Std 1465-2004, IEEE Std 12207-2008. Segunda avaliação (A2).', 334),
(4676, '2013-06-22 15:00:00', 4, 'AEX', 'RUP. Descrever o modelo, seus objetivos, aplicações, principais processos e sua relação com Qualidade de Software.', 334),
(4677, '2013-06-29 15:00:00', 4, 'AEX', 'Metodologia Ágeis de Desenvolvimento de Software. Descrever o conceito, os principais modelos, seus objetivos, aplicações e sua relação com Qualidade de Software.', 334),
(4678, '2013-07-06 15:00:00', 4, 'AEX', 'Verificação e Validação como mecanismo de garantia de\nqualidade de Software. Conceito de Verificação e\nValidação de software, principais tipos de Verificação e\nValidação e suas aplicações.', 334),
(4679, '2013-07-13 15:00:00', 5, 'AEX/OTR', 'Auditoria de Sistemas: conceitos de auditoria de\nsistemas, contexto em que se aplica, técnicas e\nprocessos de auditoria de Sistemas de Informação.\nRelação da atividade de auditoria com a a área de\nqualidade de software. Terceira avaliação (A3).', 334),
(4680, '2013-07-20 15:00:00', 4, 'SE, OTR', 'Apresentação de Trabalho. Estudo de Caso.', 334),
(4681, '2013-07-27 15:00:00', 5, 'SE, OTR', 'Apresentação de Trabalho. Avaliação substitutiva.', 334),
(4682, '2013-08-21 15:00:00', 2, 'AEX, AP', 'Apresentação da disciplina', 292),
(4686, '2013-03-02 15:00:00', 2, 'AEX,AP', 'Apresentação da disciplina', 335),
(4687, '2013-04-03 15:00:00', 4, 'AEX, AP', 'Conceitos preliminares', 335),
(4688, '2013-04-17 15:00:00', 4, 'AEX, AP', 'Expressões, Operadores e Funções', 335),
(4689, '2013-05-14 15:00:00', 12, 'AEX, AP', 'Estruturas condicionais', 335),
(4690, '2013-06-04 15:00:00', 10, 'AEX,AP', 'Estruturas de repetição', 335),
(4691, '2013-06-19 15:00:00', 14, 'AEX, AP', 'Estruturas de dados', 335),
(4693, '2013-08-20 15:00:00', 4, 'AEX', 'Apresentação e motivação para a disciplina; conceitos iniciais.', 325),
(4694, '2013-08-27 15:00:00', 20, 'AEX, AP', 'Transformações e traçado de objetos 2D. Laboratório de games 2D.', 325),
(4695, '2013-10-01 15:00:00', 14, 'AEX,AP', 'Transformações e traçado de objetos 3D, conceitos de games 2D.', 325),
(4696, '2013-10-22 14:00:00', 16, 'AEX, AP', 'Padrões da Interação, trabalhando interações em games.', 325),
(4697, '2013-11-19 14:00:00', 8, 'AEX', 'Apresentação de trabalhos', 325),
(4698, '2013-11-04 12:00:00', 2, 'OTR', 'Prova 2', 279),
(4699, '2013-11-11 14:00:00', 2, 'OTR', 'Prova 2', 286),
(4700, '2013-12-13 14:00:00', 4, 'AP,AEX', 'Seminários', 220),
(4701, '2013-12-10 14:00:00', 2, 'AEX,AP', 'Linguagens Lógicas', 220),
(4702, '2013-03-25 15:00:00', 2, 'AEX', 'Apresentação da disciplina', 336),
(4703, '2013-04-01 15:00:00', 8, 'AEX,AP', 'Introdução às LPs', 336),
(4704, '2013-04-15 15:00:00', 8, 'AEX,AP', 'Sintaxe e Semântica', 336),
(4705, '2013-04-29 15:00:00', 4, 'AEX,AP', 'Nomes, vinculações, tipos e escopo', 336),
(4706, '2013-05-06 15:00:00', 2, 'TG,AEX', 'Exercícios de revisão', 336),
(4707, '2013-05-10 15:00:00', 2, 'OTR', 'Prova 1', 336),
(4708, '2013-05-13 15:00:00', 6, 'AEX,AP', 'Tipos de dados', 336),
(4709, '2013-05-27 15:00:00', 2, 'AEX', 'Expressões e instruções de atribuição', 336),
(4710, '2013-06-03 15:00:00', 2, 'TG,AEX', 'Exercícios de revisão', 336),
(4711, '2013-06-07 15:00:00', 2, 'OTR', 'Prova 2', 336),
(4712, '2013-06-14 15:00:00', 6, 'AEX,AP', 'Subprogramas', 336),
(4713, '2013-06-24 15:00:00', 6, 'AEX,AP', 'Suporte para programação orientada a objetos e tratamento de exceções', 336),
(4714, '2013-07-05 15:00:00', 2, 'TG,AEX', 'Exercícios de revisão', 336),
(4715, '2013-07-08 15:00:00', 2, 'OTR', 'Prova 3', 336),
(4716, '2013-07-12 15:00:00', 2, 'AEX,AP', 'Linguagens Funcionais', 336),
(4717, '2013-07-19 15:00:00', 2, 'AEX,AP', 'Linguagens Lógicas', 336),
(4718, '2013-07-19 15:00:00', 6, 'TG,AEX', 'Seminários', 336),
(4719, '2013-03-25 15:00:00', 2, 'AEX', 'Apresentação da disciplina', 337),
(4720, '2013-04-01 15:00:00', 8, 'AEX,AP', 'Introdução às LPs', 337),
(4721, '2013-04-15 15:00:00', 8, 'AEX,AP', 'Sintaxe e Semântica', 337),
(4722, '2013-04-29 15:00:00', 4, 'AEX,AP', 'Nomes, vinculações, tipos e escopo', 337),
(4723, '2013-05-06 15:00:00', 2, 'AEX,TG', 'Exercícios de revisão', 337),
(4724, '2013-05-10 15:00:00', 2, 'OTR', 'Prova 1', 337),
(4725, '2013-05-13 15:00:00', 6, 'AEX,AP', 'Tipos de dados', 337),
(4726, '2013-05-27 15:00:00', 2, 'AEX,AP', 'Expressões e instruções de atribuição', 337),
(4727, '2013-06-03 15:00:00', 2, 'TG,AEX', 'Exercícios de revisão', 337),
(4728, '2013-06-07 15:00:00', 2, 'OTR', 'Prova 2', 337),
(4729, '2013-06-14 15:00:00', 6, 'AEX,AP', 'Subprograma', 337),
(4730, '2013-06-24 15:00:00', 6, 'AEX,AP', 'Suporte para programação orientada a objetos e tratamento de exceção', 337),
(4731, '2013-07-05 15:00:00', 2, 'TG,AEX', 'Exercícios de revisão', 337),
(4732, '2013-07-08 15:00:00', 2, 'OTR', 'Prova 3', 337),
(4733, '2013-07-12 15:00:00', 2, 'AEX,AP', 'Linguagens funcionais', 337),
(4734, '2013-07-15 15:00:00', 2, 'AEX,AP', 'Linguagens lógicas', 337),
(4735, '2013-07-19 15:00:00', 6, 'TG,AEX', 'Seminários', 337),
(4736, '2013-03-26 15:00:00', 4, 'AEX', 'Apresentação da disciplina, turma, planejamento e\nAmbiente Virtual de Aprendizagem; Introdução a computação, programação e ambiente de trabalho.', 338),
(4737, '2013-04-02 15:00:00', 8, 'AEX, AP', 'Tipos de dados, variáveis, comandos de entrada e saída e expressões aritméticas. Expressões lógicas, estruturas de repetição com variável\nde controle, teste no início e teste no fim.', 338),
(4738, '2013-04-16 15:00:00', 6, 'AEX, AP, RE', 'Exercícios estrutura sequencial e de repetição.', 338),
(4739, '2013-04-16 15:00:00', 2, 'OTR', 'Primeira Avaliação', 338),
(4740, '2013-04-23 15:00:00', 12, 'AEX, RE, AP', 'Estrutura de seleção, simples, aninhada e encadeadas.', 338),
(4741, '2013-05-14 15:00:00', 8, 'AEX, AP, RE', 'Estruturas de dados homogênea composta unidimensional - vetores', 338),
(4742, '2013-05-28 15:00:00', 2, 'OTR', 'Segunda avaliação.', 338),
(4743, '2013-05-28 15:00:00', 10, 'AEX, AP, RE', 'Estruturas de dados homogêneas multidimensionais - matrizes', 338),
(4744, '2013-06-18 15:00:00', 10, 'AEX, RE, AP', 'Modularização de programas - Funções', 338),
(4745, '2013-07-09 15:00:00', 2, 'OTR', 'Terceira Avaliação', 338),
(4747, '2013-08-26 15:00:00', 4, 'RE,AP', 'Introdução', 257),
(4748, '2013-09-02 15:00:00', 20, 'RE,AP', 'Resolução de problemas', 257),
(4749, '2013-10-07 15:00:00', 14, 'RE,AP', 'Conhecimento e raciocínio', 257),
(4750, '2013-10-28 14:00:00', 24, 'RE,AP', 'Aprendizagem', 257),
(4751, '2013-12-05 14:00:00', 2, 'ED,OTR', 'Comunicação de resultados. Encerramento da disciplina.', 257),
(4752, '2013-10-11 15:00:00', 4, 'AEX, RE', 'Conectividade', 295),
(4753, '2013-12-10 14:00:00', 2, 'RE', 'Exercicios', 295),
(4754, '2013-10-25 14:00:00', 4, 'AEX, RE', 'Planaridade', 295),
(4757, '2013-08-20 15:00:00', 2, 'OTR', 'Apresentação, Planejamento da Disciplina, Calendário, Nivelamento', 216),
(4758, '2013-08-23 15:00:00', 4, 'AEX, RE', 'Técnicas de demonstração', 216),
(4760, '2013-08-30 15:00:00', 4, 'AEX, RE', 'Conjuntos', 216),
(4764, '2013-09-10 15:00:00', 8, 'AEX, RE', 'Relações', 216),
(4767, '2013-09-24 15:00:00', 2, 'RE, OTR', 'Exercicios e Teste 2', 216),
(4769, '2013-09-06 15:00:00', 2, 'RE, OTR', 'Exercicios e Teste 1', 216),
(4772, '2013-09-27 15:00:00', 6, 'AEX, RE', 'Relações de equivalência e Ordens parciais', 216),
(4774, '2013-10-08 15:00:00', 4, 'AEX, RE', 'Funções', 216),
(4776, '2013-10-29 14:00:00', 6, 'AEX, RE', 'Indução matemática', 216),
(4778, '2013-10-22 14:00:00', 2, 'RE, OTR', 'Exercicios e Teste 3', 216),
(4779, '2013-11-08 14:00:00', 2, 'RE, OTR', 'Exercícios e Teste 4', 216),
(4783, '2013-11-19 14:00:00', 8, 'AEX, RE', 'Teoria dos Números: Algoritmo da divisão, Algoritmo de Euclides e Euclides Estendido, Aritmética Modular ', 216),
(4785, '2013-11-29 14:00:00', 2, 'RE, OTR', 'Exercicios e Teste 5', 216),
(4789, '2013-12-13 14:00:00', 2, 'RE, OTR', 'Exercicos e Teste 6', 216),
(4790, '2013-12-20 14:00:00', 2, 'OTR', 'Revisao de prova', 216),
(4794, '2013-12-05 14:00:00', 4, 'SE', 'Apresentação de trabalhos', 212),
(4795, '2013-03-26 15:00:00', 2, 'AEX', 'Apresentação do Conteúdo programático, critérios de avaliação e datas previsão das avaliações.  Motivação e espectativas para a disciplina,\nTeste de auto-avaliação.\n', 340),
(4796, '2013-03-28 15:00:00', 2, 'AEX', 'Aspectos administrativos da disciplina; introdução ao sistema de apoio Moodle. Uso do Boca no sistema do INF UFG.\n\n', 340),
(4797, '2013-04-02 15:00:00', 4, 'AEX e AP', 'Introdução a algoritmos e programação de computadores.\n\n', 340),
(4798, '2013-04-09 15:00:00', 4, 'AEX e AP', 'Introdução ao método PBL (Problem-Based Learning) – visão geral do método e prática através de um problema.\n\n', 340),
(4799, '2013-04-16 15:00:00', 8, 'AEX e AP', 'Prática de programação com fluxogramas e Linguagem C (Code Blocks).\n\n', 340),
(4800, '2013-04-30 15:00:00', 8, 'AEX e AP', 'Estudo e resolução de uma série planejada de problemas\nenvolvendo os tópicos conceituais da ementa: lógica de\nprogramação; constantes; tipos de dados primitivos; \nVariáveis; Atribuição; Expressões aritméticas e lógicas;\nEstruturas de Decisão.\n', 340),
(4801, '2013-05-14 15:00:00', 2, 'AEX e AP', 'Revisão', 340),
(4802, '2013-05-16 15:00:00', 2, 'OTR - AV', 'Primeira Avaliação: Prova', 340),
(4803, '2013-05-21 15:00:00', 8, 'AEX, AP, RE', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: estruturas de controle.\n\n', 340),
(4804, '2013-06-06 15:00:00', 8, 'AEX, AP e RE', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes\n\n', 340),
(4805, '2013-06-20 15:00:00', 8, 'AEX, RE e AP', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: funções; recursão.\n\n\n', 340),
(4806, '2013-07-04 15:00:00', 2, 'AEX, RE e AP', 'Problema envolvendo todas as práticas de Programação dadas até o momento. Uso de Funções, Procedimentos e Recursão.', 340),
(4807, '2013-07-09 15:00:00', 2, 'AEX, AP e RE', 'Revisão de todo conteúdo ministrado até o momento.', 340),
(4808, '2013-07-11 15:00:00', 2, 'OTR - AV', 'Segunda Avaliação Teórica e Prática', 340),
(4809, '2013-07-16 15:00:00', 2, 'RE, AP', 'Entrega de Trabalhos e Resultados Finais.', 340),
(4810, '2013-10-10 15:00:00', 6, 'AEX/AP/RE', 'Composição, delegação. Introdução a herança.', 268),
(4811, '2013-10-31 14:00:00', 2, 'OTR', '1a. prova individual.', 268),
(4812, '2013-11-04 14:00:00', 8, 'AEX/RE/AP', 'Herança, polimorfismo, coleções.', 268),
(4813, '2013-11-18 14:00:00', 8, 'AEX/AP/RE', 'Componente GUI, eventos.', 268),
(4814, '2013-03-26 15:00:00', 2, 'AEX, AP e RE', 'Apresentação do Conteúdo programático, critérios de avaliação e datas previsão das avaliações. Motivação e expectativas para a disciplina,\nTeste de auto-avaliação.\n', 341),
(4815, '2013-12-02 14:00:00', 6, 'AEX/RE/AP', 'Streams, exceção, noções de concorrência.', 268),
(4816, '2013-03-28 15:00:00', 2, 'AEX, AP e RE', 'Aspectos administrativos da disciplina; introdução ao sistema de apoio Moodle. Uso do Boca no sistema do INF UFG.\n\n\n', 341),
(4817, '2013-12-12 14:00:00', 4, 'SE/AP', 'Apresentação do projeto de aplicação no laboratório.', 268),
(4818, '2013-04-02 15:00:00', 4, 'AEX, AP e RE', 'Introdução a algoritmos e programação de computadores.\n\n', 341),
(4819, '2013-04-09 15:00:00', 4, 'AEX, AP e RE', 'Introdução ao método PBL (Problem-Based Learning) – visão geral do método e prática através de um problema.\n\n', 341),
(4820, '2013-12-19 14:00:00', 2, 'OTR', '2a. prova individual.', 268),
(4821, '2013-04-16 15:00:00', 8, 'AEX, AP e RE', 'Prática de programação com fluxogramas e Linguagem C C (Code Blocks).\n', 341),
(4822, '2013-04-30 15:00:00', 8, 'AEX, AP e RE', 'Estudo e resolução de uma série planejada de problemas\nenvolvendo os tópicos conceituais da ementa: lógica de\nprogramação; constantes; tipos de dados primitivos;\nVariáveis; Atribuição; Expressões aritméticas e lógicas;\nEstruturas de Decisão.\n\n', 341),
(4823, '2013-05-14 15:00:00', 2, 'AEX, RE e AP', 'Revisão', 341),
(4824, '2013-05-16 15:00:00', 2, 'OTR - AV', 'Primeira Avaliação: Prova', 341),
(4825, '2013-05-21 15:00:00', 8, 'AEX, RE e AP', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: estruturas de controle.\n\n', 341),
(4826, '2013-06-06 15:00:00', 8, 'AEX, AP e RE', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes.', 341),
(4827, '2013-07-04 15:00:00', 2, 'AEX, RE e AP', 'Problema envolvendo todas as práticas de Programação dadas até o momento. Uso de Funções, Procedimentos e Recursão.\n', 341),
(4828, '2013-07-09 15:00:00', 2, 'AEX, AP e RE', 'Revisão de todo conteúdo ministrado até o momento.\n', 341),
(4829, '2013-07-11 15:00:00', 2, 'OTR - AV', 'Segunda Avaliação Teórica e Prática\n', 341),
(4830, '2013-07-16 15:00:00', 2, 'AEX e AP', 'Entrega de Trabalhos e Resultados Finais.\n\n', 341),
(4831, '2013-08-22 15:00:00', 4, 'AEX , RE , AP', 'Apresentação da disciplina e do conteúdo.  Ordenação de dados: Seleção.', 328),
(4832, '2013-09-06 15:00:00', 4, 'AEX , RE , TG ,  AP', 'Ordenação de dados: Shell Sort e Quick Sort.', 328),
(4833, '2013-10-04 15:00:00', 3, 'OTR', '1a. Avaliação escrita.', 328),
(4866, '2013-09-20 15:00:00', 4, 'AEX , RE , TG , AP', 'Pesquisa de dados: Sequencial.', 328),
(4867, '2013-10-10 15:00:00', 12, 'AEX , RE , TG , AP', 'Árvores.', 328),
(4868, '2013-12-06 14:00:00', 3, 'OTR', '2a. Avaliação escrita.', 328),
(4869, '2013-11-01 14:00:00', 4, 'AEX , RE , TG , AP', 'Pesquisa: Árvores e Hashing.', 328),
(4871, '2013-08-23 15:00:00', 2, 'AEX, RE', 'Corretude e Eficiência de algoritmos. Medidas de Tempo e Espaço de um algoritmo. Invariante. Corretude de algoritmos. Exemplos de análise de algoritmos.\n', 232),
(4872, '2013-08-27 15:00:00', 2, 'AEX, RE', 'Crescimento de funções. Notação assintótica. Exemplo de uso da notação assintótica. Revisão de relações matemáticas.', 232),
(4873, '2013-09-06 15:00:00', 2, 'AEX, RE', 'Árvores de recursão. Recorrências homogêneas lineares.', 232),
(4874, '2013-09-17 15:00:00', 4, 'AEX, RE', 'Divisão e Conquista – Busca Binária e variações multidimensionais', 232),
(4875, '2013-09-27 15:00:00', 2, 'AEX, RE', 'Divisão e Conquista - Multiplicação de números inteiros.', 232),
(4876, '2013-10-01 15:00:00', 2, 'AEX, RE', 'Divisão e Conquista - Algoritmo de Strassen para multiplicação de matrizes.', 232),
(4877, '2013-10-04 15:00:00', 2, 'AEX, RE', 'Divisão e Conquista – Algoritmos diversos.', 232),
(4878, '2013-10-08 15:00:00', 2, 'AEX, RE', 'Filas de prioridade. HeapSort.', 232),
(4879, '2013-08-30 15:00:00', 4, 'AEX, RE', 'Revisão de relações matemáticas. Técnicas para resolução de relações de recorrência.', 232),
(4880, '2013-10-11 15:00:00', 2, 'AEX, RE', 'Limite inferior para ordenação por comparação.', 232),
(4881, '2013-09-10 15:00:00', 4, 'AEX, RE', 'Divisão e Conquista – Teorema Mestre.', 232),
(4882, '2013-10-15 15:00:00', 2, 'AEX, RE', 'Medianas e estatísticas de ordem. Algoritmos básicos.', 232),
(4883, '2013-09-24 15:00:00', 2, 'AEX, RE', 'Divisão e Conquista - Ordenação (MergeSort e QuickSort).', 232),
(4884, '2013-04-02 15:00:00', 1, 'OTR', 'Apresentação do Plano de Ensino com explanação geral da disciplina, do critério de avaliação e da bibliografia, motivação e expectativas para a disciplina.', 343),
(4885, '2013-04-04 15:00:00', 1, 'OTR', 'Apresentação das propostas de software para trabalhos em grupo e redação de artigo científico (inclui modelos de apresentação e de artigo científico)\n\nDefinição dos grupos e escolha de respectivos softwares', 343),
(4886, '2013-11-08 14:00:00', 2, 'OTR', 'Prova 2', 210),
(4887, '2013-12-20 14:00:00', 2, 'OTR', 'Prova 3', 210),
(4888, '2013-04-09 15:00:00', 1, 'AEX', 'Software e Engenharia de Software \n- Características do software\n- Crise do software\n- Custos e a Engenharia de Software', 343),
(4889, '2013-04-11 15:00:00', 2, 'AEX', 'Engenharia de Sistemas\n- Sistemas baseados em computador\n- Hierarquia da engenharia de sistemas\n- Modelagem de sistemas\n- Descrição às equipes do 1o trabalho da disciplina relacionado ao software escolhido', 343),
(4890, '2013-03-25 15:00:00', 2, 'AEX', 'Introdução: apresentação da disciplina e do plano de ensino', 344),
(4891, '2013-03-27 15:00:00', 4, 'AEX/RE', 'Noções de lógica matemática', 344),
(4892, '2013-04-03 15:00:00', 8, 'AEX/RE', 'Técnicas de demonstração', 344),
(4893, '2013-04-29 15:00:00', 6, 'AEX/RE', 'Conjuntos', 344),
(4894, '2013-05-08 15:00:00', 2, 'OTR', 'Prova 1', 344),
(4895, '2013-04-18 15:00:00', 3, 'AEX', 'Processo de Software\n- Produto e processo\n- Modelos de processo\n- Processo unificado', 343),
(4896, '2013-05-13 15:00:00', 12, 'AEX/RE', 'Relações: Propriedades, relações de equivalência e ordem parcial.', 344),
(4897, '2013-06-03 15:00:00', 8, 'AEX/RE', 'Funções', 344),
(4898, '2013-06-19 15:00:00', 2, 'OTR', 'Prova 2', 344),
(4899, '2013-06-24 15:00:00', 8, 'AEX/RE', 'Indução matemática e recursão', 344),
(4900, '2013-07-08 15:00:00', 10, 'AEX/RE', 'Combinatória', 344),
(4901, '2013-07-24 15:00:00', 2, 'OTR', 'Prova 3', 344),
(4902, '2013-05-07 15:00:00', 1, 'TG', 'Entrega e apresentação dos trabalhos de Modelagem de Sistemas (15 minutos por grupo)', 343),
(4903, '2013-11-21 14:00:00', 2, 'OTR', 'Prova 2.', 303),
(4904, '2013-04-30 15:00:00', 2, 'AEX', 'Engenharia de Requisitos\n- Requisitos de software\n- Documento de especificação de software\n- Casos de Uso', 343),
(4906, '2013-05-09 15:00:00', 1, 'AEX', 'Engenharia de Requisitos\n- Processo de engenharia de requisitos\n- Descrição às equipes do 2o trabalho da disciplina relacionado ao software escolhido', 343),
(4908, '2013-10-14 15:00:00', 4, 'AEX', 'Serviços de nomes e diretórios.', 304),
(4909, '2013-05-14 15:00:00', 4, 'AEX', 'Modelagem de Análise\n- Diagramas de Casos de Uso\n- Diagramas de Raias\n- Diagramas de Sequência\n- Diagramas de Classes', 343),
(4910, '2013-12-23 14:00:00', 2, 'OTR', 'Resultado Final. ', 303),
(4911, '2013-05-28 15:00:00', 4, 'AEX', 'Projeto de Software\n- Conceitos\n- Projeto Arquitetural (incluindo relação com Requisitos de Projeto de Sistemas Sensíveis a Contexto)\n- Descrição às equipes do 3o trabalho da disciplina relacionado ao software escolhido', 343),
(4912, '2013-06-13 15:00:00', 1, 'TG', 'Entrega e Apresentação dos trabalhos de Especificação de Requisitos do software escolhido', 343),
(4913, '2013-06-18 15:00:00', 4, 'AEX', 'Qualidade de Software\n- Qualidade de produto\n- Qualidade de processo\n- Revisões técnicas\n- Inspeções', 343),
(4914, '2013-07-02 15:00:00', 1, 'TG', 'Entrega e apresentação de trabalhos de Projeto (15 minutos por grupo)', 343),
(4915, '2013-07-04 15:00:00', 3, 'TG', 'Reuniões com grupos para discussão dos artigos científicos segundo modelo disponibilizado e os trabalhos prévios de modelagem de sistemas, especificação de requisitos e projeto', 343),
(4916, '2013-07-16 15:00:00', 1, 'TG', 'Entrega e apresentação dos artigos científicos segundo modelos disponibilizados relatando trabalhos prévios de modelagem de sistemas, especificação de requisitos e projeto do software escolhido', 343),
(4917, '2013-08-26 15:00:00', 2, 'AP, RE', 'Noções de Lógica, Lógica de Programação, Algoritmo.', 322),
(4918, '2013-08-29 15:00:00', 6, 'AEX, RE, AP', 'Tipos primitivos. Constantes, Variáveis (Formação de Identificadores e Declaração de Variáveis). Comandos (Atribuição, Entrada e Saída), Blocos. Estruturas de Controle: Estrutura Sequencial.', 322),
(4919, '2013-09-09 15:00:00', 4, 'AP, RE,TG', 'Expressões (Aritméticas, Lógicas, Relacionais). ', 322),
(4920, '2013-09-12 15:00:00', 10, 'AEX, AP, RE, TG, OTR', 'Estruturas de Controle: Seleção (Simples, Composta, Encadeada, Múltipla Escolha)', 322),
(4921, '2013-09-30 15:00:00', 18, 'AEX, AP, TG, RE, OTR', 'Estruturas de Controle: Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)', 322),
(4922, '2013-11-14 14:00:00', 16, 'AEX, AP, TG, RE, OTR', 'Estruturas de Dados Homogêneas  (Vetores e Matrizes)', 322),
(4923, '2013-12-12 14:00:00', 2, 'AEX, AP, RE', 'Modularização', 322),
(4924, '2013-10-21 14:00:00', 2, 'OTR', 'Prova 1', 322),
(4925, '2013-12-19 14:00:00', 2, 'OTR', 'Prova 2', 322),
(4926, '2013-08-22 15:00:00', 2, 'AP', 'Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas e relacionamento com outras disciplinas do curso.', 323),
(4927, '2013-08-26 15:00:00', 2, 'AP, RE', 'Noções de Lógica, Lógica de Programação, Algoritmo.', 323),
(4928, '2013-08-29 15:00:00', 6, 'AEX, AP, RE', 'Tipos primitivos. Constantes, Variáveis (Formação de Identificadores e Declaração de Variáveis), Comandos (Atribuição, Entrada, Saída), Blocos. Estrutura de Controle: Estrutura Sequencial.', 323),
(4929, '2013-09-09 15:00:00', 4, 'AP, RE,TG', 'Expressões (Aritméticas, Lógicas, Relacionais).', 323),
(4930, '2013-09-12 15:00:00', 10, 'AEX, AP, RE, TG, OTR', 'Estruturas de Controle: Seleção (Simples, Composta, Encadeada, Múltipla Escolha)', 323),
(4931, '2013-09-30 15:00:00', 18, 'AEX, AP, RE, TG, OTR', 'Estruturas de Controle: Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)', 323),
(4932, '2013-10-21 14:00:00', 2, 'OTR', 'Prova 1', 323),
(4933, '2013-11-14 14:00:00', 16, 'AEX, AP, RE, TG, OTR', 'Estruturas de Dados Homogêneas  (Vetores e Matrizes)', 323),
(4934, '2013-12-12 14:00:00', 2, 'AEX,AP,RE', 'Modularização', 323),
(4935, '2013-12-19 14:00:00', 2, 'OTR', 'Prova 2', 323),
(4936, '2013-03-25 15:00:00', 2, 'AEX', 'Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas, e relacionamento com outras disciplinas do curso.', 345),
(4937, '2013-04-01 15:00:00', 2, 'AEX, RE', 'Noções de Lógica, Lógica de Programação, Algoritmo,', 345),
(4938, '2013-04-05 15:00:00', 6, 'AP, AEX, RE', 'Tipos primitivos, Constantes, Variáveis (Formação de Identificadores e Declaração de Variáveis). Comandos (Atribuição, Entrada, Saída). Blocos. Estruturas de Controle: Estrutura Sequencial.', 345),
(4939, '2013-04-12 15:00:00', 2, 'AP, RE', 'Expressões (Aritméticas, Lógicas, Relacionais).', 345),
(4940, '2013-04-15 15:00:00', 12, 'AEX, AP, RE, TG, OTR', 'Estruturas de Controle: Seleção (Simples, Composta, Encadeada, Múltipla Escolha)', 345),
(4941, '2013-05-06 15:00:00', 16, 'AEX, AP, RE, TG, OTR', 'Estruturas de Controle:  Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)', 345),
(4942, '2013-06-17 15:00:00', 18, 'AEX, AP, RE, TG, OTR', 'Estruturas de Dados Homogêneas (Vetores e Matrizes)', 345),
(4943, '2013-07-15 15:00:00', 2, 'AEX, AP, RE', 'Modularização', 345),
(4944, '2013-05-27 15:00:00', 2, 'OTR', 'Prova 1', 345),
(4945, '2013-07-26 15:00:00', 2, 'OTR', 'Prova 2', 345),
(4947, '2013-08-29 15:00:00', 10, 'AEX/RE/AP/TG', 'Estruturas de arquivo básicas, hashing e indexação.', 260),
(4948, '2013-09-16 15:00:00', 6, 'AEX/RE/AP/TG', 'Processamento de transações.', 260),
(4949, '2013-09-03 15:00:00', 2, 'OTR', 'Prova 1', 230),
(4950, '2013-09-26 15:00:00', 12, 'AEX/RE/AP/TG', 'Técnicas de controle de concorrência.', 260),
(4951, '2013-10-17 15:00:00', 10, 'AEX/RE/AP/TG', 'Técnicas de recuperação de banco de dados.', 260),
(4952, '2013-09-06 15:00:00', 16, 'AEX/RE', '2. Processos e Threads\n2.1.	Processos\n2.2.	Threads\n2.3.	Comunicação InterProcessos (CIP)\n2.4.	Problemas clássicos de CIP\n2.5.	Escalonamento\n', 230),
(4953, '2013-11-11 14:00:00', 6, 'AEX/RE/AP/TG', 'Segurança de banco de dados.', 260),
(4954, '2013-12-13 14:00:00', 2, 'OTR', 'Prova 3', 230),
(4955, '2013-11-21 14:00:00', 10, 'AEX/RE/AP/TG', 'Funções, gatilhos e procedimentos armazenados.', 260),
(4956, '2013-08-20 15:00:00', 4, 'AEX/RE', '1	Introdução\n1.1	Revisão de Conceitos de Sistemas Operacionais\n', 234),
(4957, '2013-08-27 15:00:00', 12, 'AEX/RE', '2	Sistemas de arquivos\n2.1	Arquivos \n2.2	Diretórios\n2.3	Implementação\n2.4	Administração e otimização\n2.5	Exemplos\n', 234),
(4958, '2013-09-17 15:00:00', 8, 'AEX/RE', '3	Entrada e Saída\n3.1	Princípios de hardware de E/S\n3.2	Princípios de software de E/S\n3.3	Camadas de software de E/S\n3.4	Discos\n3.5	Relógios\n3.6	Interfaces com usuário\n3.7	Exemplos\n', 234),
(4960, '2013-10-01 15:00:00', 8, 'SE', 'Apresentação trabalhos sobre arquivos', 234),
(4962, '2013-10-18 15:00:00', 2, 'OTR', 'Prova 1', 234),
(4963, '2013-12-17 14:00:00', 2, 'OTR', 'Prova 2', 234),
(4964, '2013-10-22 14:00:00', 6, 'AEX/RE', '4	Sistemas multiprocessadores\n4.1	Multiprocessadores\n4.2	Multicomputadores\n4.3	Virtualização\n4.4	Exemplos\n', 234);
INSERT INTO `itemcronograma` (`id`, `inicio`, `numeroaulas`, `procedimentodidatico`, `topico`, `plano_id`) VALUES
(4965, '2013-11-05 14:00:00', 6, 'AEX/RE', '5	Segurança\n5.1	O ambiente de segurança\n5.2	Mecanismos de proteção\n5.3	Ataques\n5.4	Exemplos', 234),
(4966, '2013-11-19 14:00:00', 8, 'AEX/RE', '6	Sistemas Operacionais Multimídia\n6.1	Introdução à multimídia\n6.2	Arquivos multimídia\n6.3	Compressão de vídeo\n6.4	Escalonamento de processos Multimídia\n6.5	Paradigmas de sistemas de arquivos multimídia\n6.6	Arranjo de arquivos multimídia\n6.7	Caching\n6.8	Escalonamento de discos para multimídia\n6.9	Exemplos', 234),
(4967, '2013-12-03 14:00:00', 6, 'SE', 'Apresentação trabalhos sobre Multicomputadores e segurança', 234),
(4968, '2013-12-13 14:00:00', 2, 'OTR', 'Revisão', 234),
(4969, '2013-12-13 14:00:00', 2, 'OTR', 'Revisão', 230),
(4970, '2013-04-05 15:00:00', 2, 'AEX', 'Apresentação do Programa da disciplina: explanação sobre do conteúdo a ser abordado; critérios de avaliação; motivação, expectativas e relacionamento com outras disciplinas do curso. Caracterização de software concorrente: conceitos.', 346),
(4973, '2013-08-21 11:00:00', 2, 'AEX', 'Apresentação da Disciplina:\nIdentificação;\nEmenta;\nConteúdo Programático;\nObjetivos;\nProcedimentos Didáticos;\nAvaliação da Aprendizagem;\nBibliografias.\n \n', 275),
(4974, '2013-05-03 15:00:00', 8, 'OTR', 'Período previsto para a defesa de tese de doutoramento.', 346),
(4975, '2013-08-22 11:00:00', 2, 'AEX,RE,ED', 'Conceitos Preliminares:\nNoções de lógica.\nLógica de Programação. \n', 275),
(4976, '2013-04-12 15:00:00', 10, 'AEX/AP', 'Programação concorrente orientada a objetos: programação concorrente, processos e threads, modelo de objetos e concorrência, safety, liveness, execução de construções concorrentes, reusabilidade, adaptadores, padrões de projeto. \n', 346),
(4977, '2013-08-28 11:00:00', 4, 'AEX, RE, TG', 'Construção de Algoritmos: Elementos Fundamentais\nTipo de Dados;\nFormação de Identificadores;\nConstantes;\nVariáveis;\nComando de Atribuição;\nComandos de Entrada e Saída.\nExpressões e Operadores\nExpressões Aritméticas\nExpressões Lógicas\nEstrutura Seqüencial\n', 275),
(4978, '2013-04-26 15:00:00', 2, 'AEX', 'Exclusão mútua: aplicações, construção, sincronização.', 346),
(4979, '2013-09-04 11:00:00', 16, 'RE, TG, AEX, AP', 'Estruturas de Seleção:\nSimples;\nCompostas;\nEstruturas de Seleção:\nEncadeada\nHeterogênea;\nHomogênea.\nMúltipla Escolha.', 275),
(4981, '2013-05-17 15:00:00', 6, 'AEX/AP', 'Exclusão mútua: deadlock, modelo de memória do Java, exclusão em métodos e threads, mutexes, read-write locks. ', 346),
(4982, '2013-10-02 11:00:00', 22, 'AEX, AP, RE, TG', 'Estruturas de Repetição\nCom Teste no Início, \n Com Teste no final \n Com variável de controle\n Estruturas de repetição encadeada\n', 275),
(4983, '2013-06-07 15:00:00', 2, 'OTR', '1a. prova individual.', 346),
(4984, '2013-11-06 12:00:00', 18, 'AEX,RE, TG, AP', 'Estruturas de Dados\nVariáveis Compostas Homogêneas (Vetores e Matrizes)\nModularização\n', 275),
(4985, '2013-06-14 15:00:00', 8, 'AEX/AP', 'Dependência: exceções, guardas e variáveis de condição, monitores, espera ocupada, semáforos, criando transações, protocolos acquire-release.\n', 346),
(4987, '2013-06-28 15:00:00', 8, 'AEX/AP', 'Criando programas concorrentes baseados em threads: modelagem, threads trabalhadoras, polling e eventos, callbacks, fork/join.', 346),
(4989, '2013-07-12 15:00:00', 12, 'SE/AP', 'Apresentação do projeto de aplicação.', 346),
(4990, '2013-08-02 15:00:00', 4, 'OTR', 'Revisão e 2a. prova individual.', 346),
(4992, '2013-04-05 15:00:00', 2, 'AEX', 'Caracterização de software concorrente: conceitos, desafios, ferramentas.', 346),
(4995, '2013-08-26 15:00:00', 4, 'AEX/RE', 'Apresentação e visão geral da disciplina', 252),
(4996, '2013-03-25 15:00:00', 2, 'AEX', 'Apresentação da disciplina, motivação, objetivos, ementa, conteúdo programático, bibliografia e avaliações', 347),
(4997, '2013-03-27 15:00:00', 2, 'AP', 'Introdução à Virtualização', 347),
(4998, '2013-04-01 15:00:00', 2, 'AEX', 'Histórico\nConceito de Sistemas Operacionais', 347),
(4999, '2013-04-03 15:00:00', 2, 'AP', 'Criação de Máquinas Virtuais', 347),
(5000, '2013-10-03 15:00:00', 8, 'AEX/RE/AP/TG', 'SQL.', 252),
(5001, '2013-04-08 15:00:00', 2, 'AEX', 'Fundamentos de Hardware e Software, Tipos de Sistemas Operacionais', 347),
(5002, '2013-04-10 15:00:00', 2, 'AP', 'Virtualização', 347),
(5003, '2013-04-15 15:00:00', 2, 'AEX', 'Gerência de Processos', 347),
(5004, '2013-10-17 15:00:00', 2, 'OTR', 'Primeira avaliação', 252),
(5007, '2013-04-22 15:00:00', 6, 'AEX', 'Gerência de Processos (continuação)', 347),
(5008, '2013-05-08 15:00:00', 2, 'AP', 'Gerência de Processos no Windows', 347),
(5009, '2013-11-25 14:00:00', 2, 'OTR', 'Segunda avaliação.', 252),
(5010, '2013-03-26 15:00:00', 2, 'AEX', 'Apresentação do Programa\n- Explanação sobre os conteúdos a serem abordados\ndurante o curso;\n- Critério de Avaliação;\n- Bibliografia;\n- Motivação e expectativas para a disciplina e\nrelacionamento com outras disciplinas do curso.', 348),
(5011, '2013-05-13 15:00:00', 2, 'AEX', 'Prova 01', 347),
(5012, '2013-05-15 15:00:00', 2, 'AP', 'Gerência de Memória', 347),
(5013, '2013-04-02 15:00:00', 18, 'AEX/RE/AP/TG', 'Pesquisa em memória Primária\n- Pesquisa Sequencial e Binária;\n- Árvore de Pesquisa;\n- Árvores Binárias de Pesquisas sem balanceamento;\n- Árvores Binárias de Pesquisa com Balanceamento\n(AVL)\n- Pesquisa Digital (Trie)', 348),
(5014, '2013-05-20 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 347),
(5015, '2013-05-22 15:00:00', 2, 'AP', 'Gerência de Memória no Linux', 347),
(5016, '2013-05-27 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 347),
(5017, '2013-05-29 15:00:00', 2, 'AP', 'Gerência de Memória no Windows', 347),
(5018, '2013-06-03 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 347),
(5019, '2013-05-02 15:00:00', 10, 'AEX/RE/AP/TG', 'Tabela de Hashing\n- Função de Transformação;\n- Tabelas ordenadas e não ordenadas;\n- Tabelas de Endereçamento Aberto.', 348),
(5020, '2013-06-05 15:00:00', 2, 'AP', 'Gerência de Memória no Linux (continuação)', 347),
(5021, '2013-06-10 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 347),
(5022, '2013-06-12 15:00:00', 2, 'AP', 'Gerência de Memória no Windows (continuação)', 347),
(5023, '2013-06-17 15:00:00', 2, 'AEX', 'Gerência do Sistema de Arquivos', 347),
(5024, '2013-05-16 15:00:00', 2, 'SE/RE/AP', 'Apresentação do Trabalhos Práticos sobre os\nconceitos abordados nos tópicos anteriores (tabela hashing)', 348),
(5025, '2013-06-19 15:00:00', 2, 'AP', 'Gerência do Sistema de Arquivos no Linux', 347),
(5026, '2013-06-24 15:00:00', 2, 'AEX', 'Gerência do Sistema de Arquivos (continuação)', 347),
(5027, '2013-06-26 15:00:00', 2, 'AP', 'Gerência do Sistema de Arquivos no Windows', 347),
(5028, '2013-07-01 15:00:00', 2, 'AP', 'Gerência de Entrada/Saída', 347),
(5029, '2013-07-03 15:00:00', 2, 'AP', 'Gerência de Entrada/Saída no Linux', 347),
(5030, '2013-07-08 15:00:00', 2, 'AP', 'Gerência de Entrada/Saída (continuação)', 347),
(5031, '2013-05-21 15:00:00', 26, 'SE/RE/AP/TG', 'Desenvolvimento dos Trabalhos Teóricos e Práticos sobre os Métodos de Ordenação Interna e Externa', 348),
(5032, '2013-07-10 15:00:00', 2, 'AP', 'Gerência de Entrada/Saída no Windows', 347),
(5033, '2013-03-28 15:00:00', 4, 'AEX/AP/T', 'Conceitos Básicos de Computação. ', 349),
(5034, '2013-07-15 15:00:00', 2, 'AEX', 'Prova P2', 347),
(5035, '2013-03-28 15:00:00', 2, 'AEX/AP', 'Apresentação da disciplina', 349),
(5036, '2013-07-17 15:00:00', 2, 'AEX', 'Entrega de Resultados', 347),
(5037, '2013-06-25 15:00:00', 4, 'OTR', 'Apresentação dos Seminários sobre Métodos de Ordenação', 348),
(5038, '2013-04-04 15:00:00', 2, 'Conceitos Básicos de Computação.', 'Noções de Lógica, Lógica de Programação, Algoritmo.', 349),
(5039, '2013-04-11 15:00:00', 16, 'AEX/AP/RE/T', 'Expressões;\nComandos;\nEstruturas de Controle. Sequencial. Seleção (Simples, Composta, Encadeada, Múltipla Escolha)', 349),
(5040, '2013-04-17 15:00:00', 2, 'AP', 'Gerência de Processos no Linux', 347),
(5041, '2013-05-16 15:00:00', 2, 'OTR', 'Prova 1', 349),
(5042, '2013-05-23 15:00:00', 14, 'AEX/AP/RE/T', 'Estruturas de Controle. Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)', 349),
(5043, '2013-06-13 15:00:00', 2, 'OTR', 'Prova 2', 349),
(5044, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação da disciplina', 350),
(5045, '2013-06-20 15:00:00', 14, 'AEX/AP/RE/T', 'Estruturas de Dados Homogêneas (Vetores e Matrizes)', 349),
(5046, '2013-09-16 15:00:00', 14, 'AEX e AP', 'Gerência de Processos', 350),
(5047, '2013-10-17 15:00:00', 14, 'AEX e AP', 'Gerência de Memória', 350),
(5048, '2013-07-11 15:00:00', 6, 'AEX/AP/RE/T', 'Modularização', 349),
(5049, '2013-12-05 14:00:00', 12, 'AEX e AP', 'Entrada/Saída, Projeto e Estudo de Caso', 350),
(5050, '2013-07-18 15:00:00', 2, 'OTR', 'Prova 3', 349),
(5051, '2013-11-14 14:00:00', 10, 'AEX', 'Sistemas de Arquivos', 350),
(5052, '2012-03-28 19:00:00', 12, 'AEX', '1. Caracterização e Modelos de Sistema para SD', 351),
(5053, '2013-04-20 19:00:00', 4, 'AEX', '2. Comunicação Interprocessos', 351),
(5054, '2013-04-27 15:00:00', 12, 'AEX', '3. Invocação Remota e Sistemas de Objetos Distribuídos', 351),
(5055, '2013-05-11 15:00:00', 6, 'AEX, AP', '4. Serviços Web', 351),
(5056, '2013-05-23 19:00:00', 6, 'AEX', '5. Comunicação Indireta', 351),
(5057, '2013-06-13 19:00:00', 4, 'AEX', '6. Serviços de Nomes', 351),
(5058, '2013-06-20 19:00:00', 4, 'AEX', '7. Tempo e Estado Global', 351),
(5059, '2013-06-27 19:00:00', 6, 'AEX', '8. Coordenação e Acordo', 351),
(5060, '2013-07-06 15:00:00', 10, 'AEX, AP', '9. Transações e Controle de Concorrência', 351),
(5061, '2013-04-30 15:00:00', 2, 'SE/RE/AP', 'Apresentação do Trabalhos Práticos sobre os\nconceitos abordados nos tópicos anteriores (árvores de pesquisa)', 348),
(5062, '2013-03-25 15:00:00', 2, 'AEX', 'Apresentação da disciplina, motivação, objetivos,\nementa, conteúdo programático, bibliografia e avaliações\n', 352),
(5063, '2013-03-27 15:00:00', 2, 'AP', 'Introdução à Virtualização', 352),
(5064, '2013-04-01 15:00:00', 2, 'AEX', 'Histórico\nConceito de Sistemas Operacionais', 352),
(5065, '2013-09-03 15:00:00', 8, 'AEX', '2. Introdução aos Sistemas Distribuídos', 307),
(5066, '2013-04-03 15:00:00', 2, 'AP', 'Criação de Máquinas Virtuais', 352),
(5067, '2013-09-17 15:00:00', 16, 'AEX e AP', '3. Sistemas de Objetos Distribuídos', 307),
(5068, '2013-04-08 15:00:00', 2, 'AEX', 'Fundamentos de Hardware e Software, Tipos de Sistemas Operacionais', 352),
(5069, '2013-10-18 15:00:00', 10, 'AEX e AP', '4. Arquiteturas Orientadas a Serviços', 307),
(5071, '2013-04-10 15:00:00', 2, 'AP', 'Virtualização', 352),
(5072, '2013-11-05 14:00:00', 4, 'AEX', '5. Comunicação Assíncrona', 307),
(5073, '2013-04-15 15:00:00', 2, 'AEX', 'Gerência de Processos', 352),
(5074, '2013-11-12 14:00:00', 6, 'AEX', '6. Arquiteturas Peer-to-Peer', 307),
(5076, '2013-04-17 15:00:00', 2, 'AP', 'Gerência de Processos no Linux', 352),
(5077, '2013-11-26 14:00:00', 12, 'AEX e AP', '7. Arquiteturas Avançadas para Aplicações Distribuídas', 307),
(5079, '2013-04-22 15:00:00', 6, 'AEX', 'Gerência de Processos (continuação)', 352),
(5080, '2013-05-08 15:00:00', 2, 'AP', 'Gerência de Processos no Windows', 352),
(5082, '2013-05-13 15:00:00', 2, 'AEX', 'Prova 01', 352),
(5084, '2013-05-15 15:00:00', 2, 'AP', 'Gerência de Memória', 352),
(5085, '2013-05-20 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 352),
(5087, '2013-05-22 15:00:00', 2, 'AP', 'Gerência de Memória no Linux', 352),
(5088, '2013-05-27 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 352),
(5090, '2013-05-29 15:00:00', 2, 'AP', 'Gerência de Memória no Windows', 352),
(5091, '2013-06-03 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 352),
(5093, '2013-06-05 15:00:00', 2, 'AP', 'Gerência de Memória no Linux (continuação)', 352),
(5094, '2013-06-10 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 352),
(5096, '2013-06-12 15:00:00', 2, 'AP', 'Gerência de Memória no Windows (continuação)', 352),
(5098, '2013-06-17 15:00:00', 2, 'AEX', 'Gerência do Sistema de Arquivos', 352),
(5099, '2013-06-19 15:00:00', 2, 'AP', 'Gerência do Sistema de Arquivos no Linux', 352),
(5101, '2013-06-24 15:00:00', 2, 'AEX', 'Gerência do Sistema de Arquivos (continuação)', 352),
(5102, '2013-06-26 15:00:00', 2, 'AP', 'Gerência do Sistema de Arquivos no Windows', 352),
(5105, '2013-07-01 15:00:00', 2, 'AP', 'Gerência de Entrada/Saída', 352),
(5106, '2013-07-03 15:00:00', 2, 'AP', 'Gerência de Entrada/Saída no Linux ', 352),
(5108, '2013-07-08 15:00:00', 2, 'AP', 'Gerência de Entrada/Saída (continuação)', 352),
(5109, '2013-07-10 15:00:00', 2, 'AP', 'Gerência de Entrada/Saída no Windows', 352),
(5110, '2013-07-15 15:00:00', 2, 'AEX', 'Prova 02', 352),
(5111, '2013-07-17 15:00:00', 2, 'AEX', 'Entrega de Resultados', 352),
(5112, '2013-12-05 14:00:00', 4, 'AEX', 'Entrega do resultado final', 245),
(5118, '2013-04-02 15:00:00', 2, 'AEX', 'Apresentação da disciplina', 353),
(5119, '2013-04-05 15:00:00', 4, 'AEX', 'Introdução sobre Heurísticas e Metaheurísticas', 353),
(5120, '2013-04-12 15:00:00', 16, 'SE', 'Busca Local', 353),
(5121, '2013-05-07 15:00:00', 16, 'SE', 'Busca Populacional', 353),
(5122, '2013-06-04 15:00:00', 22, 'SE', 'Aplicações', 353),
(5123, '2013-11-11 14:00:00', 8, 'AEX', 'Apresentação de trabalho\n', 214),
(5124, '2013-12-13 14:00:00', 2, 'OTR', 'Segunda Avaliação', 222),
(5125, '2013-03-25 15:00:00', 2, 'OTR', 'Apresentação do programa', 354),
(5126, '2013-04-01 15:00:00', 12, 'AEX', 'Código de Ética', 354),
(5127, '2013-04-08 15:00:00', 10, 'AEX', 'Normas Técnicas', 354),
(5128, '2013-04-29 15:00:00', 4, 'AEX', 'Legislação', 354),
(5129, '2013-05-20 15:00:00', 8, 'AEX', 'Empreendorismo', 354),
(5131, '2013-03-27 15:00:00', 2, 'AEX', 'Apresentação da disciplina, ementa e cronograma.\nConceituação de computador, informática e software.\nHistórico da computação.\n', 355),
(5132, '2013-05-30 15:00:00', 6, 'AEX', 'Liderança', 354),
(5136, '2013-06-07 15:00:00', 4, 'AEX', 'Gestão de Conflitos', 354),
(5138, '2013-04-26 15:00:00', 2, 'OTR', 'Prova', 354),
(5141, '2013-05-17 15:00:00', 2, 'OTR', 'Provas', 354),
(5142, '2013-06-21 15:00:00', 2, 'OTR', 'Prova', 354),
(5143, '2013-05-30 15:00:00', 2, 'OTR', 'Avaliação da aprendizagem – Prova P1\n', 355),
(5144, '2013-06-24 15:00:00', 2, 'OTR', 'Resultados', 354),
(5147, '2013-06-27 15:00:00', 2, 'OTR', 'Avaliação da aprendizagem – P2 \n', 355),
(5153, '2013-04-18 15:00:00', 10, 'AEX', 'Exercícios', 354),
(5154, '2013-09-09 15:00:00', 8, 'AEX,AP', 'Introdução à POO em Java: classes, objetos, atributos, métodos, construtores, constantes de classe, atributos estáticos, métodos estáticos.\nSobrecarga de métodos\nPadrão de codificação em Java', 308),
(5155, '2013-03-25 12:00:00', 2, 'AEX/ED', 'Apresentação da Disciplina:\n-Identificação;\n-Ementa;\n-Conteúdo Programático;\n-Objetivos;\n-Procedimentos Didáticos;\n-Avaliação da Aprendizagem;\n-Bibliografias.\nHistórico da Computação  ', 357),
(5156, '2013-03-27 12:00:00', 2, 'AEX/ED', 'Visão Geral do Computador: Hardware e Software;\nNoções de Sistemas Operacionais e Arquivos;\nVisão sobre algoritmos e linguagens de programação;\nUtilitários, Compiladores e Interpretadores.', 357),
(5157, '2013-04-01 11:00:00', 2, 'RE', 'Noções de lógica.\nLógica de Programação. ', 357),
(5158, '2013-04-03 11:00:00', 2, 'AEX', 'Construção de Algoritmos: \nElementos Fundamentais\nTipo de Dados;\nFormação de Identificadores;\nConstantes;\nVariáveis;\nComando de Atribuição;\nComandos de Entrada e Saída.', 357),
(5159, '2013-04-08 11:00:00', 2, 'RE/TG', 'Expressões e Operadores\nExpressões Aritméticas\nExpressões Lógicas\nEstrutura Seqüencial\n', 357),
(5160, '2013-04-10 11:00:00', 14, 'RE/TG', 'Estruturas de Seleção:\nSimples;\nCompostas;\nEstruturas de Seleção:\nEncadeada\nHeterogênea;\nHomogênea.\nMúltipla Escolha.', 357),
(5161, '2013-05-06 11:00:00', 22, 'RE/TG', 'Estruturas de Repetição\nCom Teste no Início, \n Com Teste no final \n Com variável de controle\nEstruturas de repetição encadeada\n', 357),
(5162, '2013-06-12 11:00:00', 14, 'RE/TG', 'Estruturas de Dados\nVariáveis Compostas Homogêneas (Vetores e Matrizes)', 357),
(5163, '2013-07-08 11:00:00', 4, 'RE', 'Modularização', 357),
(5164, '2013-03-27 15:00:00', 2, 'AEX', 'Apresentação do conteúdo programático, critérios de avaliação e datas previstas das avaliações. Motivação e expectativas para a disciplina. Aspectos administrativos da disciplina. Introdução ao sistema de apoio Moodle da disciplina.', 356),
(5166, '2013-04-03 15:00:00', 4, 'AEX', 'Conceitos básicos da computação (Histórico, Hardware e Software, Sistemas Operacionais, Linguagens de Programação).\n', 356),
(5167, '2013-04-10 15:00:00', 2, 'AEX', 'Noções de Lógica, Lógica de Programação, Algoritmo.', 356),
(5168, '2013-04-12 15:00:00', 2, 'AEX, RE, AP', 'Tipos primitivos, constantes, variáveis (Formação de identificadores e declaração de variáveis).\n', 356),
(5169, '2013-04-17 15:00:00', 4, 'AEX, RE, AP', 'Expressões aritméticas, lógicas, relacionais.', 356),
(5170, '2013-03-26 12:00:00', 1, 'AP', 'Introdução ao Moodle e ao Ambiente de Programação', 358),
(5171, '2013-04-24 15:00:00', 4, 'AEX, RE, AP', 'Comandos de atribuição, entrada e saída. Blocos.\n', 356),
(5172, '2013-03-28 12:00:00', 3, 'AEX/RE', 'Apresentação da Disciplina:\nIdentificação;\nEmenta;\nConteúdo Programático;\nObjetivos;\nProcedimentos Didáticos;\nAvaliação da Aprendizagem;\nBibliografias.\nHistórico da Computação', 358),
(5174, '2013-04-02 11:00:00', 1, 'AP', 'O ambiente BOCA ', 358),
(5175, '2013-05-08 15:00:00', 10, 'AEX, RE, AP', 'Estruturas de Controle: Seleção (Simples, Composta, Encadeada e de Múltipla Escolha).', 356),
(5176, '2013-04-04 11:00:00', 3, 'AEX', 'Visão Geral do Computador: Hardware e Software;\nNoções de Sistemas Operacionais e Arquivos;\nVisão sobre algoritmos e linguagens de programação;\nUtilitários, Compiladores e Interpretadores.\n', 358),
(5177, '2013-05-03 15:00:00', 2, 'OTR', 'Prova 1 (P1)', 356),
(5178, '2013-04-09 11:00:00', 1, 'AP', 'Noções de lógica.\nLógica de Programação. ', 358),
(5179, '2013-04-11 11:00:00', 3, 'AEX/RE', 'Construção de Algoritmos: Elementos Fundamentais\nTipo de Dados;\nFormação de Identificadores;\nConstantes;\nVariáveis;\nComando de Atribuição;\nComandos de Entrada e Saída.\nExpressões e Operadores\nExpressões Aritméticas\nExpressões Lógicas\nEstrutura Seqüencial', 358),
(5180, '2013-04-16 11:00:00', 12, 'AP/AEX/RE', 'Estruturas de Seleção:\nSimples;\nCompostas;\nEstruturas de Seleção:\nEncadeada\nHeterogênea;\nHomogênea.\nMúltipla Escolha.\n', 358),
(5181, '2013-05-07 11:00:00', 20, 'AP/AEX/RE', 'Estruturas de Repetição\nCom Teste no Início, \n Com Teste no final \n Com variável de controle\n    Estruturas de repetição encadeada', 358),
(5182, '2013-06-11 11:00:00', 12, 'AP/AEX/RE', 'Estruturas de Dados\nVariáveis Compostas Homogêneas (Vetores e Matrizes)', 358),
(5183, '2013-07-02 11:00:00', 4, 'AP/AEX/RE', 'Recursividade', 358),
(5185, '2013-05-24 15:00:00', 6, 'AEX, RE, AP', 'Estruturas de Repetição: Com teste no início e no final.', 356),
(5186, '2013-06-07 15:00:00', 2, 'AP, RE', 'Revisão para Prova.', 356),
(5187, '2013-06-12 15:00:00', 2, 'OTR', 'Prova 2 (P2).', 356),
(5188, '2013-06-14 15:00:00', 6, 'AEX, AP, RE', 'Estruturas de Repetição: Com variável de controle.', 356),
(5189, '2013-06-26 15:00:00', 14, 'AEX, AP, RE', 'Estruturas de Dados: homogêneas unidimensionais e multidimensionais (vetores e arrays).', 356),
(5190, '2013-07-19 15:00:00', 2, 'AP, RE', 'Revisão para Prova.', 356),
(5191, '2013-07-24 15:00:00', 2, 'OTR', 'Prova 3 (P3).', 356),
(5194, '2013-03-26 15:00:00', 2, 'AEX', 'Apresentação do programa da disciplina e da sua correlação com outras disciplinas; Fundamentos de Gestão de Projetos; Definição dos trabalhos práticos.', 359),
(5195, '2013-03-28 15:00:00', 6, 'AEX', 'O conceito de Projeto; Processo Definido versus Processo Empírico; Abordagens disciplinadas e ágeis de gestão de projetos.\nGerenciamento de projetos segundo o PMBOK.\nGerenciamento de projetos segundo o Método Ágil Scrum.\n', 359),
(5196, '2013-04-09 15:00:00', 4, 'AEX', 'O Planejamento de Projetos; Ciclo de vida e organização de projetos.\nProcessos de gerenciamento de projetos e suas interações; Ferramentas para gestão de projetos. \n', 359),
(5197, '2013-04-16 15:00:00', 2, 'TG', 'Entrega e discussão do Trabalho 1.', 359),
(5198, '2013-04-18 15:00:00', 18, 'SE, TG', 'As nove áreas do corpo de conhecimento de Gerência de Projetos.', 359),
(5199, '2013-05-23 15:00:00', 2, 'TG, ED', 'Entrega e discussão do Trabalho 2.', 359),
(5200, '2013-05-28 15:00:00', 10, 'SE, TG', 'Apresentação e discussão de ferramentas de Gestão de Projetos.', 359),
(5201, '2013-06-18 15:00:00', 10, 'ED, SE', 'Gerência de Projetos nos modelos MPS.BR e CMMI: Planejamento, Monitoramento e Controle de Projetos de Software.\nO conceito de Marco de Projeto: visibilidade e viabilidade.\nGestão de portfólio de projetos.\nMonitoramento de problemas e ações corretivas no projeto; classificação de problemas.\nGestão de requisitos: rastreabilidade e consistência de planos, produtos e requisitos.\n', 359),
(5202, '2013-07-04 15:00:00', 8, 'ED, SE', 'Processos de apoio à Gerência de Projetos. \nGarantia e Controle da Qualidade do projeto.\nMedição do projeto; indicadores e métricas.\nGerência de configuração do projeto; linha de base final.\n', 359),
(5203, '2013-07-18 15:00:00', 2, 'OTR', 'Avaliação Escrita Individual.', 359),
(5204, '2013-03-26 15:00:00', 4, 'AEX', 'Apresentação do programa da disciplina e da sua correlação com outras disciplinas; Conceitos Fundamentais de Integração de Aplicações; Definição dos trabalhos práticos.\nNecessidades e desafios de integração; Acoplamento em Arquitetura de Software; Padrões de Integração.\n', 360),
(5205, '2013-04-02 15:00:00', 4, 'AEX, ED', 'Estilos ou abordagens de integração: Transferência de Arquivos, Base de Dados compartilhada; RPC; Mensagens Assíncronas; Vantagens e limitações de cada abordagem.\nO Conceito de Mensagem; Propriedades de uma Mensagem; Etapas para comunicação de mensagens; Canais de Mensagem.\n', 360),
(5206, '2013-04-09 15:00:00', 4, 'AEX, ED', 'Tratamento de mensagens inválidas; Controle de múltiplos consumidores de mensagens; Roteamento de mensagens.\nConstrução de mensagens; conversão de formato de mensagens.\n', 360),
(5207, '2013-04-16 15:00:00', 4, 'AEX', 'Conexão entre aplicações e sistemas de mensagem; confiabilidade da conexão; garantia de entrega de mensagem.\nTipos de Sistemas Gerenciadores de Mensagens: SO, SGBD, Servidor de Aplicação, Toolkit, Framework, Middleware.\n', 360),
(5208, '2013-04-25 15:00:00', 2, 'RE', 'Revisão e exercícios sobre Integração de Aplicações.', 360),
(5209, '2013-04-30 15:00:00', 2, 'OTR', 'Avaliação escrita individual.', 360),
(5210, '2013-05-02 15:00:00', 14, 'AP, TG', 'Prática de Integração de Aplicações em Projeto de Software.', 360),
(5211, '2013-05-28 15:00:00', 2, 'TG, SE', 'Entrega e discussão do Trabalho 1.', 360),
(5212, '2013-06-04 15:00:00', 26, 'TG, AP', 'Prática de Integração de Aplicações em Projeto de Software.', 360),
(5213, '2013-07-18 15:00:00', 2, 'TG, SE', 'Entrega e discussão do Trabalho 2.', 360),
(5214, '2013-09-06 11:00:00', 3, 'AEX', 'Introdução – Conceitos básicos\nTema, Objetivo, Hipótese, Validação\n', 361),
(5215, '2013-09-13 11:00:00', 3, 'AEX', 'Fontes de Informação - Treinamento na Biblioteca\n', 361),
(5216, '2013-09-20 11:00:00', 3, 'AEX', 'Leitura de documentos\n	Resumo\n	Resenha\n', 361),
(5217, '2013-09-27 11:00:00', 3, 'AEX', 'Levantamento Bibliogáfico', 361),
(5218, '2013-10-04 11:00:00', 3, 'AEX', 'LATEX ', 361),
(5219, '2013-10-09 11:00:00', 3, 'AEX', 'Escrita de Artigos', 361),
(5220, '2013-10-18 11:00:00', 3, 'AEX', 'Referências Bibliográficas - Treinamento na biblioteca\n', 361),
(5221, '2013-10-25 11:00:00', 3, 'AEX', 'Técnicas de Apresentação de Artigos', 361),
(5222, '2013-11-01 12:00:00', 6, 'AEX', 'Apresentação de artigos pelos alunos', 361),
(5249, '2013-08-20 15:00:00', 2, 'OTR', 'Apresentação do Programa:\nExplanação sobre os conteúdos a serem abordados\nCritério de Avaliação\nBibliografia\nMotivação e expectativas para a disciplina\n', 320),
(5250, '2013-08-23 15:00:00', 4, 'AEX', 'Introdução e Revisão:\nSistemas de Informação (SI) e Ciclo de Vida de SI\nProcesso de Desenvolvimento de Software\nQualidade de software e o papel dos requisitos\n', 320),
(5251, '2013-08-30 15:00:00', 8, 'AEX', 'Fundamentos de requisitos\nTipos de requisitos\nFontes de requisitos\nEngenharia de requisitos e seus processos\n', 320),
(5252, '2013-09-14 15:00:00', 16, 'AEX', 'Levantamento, elicitação e especificação de requisitos\nTécnicas de Levantamento e elicitação de Requisitos\nCasos de uso e a especificação de requisitos\nDocumentação dos Requisitos\n', 320),
(5253, '2013-10-18 15:00:00', 2, 'OTR', 'Prova', 320),
(5254, '2013-10-22 14:00:00', 12, 'ED/TG', 'Acompanhamento de Trabalho Prático de Levantamento e Especificação dos Requisitos de um Sistema de Informação.', 320),
(5255, '2013-11-12 14:00:00', 8, 'AEX', 'Gerenciamento de Requisitos\nRastreabilidade de requisitos\nControle de Mudanças\nVerificação e validação de requisitos\n', 320),
(5256, '2013-12-10 14:00:00', 10, 'AEX/SE', 'Ferramentas CASE para requisitos', 320),
(5257, '2013-12-23 14:00:00', 2, 'OTR', 'Prova', 320),
(5258, '2013-03-26 15:00:00', 2, 'AEX', 'Apresentação do Programa\n- Explanação sobre os conteúdos a serem abordados\ndurante o curso;\n- Critério de Avaliação;\n- Bibliografia;\n- Motivação e expectativas para a disciplina e\nrelacionamento com outras disciplinas do curso.', 362),
(5259, '2013-04-02 15:00:00', 18, 'AEX/RE/AP/TG', 'Pesquisa em memória Primária\n- Pesquisa Sequencial e Binária;\n- Árvore de Pesquisa;\n- Árvores Binárias de Pesquisas sem balanceamento;\n- Árvores Binárias de Pesquisa com Balanceamento\n(AVL)\n- Pesquisa Digital (Trie)', 362),
(5260, '2013-04-30 15:00:00', 2, 'SE/RE/AP', 'Apresentação do Trabalhos Práticos sobre os\nconceitos abordados nos tópicos anteriores (árvores de\npesquisa)', 362),
(5261, '2013-05-02 15:00:00', 10, 'AEX/RE/AP/TG', 'Tabela de Hashing\n- Função de Transformação;\n- Tabelas ordenadas e não ordenadas;\n- Tabelas de Endereçamento Aberto.', 362),
(5262, '2013-05-16 15:00:00', 2, 'SE/RE/AP', 'Apresentação do Trabalhos Práticos sobre os\nconceitos abordados nos tópicos anteriores (tabela\nhashing)', 362),
(5263, '2013-05-21 15:00:00', 26, 'SE/RE/AP/TG', 'Desenvolvimento dos Trabalhos Teóricos e Práticos\nsobre os Métodos de Ordenação Interna e Externa', 362),
(5264, '2013-06-25 15:00:00', 4, 'OTR', 'Apresentação dos Seminários sobre Métodos de Ordenação', 362),
(5265, '2013-08-20 15:00:00', 2, 'OTR', 'Apresentação do Programa:\n\n•  Conteúdos  a serem abordados durante o curso\n•  Critério de Avaliação\n•  Bibliografia\n•  Motivação e expectativas para a disciplina.\n• Visão geral do conteúdo a ser ministrado.\n', 219),
(5266, '2013-08-23 15:00:00', 4, 'AEX', 'Visão geral do projeto de software:\n\n• Princípios básicos: abstração e particionamento de problemas; modularização; acoplamento; coesão e encapsulamento de informação;\n• A questão da arquitetura de software; definição, principais modelos e padrões; diferenças entre projeto arquitetural e projeto detalhado.\n• Modelo estrutural e comportamental de software;\n• Projeto funcional X projeto O.O;\n• Projeto de Interfaces;\n• Projeto de Persistência;\n', 219),
(5267, '2013-08-30 15:00:00', 2, 'AEX', 'Definição e explicação do trabalho prático de laboratório do semestre:\n\n•	Processo, método e ferramentas que serão utilizados;\n•	Sistema objeto do trabalho;\n\n\n\n', 219),
(5268, '2013-09-03 15:00:00', 6, 'AEX', 'Revisão dos artefatos de especificação e análise de requisitos', 219),
(5270, '2013-09-13 15:00:00', 6, 'LAB/TG', 'Elaboração/refinamento dos artefatos de análise detalhada de caso de uso', 219),
(5272, '2013-09-24 15:00:00', 6, 'AEX', 'Projeto arquitetural: conceitos básicos, importância, padrões e visões.', 219),
(5273, '2013-10-04 15:00:00', 8, 'LAB/TG', 'Elaboração de projeto arquitetural de software', 219),
(5274, '2013-10-25 14:00:00', 10, 'AEX/LAB', 'Projeto detalhado de software: padrões de projeto, artefatos principais', 219),
(5275, '2013-10-22 14:00:00', 2, 'OTR', 'Prova', 219),
(5276, '2013-11-12 14:00:00', 4, 'AEX', 'Aspectos notáveis de projetos de Software:\n1. Concorrência;\n2. controle de eventos;\n3. distribuição;\n4. tratamento de exceções;\n5. tolerância a falhas;\n6. interfaces e prototipação;\n7. persistência de informação.\n8. mapeamento para código\n', 219),
(5277, '2013-11-22 14:00:00', 8, 'LAB/TG', 'Elaboração dos artefatos de projeto detalhado', 219),
(5278, '2013-12-06 14:00:00', 4, 'AEX', 'Métricas de projetos e técnicas de avaliação nas etapas de desenvolvimento. Normas e padrões pertinentes com base nas normas de desenvolvimento e obtenção de qualidade;', 219),
(5279, '2013-12-13 14:00:00', 2, 'OTR', 'Prova', 219),
(5283, '2013-03-26 15:00:00', 10, 'AEX/PRA/ED', 'Apresentação do Programa:\n   • Explanação da disciplina e dos conteúdos a serem abordados;\n   • Explicação do critério de avaliação;\n   • Bibliografia adotada;\n   • Perspectivas da disciplina e dos conteúdos a serem abordados;\n\nComo funciona a Web:\n   • Protocolos, pedidos e respostas.\n\nIntrodução à HTML\n   • Estruturas e principais balizas (tags) em HTML.\n\nJava na Web e Introdução aos Servlets:\n   • Servidores e Containeres Servlets\n   • Aplicações\n   • Ciclo de vida de um Servlet', 363),
(5284, '2013-04-11 15:00:00', 6, 'AEX/PRA', 'Introdução à Classe HttpServlet:\n   • Criação de Servlets usando método Post e Get\n   • Recuperação de strings de consulta com Servlets\n\nInterface HttpServletRequest:\n   • Uso de métodos de HttpServletRequest\n   • Leitura de formulários e recuperação de cabeçalhos Cookies e \n\nSessões:\n   • Criaçao de Cookies\n   • Recuperação de Cookies\n   • Uso, término e gerenciamento de sessões\n', 363),
(5285, '2013-04-25 15:00:00', 6, 'AEX/PRA', 'Introdução à JSP (Java Server Pages)\n   • Estrutura de uma página JSP\n   • Configuração da aplicação (arquivo web.xml)\n   • Diretiva Page e Include\n   • Comparação de JSP com Servlets.\n\nControle de Erros\n   • Tratamento de erros\n   • Captura de erros usando JSP\n', 363),
(5286, '2013-05-07 15:00:00', 6, 'AEX/PRA', 'Ações:\n   • Standard actions\n   • Custom actions\n   • JSTL actions\n\nIntrodução aos JavaBeans:\n   • Criaçao de JavaBeans\n   • Uso de actions\n   • JavaBeans mais dinâmicos\n', 363),
(5287, '2013-05-16 15:00:00', 12, 'AEX/PRA', 'Uso de Banco de Dados e JDBC (Java Database Connectivity):\n   • Conexao JDBC\n   • Principais statements\n\nIntrodução à arquitetura MVC (Model-View-Controller) e DAO (Data Acceess Object):\n   • O quê é MVC\n   • Aplicações Web\n   • O que é DAO\n   • Usando DAO para fazer operações de acesso a dados\n', 363),
(5288, '2013-06-06 15:00:00', 8, 'AEX/PRA', 'JSP EL (Expression Language)\n   • Sintaxe\n   • Literals\n   • Operadores\n   • EL e JavaBeans\n\nSTL (Standard Tag Library)\n   • JavaServer Pages Standard Tag Library (JSTL)\n   • Tags SQL\n   • Uso de STL e EL\n', 363),
(5290, '2013-06-20 15:00:00', 6, 'RE/SE', 'Apresentação de Trabalhos', 363),
(5291, '2013-07-02 15:00:00', 6, 'AEX/PRA', 'Introdução à Custom Tags:\n   • Uso de Custom Tags\n   • Construção de Tags\n   • Tag Library Descriptor (TLD)\n   • Criação de TLD\n', 363),
(5292, '2013-07-11 15:00:00', 14, 'AEX/PRA', 'Introdução à JSF (Java Server Faces):\n   • Exemplo de JSF\n   • Tags padrões do JSF\n   • Ciclo de vida do JSF\n   • Banco de dados e JSF\n   • Páginas JSF\n', 363),
(5293, '2013-07-17 15:00:00', 4, 'AEX/PRA', 'Introdução à JSF e Hibernate:\n   • Conexão ao Hibernate\n   • Hibernate Annotations\n   • API de persistência\n', 363),
(5294, '2013-07-23 15:00:00', 4, 'AEX/PRA', 'Introdução ao RIA com Primefaces:\n   • O que é e como funciona Primefaces;\n   • Principais componentes Primefaces.\n', 363),
(5295, '2013-07-30 15:00:00', 2, 'SE/TG', 'Apresentação de Trabalho', 363),
(5296, '2013-08-30 15:00:00', 6, 'AEX, RE, TG, AP', 'Gerência de escopo', 321),
(5297, '2013-09-11 15:00:00', 6, 'AEX, RE, TG, AP', 'Gerência de tempo', 321),
(5298, '2013-09-20 15:00:00', 18, 'AEX, RE, TG, AP', 'Gerência de custos;\nGerência de qualidade;\nGerência de recursos humanos.', 321),
(5299, '2013-10-23 14:00:00', 6, 'AEX, RE, TG, AP', 'Gerência de comunicação', 321),
(5300, '2013-11-06 14:00:00', 6, 'AEX, RE, TG, AP', 'Gerência de riscos', 321),
(5301, '2013-11-20 14:00:00', 6, 'AEX, RE, TG, AP', 'Gerência de aquisições', 321),
(5302, '2013-11-29 14:00:00', 10, 'AEX, RE, TG, AP', 'Gerência de integração e relações com outros padrões nacionais e internacionais.', 321),
(5303, '2013-03-27 15:00:00', 4, 'AEX, RE, TG, AP', 'Conceitos básicos', 364),
(5304, '2013-04-02 15:00:00', 4, 'AEX, RE, TG, AP', 'Infraestrutura: Hardware', 364),
(5305, '2013-04-09 15:00:00', 4, 'AEX, RE, TG, AP', 'Infraestrutura: Software', 364),
(5306, '2013-04-16 15:00:00', 8, 'AEX, RE, TG, AP', 'Infraestrutura: Gerenciamento de Dados', 364),
(5307, '2013-05-07 15:00:00', 8, 'AEX, RE, TG, AP', 'Infraestrutura: Telecomunicações e Redes', 364),
(5308, '2013-05-21 15:00:00', 8, 'AEX, RE, TG, AP', 'Infraestrutura: Segurança', 364),
(5309, '2013-06-04 15:00:00', 8, 'AEX, RE, TG, AP', 'Aplicações: Sistemas e-Business ', 364),
(5310, '2013-06-18 15:00:00', 8, 'AEX, RE, TG, AP', 'Aplicações: Sistemas e-Commerce', 364),
(5311, '2013-07-02 15:00:00', 8, 'AEX, RE, TG, AP', 'Aplicações: Sistemas de Apoio às Decisões', 364),
(5312, '2013-07-16 15:00:00', 4, 'AEX, RE, TG, AP', 'Processos de Desenvolvimento', 364),
(5313, '2013-03-25 15:00:00', 2, 'AEX', 'Apresentação do plano de aula.', 365),
(5314, '2013-03-26 15:00:00', 2, 'ED', 'Recursos de dispositivos móveis e suas implicações no desenvolvimento de sistemas. Detalhes do dispositivo GT-P5100. Elaborar possibilidades de uso deste dispositivo no contexto em que ele é empregado para entrada de dados que serão enviados oportunamente a um servidor.', 365),
(5315, '2013-03-27 15:00:00', 2, 'AEX,RE', 'Esboço de um estudo de caso (problema) pela Secretaria Municipal de Saúde de Goiânia.', 365),
(5316, '2013-03-27 15:00:00', 2, 'AEX', 'Apresentação da disciplina:\n- Plano de aulas\n- Bibiliografia\n- Avaliação\n- Datas Importantes', 366),
(5317, '2013-04-03 15:00:00', 6, 'AEX e TG', 'Requisito de Software:\n- Processos da Engenharia de Requisitos\n- Norma IEEE 830', 366),
(5318, '2013-04-12 15:00:00', 8, 'AEX e TG', 'Projeto de Software:\n- Projeto Arquitetural\n- Projeto de Interface\n- Projeto de baixo nível', 366),
(5319, '2013-04-26 15:00:00', 8, 'AEX e TG', 'Desenvolvimento:\n- Desenvolvimento Orientado a Objetos\n- Desenvolvimento Baseado em Componentes\n- Desenvolvimento Orientado a Aspectos', 366),
(5320, '2013-05-15 15:00:00', 6, 'AEX e TG', 'Métodos Ágeis', 366),
(5321, '2013-05-29 15:00:00', 2, 'OTR', 'Primeira Avaliação', 366),
(5322, '2013-06-05 15:00:00', 6, 'AEX e TG', 'Validação, Verificação e Teste de Software', 366),
(5323, '2013-06-14 15:00:00', 4, 'AEX e TG', 'Gerência de Configuração', 366),
(5324, '2013-06-21 15:00:00', 4, 'AEX e TG', 'Desenvolvimento de Sistemas Críticos', 366),
(5325, '2013-06-28 15:00:00', 4, 'AEX e TG', 'Manutenção de Software', 366),
(5326, '2013-07-05 15:00:00', 4, 'AEX e TG', 'Tecnologia emergente: desenvolvimento orientado a aspectos.', 366),
(5327, '2013-07-12 15:00:00', 6, 'AEX e TG', 'Gerenciamento de Projeto de Software', 366),
(5328, '2013-07-24 15:00:00', 2, 'OTR', 'Avaliação', 366),
(5329, '2013-07-31 15:00:00', 2, 'OTR', 'Entrega de resultados finais e atendimento aos alunos.', 366),
(5330, '2013-04-01 15:00:00', 2, 'AEX,RE', 'Noções de projeto de interação do trabalho prático. Processo iterativo. Ferramenta para registro. Trabalho de projeto de interação para o preenchimento da ficha A.', 365),
(5331, '2013-04-02 15:00:00', 2, 'ED', 'Prática de projeto de interação.', 365),
(5332, '2013-04-03 15:00:00', 2, 'AEX,RE', 'Desenvolvimento de software para Android. Ferramentas. Exemplo.', 365),
(5333, '2013-03-27 15:00:00', 2, 'AEX', 'Apresentação da disciplina:\n- Plano de aulas\n- Bibiliografia\n- Avaliação\n- Datas Importantes', 367),
(5334, '2013-04-03 15:00:00', 6, 'AEX e TG', 'Requisito de Software:\n- Processos da Engenharia de Requisitos\n- Norma IEEE 830', 367),
(5335, '2013-04-12 15:00:00', 8, 'AEX e TG', 'Projeto de Software:\n- Projeto Arquitetural\n- Projeto de Interface\n- Projeto de baixo nível', 367),
(5336, '2013-04-26 15:00:00', 8, 'AEX e TG', 'Desenvolvimento:\n- Desenvolvimento Orientado a Objetos\n- Desenvolvimento Baseado em Componentes\n- Desenvolvimento Orientado a Aspectos', 367),
(5337, '2013-04-05 15:00:00', 2, 'RE,ED', 'Arquitetura de software para o trabalho prático.', 365),
(5338, '2013-05-15 15:00:00', 6, 'AEX e TG', 'Métodos Ágeis', 367),
(5339, '2013-05-29 15:00:00', 2, 'OTR', 'Primeira Avaliação', 367),
(5340, '2013-06-05 15:00:00', 6, 'AEX e TG', 'Validação, Verificação e Teste de Software', 367),
(5341, '2013-04-08 15:00:00', 2, 'RE,ED', 'Revisão da arquitetura.', 365),
(5342, '2013-06-14 15:00:00', 4, 'AEX e TG', 'Gerência de Configuração', 367),
(5343, '2013-06-21 15:00:00', 4, 'AEX e TG', 'Desenvolvimento de Sistemas Críticos', 367),
(5344, '2013-04-09 15:00:00', 2, 'ED, TG', 'Arquitetura de software. Proposta para o trabalho prático.', 365),
(5345, '2013-06-28 15:00:00', 4, 'AEX e TG', 'Manutenção de Software', 367),
(5346, '2013-07-05 15:00:00', 4, 'AEX e TG', 'Tecnologia emergente: desenvolvimento orientado a\naspectos.', 367),
(5347, '2013-07-12 15:00:00', 6, 'AEX e TG', 'Gerenciamento de Projeto de Software', 367),
(5348, '2013-07-24 15:00:00', 2, 'OTR', 'Avaliação', 367),
(5349, '2013-04-10 15:00:00', 12, 'TG', 'Prática de desenvolvimento.', 365),
(5350, '2013-07-31 15:00:00', 2, 'OTR', 'Entrega de resultados finais e atendimento aos alunos.', 367),
(5351, '2013-05-01 15:00:00', 2, 'OTR', 'Apresentação de andamento dos projetos. Primeira avaliação. Projeto de interação. Arquitetura. Código desenvolvido.', 365),
(5352, '2013-05-06 15:00:00', 16, 'TG', 'Prática de desenvolvimento. Acompanhamento das atividades desenvolvidas pelos estudantes.', 365),
(5353, '2013-06-03 15:00:00', 2, 'AEX', 'Acompanhamento das atividades. Segunda avaliação.', 365),
(5354, '2013-06-05 15:00:00', 12, 'ED,TG', 'Prática final de desenvolvimento.', 365),
(5355, '2013-06-26 15:00:00', 2, 'OTR', 'Apresentação final dos trabalhos práticos. Avaliação final.', 365),
(5356, '2013-04-02 15:00:00', 30, 'SE', 'Tópicos em Pesquisa em Ciência da Computação.', 368),
(5357, '2013-03-25 15:00:00', 2, 'AEX', 'Apresentação do plano de aulas da disciplina.', 369),
(5358, '2013-03-27 15:00:00', 4, 'AEX', 'Definição de persistência e estratégias de implementação.', 369),
(5359, '2013-03-28 15:00:00', 4, 'ED,TG', 'Revisão teórica de alternativas de persistência.', 369),
(5360, '2013-04-01 15:00:00', 2, 'AEX,RE', 'Apresentação do problema para o trabalho prático.', 369),
(5361, '2013-04-03 15:00:00', 2, 'OTR', 'Prática de persistência usando objetos serializáveis, XML.', 369),
(5362, '2013-04-08 15:00:00', 4, 'RE', 'Prática de persistência usando bancos de dados relacionais.', 369),
(5363, '2013-04-10 15:00:00', 4, 'RE', 'Prática de persistência usando bancos de dados não relacionais.', 369),
(5364, '2013-04-15 15:00:00', 12, 'ED,TG', 'Modelagem de solução para o problema prático.', 369),
(5365, '2013-04-17 15:00:00', 2, 'OTR', 'Entrega da primeira avaliação. Modelagem da persistência para o problema prático.', 369),
(5366, '2013-04-22 15:00:00', 12, 'ED,TG', 'Implementação da persistência do trabalho prático.', 369),
(5367, '2013-05-06 15:00:00', 2, 'OTR', 'Entrega da segunda avaliação. Implementação parcial da persistência.', 369),
(5368, '2013-05-08 15:00:00', 12, 'ED,TG,RE', 'Prática de persistência (desenvolvimento dos trabalhos).', 369),
(5369, '2013-06-05 15:00:00', 2, 'OTR', 'Apresentação final dos trabalhos práticos. Última avaliação.', 369),
(5370, '2013-03-28 15:00:00', 2, 'AEX,TG', 'Noções de Lógica, Lógica de Programação, Algoritmo.\n', 355),
(5371, '2013-04-03 15:00:00', 6, 'AEX, RE, AP', 'Tipos primitivos. Constantes, Variáveis (Formação de\nIdentificadores e Declaração de Variáveis). Comandos\n(Atribuição, Entrada e Saída), Blocos. Estruturas de\nControle: Estrutura Sequencial.\n', 355),
(5372, '2013-04-11 15:00:00', 2, 'AP, RE', 'Expressões (Aritméticas, Lógicas, Relacionais).\n', 355),
(5373, '2013-04-17 15:00:00', 12, 'AEX, AP, RE, TG,  OTR', 'Estruturas de Controle: Seleção (Simples, Composta,\nEncadeada, Múltipla Escolha)\n', 355),
(5374, '2013-05-08 15:00:00', 14, 'AEX, AP, TG, RE,  OTR', 'Estruturas de Controle: Repetição (Com Teste no Início,\nCom Teste no Final, Com Variável de Controle)\n', 355),
(5375, '2013-06-05 15:00:00', 14, 'AEX, AP, TG, RE,  OTR', 'Estruturas de Dados Homogêneas (Vetores e Matrizes)\n', 355),
(5376, '2013-07-03 15:00:00', 8, 'AEX, AP, TG, RE,  OTR', 'Estruturas de Dados Homogêneas (Vetores e Matrizes)\nModularização\n', 355),
(5377, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação: Definição da estrutura, escopo e foco do curso. Aula sobre caracterização de sistemas distribuídos.', 370),
(5378, '2013-08-26 15:00:00', 3, 'AEX', 'Caracterização de sistemas distribuídos', 370),
(5379, '2013-08-29 15:00:00', 5, 'AEX', 'Modelos de sistema: arquitetura geral de sistemas distribuídos (middleware, cliente-servidor,\npeer-to-peer, agentes móveis); requisitos de projeto (desempenho, qualidade de serviço,\nconfiabilidade, transparência); modelos de interação; modelos de falha; modelos de segurança.\n', 370),
(5381, '2013-09-05 15:00:00', 2, 'AEX', 'Comunicação em Grupo – Multicast IP', 370),
(5384, '2013-09-30 15:00:00', 2, 'OTR', 'Prova', 370),
(5385, '2013-09-23 15:00:00', 5, 'AEX', 'Middleware: Implementação de RMI (cont.), RPC, Modelo de Eventos, Exemplo com Java RMI', 370),
(5386, '2013-10-03 15:00:00', 7, 'AEX', 'Arquiteturas MOM e JMS', 370),
(5387, '2013-10-21 14:00:00', 13, 'SE', 'Seminários – protocolos e serviços de sistemas distribuídos.', 370),
(5388, '2013-11-14 14:00:00', 11, 'AEX', 'Replicação, transações e tolerância a falhas: comunicação confiável; replicação e\nmanutenção de consistência entre réplicas; transações distribuídas; comunicação de grupo.', 370),
(5389, '2013-12-02 14:00:00', 2, 'OTR', 'Prova final', 370),
(5390, '2013-03-26 15:00:00', 6, 'AEX e AP', 'Introdução às Redes de Comunicação e Computadores', 371),
(5391, '2013-04-04 15:00:00', 2, 'AEX', 'Modelos de Camadas e Arquitetura de Redes', 371),
(5392, '2013-04-09 15:00:00', 8, 'AEX e AP', 'Programação com Sockets', 371),
(5393, '2013-04-25 15:00:00', 14, 'AEX e AP', 'Sistemas de Objetos Distribuídos', 371),
(5394, '2013-05-21 15:00:00', 14, 'AEX e AP', 'Prova e Arquiteturas orientadas a Serviços', 371),
(5395, '2013-06-11 15:00:00', 6, 'AEX', 'Camada de Aplicação', 371),
(5396, '2013-06-20 15:00:00', 6, 'AEX', 'Camada de Transporte', 371),
(5397, '2013-06-25 15:00:00', 6, 'AEX', 'Camada de Rede', 371),
(5398, '2013-03-26 15:00:00', 6, 'AEX e AP', 'Introdução às Redes de Comunicação e Computadores.', 372),
(5399, '2013-04-04 15:00:00', 2, 'AEX', 'Modelos de Camadas e Arquitetura de Redes', 372),
(5400, '2013-04-09 15:00:00', 8, 'AEX e AP', 'Programação com Sockets', 372),
(5401, '2013-04-25 15:00:00', 14, 'AEX e AP', 'Sistemas de Objetos Distribuídos', 372),
(5402, '2013-05-21 15:00:00', 14, 'AEX e AP', 'Prova e Arquiteturas orientadas a Serviços', 372),
(5403, '2013-06-11 15:00:00', 6, 'AEX', 'Camada de Aplicação', 372),
(5404, '2013-06-20 15:00:00', 6, 'AEX', 'Camada de Transporte', 372),
(5405, '2013-06-25 15:00:00', 6, 'AEX', 'Camada de Rede', 372),
(5406, '2013-07-09 15:00:00', 2, 'OTR', 'Prova.', 371),
(5407, '2013-07-09 15:00:00', 2, 'OTR', 'Prova 2.', 372),
(5452, '2013-08-20 15:00:00', 4, 'AEX', '1.	Princípios fundamentais da administração estratégica.', 329),
(5453, '2013-08-27 15:00:00', 14, 'AEX', '2.	O processo estratégico: análise.', 329),
(5454, '2013-10-08 15:00:00', 14, 'AEX', '3.	O processo estratégico: formulação.', 329),
(5455, '2013-10-15 15:00:00', 6, 'AEX', '4.	Balanced Scorecard.', 329),
(5456, '2013-10-29 14:00:00', 26, 'AEX', '5.	O processo estratégico: implantação.', 329),
(5457, '2013-04-05 15:00:00', 4, 'AEX, AP', 'Visão geral da disciplina, apresentação do plano de ensino e formas de avaliação. Conceito de Manutenção de Software.', 375),
(5458, '2013-04-05 15:00:00', 18, 'AEX AP', 'Introdução a Engenharia de Software\n	- Conceitos de Engenharia de Software\n	- Históricos e Necessidades da Engenharia de Software\n	- Conceitos de produto de software e processo de software\n	- Técnicas e Ferramentas Case', 377),
(5459, '2013-03-26 15:00:00', 2, 'AEX', 'Apresentação do professor, conteúdo programático, formas de avaliação, plano de ensinoe bibliografia básica', 378),
(5460, '2013-03-28 15:00:00', 2, 'AEX', 'Introdução à Gestão de Recursos Humanos - alguns conceitos básicos', 378),
(5461, '2013-04-04 15:00:00', 2, 'AEX, RE', 'Estudo de caso para discussão. A Coopers & Lybrand- orientação básica da área de RH.', 378),
(5462, '2013-04-02 15:00:00', 2, 'AEX', 'Os processos de gestão de pessoas (agregar, aplicar, recompensar, desenvolver, manter e monitorar pessoas); a estrutura do órgão de gestão de pessoas; as responsabilidades da Gestão de Pessoas como órgão de linha e de staff.', 378),
(5463, '2013-04-09 15:00:00', 2, 'AEX', 'A gestão de pessoas em ambiente dinâmico e competitivo - mudanças e transformações no cenário mundial.', 378),
(5464, '2013-04-11 15:00:00', 2, 'AEX, RE, TG', 'Os desafios do terceiro milênio para a Gestão de pessoas - administração de talentos humanos e do capital humano e capital intelectual. ', 378),
(5465, '2013-04-16 15:00:00', 2, 'AEX', 'Planejamento estratégico de Gestão de Pessoas - Missão, visão , valores. Modelos de planejamento de gestão de pessoas (adaptativo, integrado e autonomo).', 378),
(5466, '2013-04-18 15:00:00', 2, 'AEX, RE, TG', 'Fatores que intervêm no Planejamento de GP - absenteísmo, rotatividade, mudanças nos requisitos da força de trabalho. Apreciação crítica.', 378),
(5467, '2013-04-23 15:00:00', 2, 'AEX', 'Recrutamento de pessoas', 378),
(5468, '2013-04-25 15:00:00', 2, 'AEX, SE', 'Recrutamento - interno e externo, técnicas e avaliação', 378),
(5469, '2013-04-30 15:00:00', 2, 'AEX', 'Seleção de Pessoas', 378),
(5470, '2013-05-02 15:00:00', 2, 'AEX, SE, TG', 'Seleção de Pessoas - base, mapeamento, técnicas de seleção, processo e avaliação', 378),
(5471, '2013-05-07 15:00:00', 2, 'AEX', 'Aplicando pessoas - orientação das pessoas', 378),
(5472, '2013-05-09 15:00:00', 2, 'AEX, SE, TG', 'Socialização organizacional, Empowerment', 378),
(5473, '2013-05-14 15:00:00', 2, 'AEX', 'Modelagem do trabalho', 378),
(5474, '2013-05-16 15:00:00', 2, 'AEX, SE, TG', 'Desenho de cargos, modelos (humanístico, contingencial) enriquecimento de cargos, descrição de cargos e aspectos motivacionais. - Gestão da carreira e trabalho em equipe.', 378),
(5475, '2013-05-21 15:00:00', 2, 'AEX', 'Avaliação de desempenho humano', 378),
(5476, '2013-05-23 15:00:00', 2, 'AEX, SE, TG', 'Métodos tradicionais de avaliação do desempenho, métodos modernos e gestão do desempenho humano.', 378),
(5477, '2013-05-28 15:00:00', 2, 'AEX', 'Recompensando pessoas - remuneração', 378),
(5478, '2013-06-04 15:00:00', 2, 'AEX, SE, TG', 'desenho do sistema de remuneração, conceito de administração de salários, pesquisa salarial, remuneração por competências, política salarial para o profissional de TI.', 378),
(5479, '2013-06-06 15:00:00', 2, 'AEX, SE, TG', 'Programas de incentivos', 378),
(5480, '2013-06-11 15:00:00', 2, 'AEX, TG', 'Plano de bonificação anual, distribuição de ações da empresa aos funcionários, participação nos resultados, como desenhar um plano de incentivos.', 378),
(5481, '2013-06-13 15:00:00', 2, 'AEX, SE, TG', 'Benefícios e serviços', 378),
(5482, '2013-06-18 15:00:00', 2, 'AEX, SE, TG', 'Desenho de plano de benefícios, custos dos benefícios sociais, previdência social e previdência privada.', 378),
(5483, '2013-06-20 15:00:00', 2, 'AEX', 'Desenvolvendo Pessoas - Treinamento', 378),
(5484, '2013-06-25 15:00:00', 2, 'AEX, SE, TG', 'Processo de treinamento, diagnóstico das necessidades de treinamento. Mapeamento das competências, técnicas de treinamento e avaliação do programa de treinamento.', 378),
(5485, '2013-06-27 15:00:00', 2, 'AEX, SE, TG', 'Desenvolvimento de Pessoas e de organizações', 378),
(5486, '2013-07-02 15:00:00', 2, 'AEX, SE, TG', 'Gestão do conhecimento corporativo, tipos de conhecimento, gestão de mudança - Desenvolvimento organizacional.', 378),
(5487, '2013-07-04 15:00:00', 2, 'AEX', 'Mantendo Pessoas - relações com empregados', 378),
(5488, '2013-07-09 15:00:00', 2, 'AEX, SE, TG', 'Programas de assistência ao colaborador, disciplina, gestão de conflitos e arbitragem.', 378),
(5489, '2013-07-11 15:00:00', 2, 'AEX', 'Higiene, segurança e Qualidade de vida', 378);
INSERT INTO `itemcronograma` (`id`, `inicio`, `numeroaulas`, `procedimentodidatico`, `topico`, `plano_id`) VALUES
(5490, '2013-07-16 15:00:00', 2, 'AEX, SE, TG', 'Avaliação do programa de Higiene e segurança do trabalho - CIPA - QVT e programas de bem-estar dos colaboradores.', 378),
(5491, '2013-07-18 15:00:00', 2, 'AEX', 'Monitorando Pessoas - Bando de dados e sistemas de informações de GP', 378),
(5492, '2013-03-25 15:00:00', 1, 'AEX', 'Apresentação do Plano de Ensino', 379),
(5493, '2013-03-27 15:00:00', 1, 'AEX', 'Introdução à Teoria Geral da Administração', 379),
(5494, '2013-04-01 15:00:00', 2, 'AEX', 'Origem e evolução do trabalho e das organizações', 379),
(5495, '2013-04-08 15:00:00', 2, 'AEX', 'Apresentação do Programa:\n- Explanação sobre os conteúdos\n- Critério de avaliação\n- Motivação, expectativas e relacionamento com outras disciplinas do curso\n', 374),
(5496, '2013-04-10 15:00:00', 2, 'AEX', 'Introdução à Arquitetura de Software', 374),
(5497, '2013-04-15 15:00:00', 6, 'AEX/AP', 'Estilos Arquiteturais ', 374),
(5498, '2013-04-29 15:00:00', 2, 'AEX', 'Atributos de Qualidade de Software', 374),
(5499, '2013-05-06 15:00:00', 2, 'AEX/OTR', 'Modelo de Software em Camadas', 374),
(5500, '2013-05-08 15:00:00', 2, 'AEX/AP', 'Tecnologias para Middleware\n- RPC\n- RMI\n- COM+\n- EJB\n', 374),
(5501, '2013-05-13 15:00:00', 2, 'AEX/AP', 'Servidores de Aplicação', 374),
(5504, '2013-05-20 15:00:00', 6, 'AEX/AP', 'Requisitos Arquiteturais', 374),
(5505, '2013-05-15 15:00:00', 2, 'AEX/AP', 'Transações Distribuídas\n- XA\n- MTC\n', 374),
(5506, '2013-05-29 15:00:00', 2, 'RE/AP', 'Requisitos Arquiteturais e Aula teórica com resolução de exercícios', 374),
(5507, '2013-06-03 15:00:00', 2, 'OTR', '1ª Avaliação', 374),
(5508, '2013-06-05 15:00:00', 6, 'AEX/AP', 'Análise Arquitetural', 374),
(5509, '2013-06-19 15:00:00', 4, 'AEX/AP', 'Arquiteturas de Domínio Específico', 374),
(5510, '2013-06-17 15:00:00', 2, 'AP', 'Exercícios de laboratório', 374),
(5511, '2013-06-26 15:00:00', 4, 'AEX/AP', 'Introdução ao XML\n- XML\n- DTD\n', 374),
(5512, '2013-07-03 15:00:00', 2, 'AEX', 'Model-View-Controller (MVC)', 374),
(5513, '2013-07-08 15:00:00', 2, 'AEX', 'Arquitetura Dirigida por Modelos (MDA)', 374),
(5514, '2013-07-10 15:00:00', 4, 'AEX/AP', 'Webservices\n- SOAP\n- WSDL', 374),
(5515, '2013-07-17 15:00:00', 4, 'AEX/AP', 'Arquitetura Orientada a Serviços (SOA)', 374),
(5516, '2013-07-24 15:00:00', 2, 'AEX/AP', 'Barramento de Serviços Empresariais (ESB)', 374),
(5517, '2013-07-29 15:00:00', 2, 'OTR', '2ª Avaliação', 374),
(5518, '2013-07-31 15:00:00', 2, 'OTR', 'Entrega de notas e Fechamento do Semestre ', 374),
(5519, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação do Programa:\n- Explanação sobre os conteúdos\n- Critério de avaliação\n- Motivação, expectativas e relacionamento com outras disciplinas do curso\n', 224),
(5520, '2013-09-02 15:00:00', 4, 'AEX/AP', 'Estilos Arquiteturais ', 224),
(5521, '2013-08-26 15:00:00', 4, 'AEX', 'Introdução à Arquitetura de Software', 224),
(5522, '2013-09-09 15:00:00', 2, 'AEX', 'Atributos de Qualidade de Software', 224),
(5525, '2013-10-02 15:00:00', 2, 'AEX/AP', 'Servidores de Aplicação', 224),
(5526, '2013-09-18 15:00:00', 8, 'AEX/AP', 'Tecnologias para Middleware:\n- RPC \n- RMI', 224),
(5527, '2013-10-21 14:00:00', 6, 'AEX/AP', 'Requisitos Arquiteturais', 224),
(5528, '2013-10-07 15:00:00', 2, 'RE/AP', 'Revisão e Resolução de exercícios', 224),
(5529, '2013-10-09 15:00:00', 2, 'OTR', '1ª Avaliação', 224),
(5531, '2013-11-04 14:00:00', 6, 'AEX/AP', 'Análise Arquitetural', 224),
(5533, '2013-11-18 14:00:00', 2, 'AEX/AP', 'Introdução ao XML\n- XML\n- DTD', 224),
(5534, '2013-11-13 14:00:00', 2, 'AEX', 'Model-View-Controller (MVC)', 224),
(5536, '2013-11-20 14:00:00', 4, 'AEX/AP', 'Webservices\n- SOAP\n- WSDL', 224),
(5537, '2013-11-27 14:00:00', 4, 'AEX/AP', 'Arquitetura Orientada a Serviços (SOA)', 224),
(5539, '2013-12-16 14:00:00', 2, 'OTR', '2ª Avaliação', 224),
(5540, '2013-12-18 14:00:00', 2, 'OTR', 'Entrega de notas e Fechamento do Semestre ', 224),
(5541, '2013-04-10 15:00:00', 4, 'AEX, AP', 'Itens Fundamentais de uma Linguagem de Programação', 335),
(5542, '2013-04-24 15:00:00', 6, 'AEX, AP', 'Comandos básicos', 335),
(5543, '2013-05-07 15:00:00', 2, 'OTR', 'Prova 1', 335),
(5544, '2013-07-23 15:00:00', 2, 'OTR', 'Prova 2', 335),
(5545, '2013-04-12 15:00:00', 4, 'AEX, AP', 'Tipos de Manutenção de Software.', 375),
(5546, '2013-04-19 15:00:00', 4, 'AEX, TG', 'Manutenção de Software no Contexto dos Processos de Software.  /  Apresentação de Trabalhos', 375),
(5547, '2013-04-26 15:00:00', 4, 'AEX', 'Manutenibilidade. Sistemas Legados.', 375),
(5548, '2013-05-03 15:00:00', 4, 'AEX, AP', 'Manutenibilidade. Sistemas Legados (prática) \nSistema em Java para realizar tipos de manutenções.\n', 375),
(5549, '2013-05-10 15:00:00', 4, 'OTR', 'Primeira avaliação individual.', 375),
(5550, '2013-05-17 15:00:00', 4, 'AEX', 'Reengenharia. Processos.', 375),
(5551, '2013-06-07 15:00:00', 4, 'AEX', 'Engenharia Reversa', 375),
(5552, '2013-06-14 15:00:00', 4, 'AEX, AP', 'Refatoração.', 375),
(5553, '2013-06-21 15:00:00', 4, 'AEX', 'Configurações e Métricas. Norma ISO 14764', 375),
(5554, '2013-06-28 15:00:00', 4, 'AEX, AP', 'Testes de Software', 375),
(5555, '2013-07-04 15:00:00', 4, 'OTR', 'Segunda avaliação individual.  ', 375),
(5556, '2013-07-05 15:00:00', 4, 'AP', 'Projeto de Software (Criação do Software)', 375),
(5557, '2013-07-12 15:00:00', 4, 'AP', 'Projeto de Software (Criação do Software)', 375),
(5558, '2013-07-19 15:00:00', 4, 'AP', 'Projeto de Software (Manutenção)', 375),
(5559, '2013-07-26 15:00:00', 4, 'AP, OTR', 'Projeto de Software (Manutenção do Software) / \nAvaliação Substitutiva\n', 375),
(5575, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação do plano da disciplina: objetivo geral, explanação sobre conteúdos a serem abordados, critérios de avaliação, bibliografia, motivação e expectativas para a disciplina\n', 271),
(5576, '2013-08-23 15:00:00', 2, 'AEX', 'Relação com engenharia de sistemas; visão geral de sofware; crise do software; surgimento da engenharia de software; processos do ciclo de vida de software\n', 271),
(5577, '2013-08-28 15:00:00', 4, 'AEX', 'Processos de Software: cascata, incremental, evolucionarios. Desenvolvimento Ágil.\n', 271),
(5578, '2013-09-04 15:00:00', 2, 'AEX', 'Engenharia de Requisitos', 271),
(5579, '2013-09-06 15:00:00', 2, 'AEX, ED, TG', 'Engenharia de Requisitos. Documento de especificação de requisitos: definição do escopo\n', 271),
(5580, '2013-09-13 15:00:00', 2, 'ED,  TG', 'Prática de engenharia de Software: Definição de requisitos funcionais e não funcionais\n', 271),
(5581, '2013-09-25 15:00:00', 2, 'OTR', 'Primeira avaliação (P1).\n', 271),
(5582, '2013-09-27 15:00:00', 2, 'AEX', 'Modelagem de Análise - diagrama de casos de uso\n\n', 271),
(5583, '2013-10-02 15:00:00', 2, 'ED, TG', 'Prática de engenharia de Software: Modelagem de Análise - diagrama de casos de uso\n', 271),
(5584, '2013-11-01 14:00:00', 4, 'AEX', 'Projeto de Software\n', 271),
(5585, '2013-11-08 14:00:00', 4, 'ED, TG', 'Prática de engenharia de Software: Projeto de Software\n', 271),
(5586, '2013-10-30 14:00:00', 2, 'OTR', 'Segunda avaliação (P2)', 271),
(5587, '2013-11-22 14:00:00', 2, 'AEX', 'Gerência de Projetos de Software\n', 271),
(5588, '2013-10-11 15:00:00', 4, 'SE, TG', 'Apresentação do trabalho prático\n', 271),
(5590, '2013-11-29 14:00:00', 2, 'AEX', 'Teste de Software\n', 271),
(5591, '2013-12-04 14:00:00', 2, 'AEX', 'Qualidade de software\n', 271),
(5592, '2013-11-27 14:00:00', 2, 'AEX', 'Manutenção de Software e Reengenharia\n', 271),
(5594, '2013-12-06 14:00:00', 2, 'OTR', 'Terceira avaliação (P3)', 271),
(5595, '2013-12-11 14:00:00', 2, 'ORT, AEX', 'Encerramento da disciplina, revisão de provas e trabalhos práticos.', 271),
(5596, '2013-08-26 15:00:00', 2, 'AEX', 'Fundamentos de Auditoria de Sistemas de Informação\n', 289),
(5597, '2013-08-29 15:00:00', 2, 'TG, AP', 'Trabalho em Grupo: encontrar e analisar um exemplo prático de auditoria de sistemas (TI)\n', 289),
(5598, '2013-09-02 15:00:00', 2, 'SE, TG, AP', 'Apresentação do TG01. Apresentação de outros exemplos de auditorias em TI\n', 289),
(5599, '2013-09-05 15:00:00', 3, 'AEX', 'Principais conceitos de Governança de TI e Segurança da Informação\n', 289),
(5600, '2013-09-09 15:00:00', 2, 'AEX', 'Padrões e Código de Ética para Auditoria de Sistema de Informação\n', 289),
(5601, '2013-09-12 15:00:00', 2, 'AEX', 'Controles Internos \n', 289),
(5602, '2013-09-16 15:00:00', 1, 'OTR', 'Primeira avaliação.', 289),
(5603, '2013-09-19 15:00:00', 2, 'AEX', 'Auditoria de Controles Organizacionais e Operacionais\n', 289),
(5604, '2013-09-19 15:00:00', 3, 'AEX', 'Correção da primeira avaliação. Auditoria de Controles Organizacionais e Operacionais\n', 289),
(5605, '2013-09-26 15:00:00', 4, 'AEX', 'Tipos de Auditorias\n', 289),
(5606, '2013-09-30 15:00:00', 2, 'ED, TG', 'Estudo dirigido sobre Tipos de Auditorias\n', 289),
(5607, '2013-10-03 15:00:00', 2, 'AEX', 'Ferramentas e Técnicas de Auditoria de TI\n', 289),
(5608, '2013-10-07 15:00:00', 1, 'OTR', 'Segunda avaliação.', 289),
(5609, '2013-10-10 15:00:00', 5, 'AEX', 'Correção da segunda avaliação. Ferramentas e Técnicas de Auditoria de TI\n', 289),
(5610, '2013-10-14 15:00:00', 3, 'SE, TG, AP', 'Apresentação do TG02. Ferramentas e Técnicas de Auditoria de TI\n', 289),
(5611, '2013-10-17 15:00:00', 3, 'AEX', 'Avaliação de Software de Auditoria de Sistemas\n', 289),
(5612, '2013-10-21 14:00:00', 3, 'SE, TG, AP', 'Apresentação do TG 03. Softwares de Auditoria de Sistemas\n', 289),
(5613, '2013-10-31 14:00:00', 2, 'AEX', 'Emissão de Relatórios de Auditoria de Sistemas\n', 289),
(5614, '2013-11-07 14:00:00', 14, 'OTR', 'Inicio dos seminários e apresentação dos trabalhos sobre auditoria', 289),
(5615, '2013-12-16 14:00:00', 4, 'OTR, AEX', 'Finalização do semestre. Correção e revisão de provas e trabalhos.', 289),
(5618, '2013-05-03 15:00:00', 18, 'AEX AP', 'Gerência de Projetos de Software\n	- Planejamento do Projeto de Software\n	- Medidas de Qualidade\n	- Gestão de Riscos\n	- Acompanhamento de Projetos', 377),
(5619, '2013-06-14 15:00:00', 10, 'AEX AP', 'Controle de Qualidade\n	- Modelos de Qualidade\nGerencia de Configuração', 377),
(5620, '2013-06-29 15:00:00', 10, 'AEX AP', 'Projeto de Software\n	- Engenharia de Requisitos\n	- Documentação', 377),
(5621, '2013-07-19 15:00:00', 8, 'AEX AP', 'Tópicos avançados em engenharia de Software\n	- Métodos Formais e Reengenharia', 377),
(5622, '2013-06-20 15:00:00', 8, 'AEX, RE, ED, AP', 'Tópicos avançados\n	- Listas Circulares e Duplamente Ligadas\n	- Estrutura em árvore', 276),
(5623, '2013-07-01 15:00:00', 10, 'TG', 'Implementação de um trabalho envolvendo o conteúdo ministrado.', 276),
(5624, '2013-04-15 15:00:00', 2, 'AEX', 'Apresentação da Disciplina.\n', 381),
(5625, '2013-04-17 15:00:00', 2, 'AEX', 'Conceitos de computação.\n', 381),
(5626, '2013-04-22 15:00:00', 4, 'AEX,AP', 'Introdução a algoritmos e programação de computadores;\nRepresentação de Algoritmos: linguagem Natural, fluxograma convencional, pseudo-linguagem.\n', 381),
(5627, '2013-04-29 15:00:00', 8, 'AEX,AP', 'Tipos de dados primitivos: Dados Numéricos, Dados Alfa-numéricos e Dados Lógicos.\nVariáveis. \nExpressões aritméticas e lógicas.\nEstruturas de decisão.\nEstruturas de controle.\nResolução de exercícios.', 381),
(5628, '2013-05-08 15:00:00', 2, 'OTR', 'Teste 1.1.\n', 381),
(5629, '2013-05-13 15:00:00', 2, 'AEX,AP', 'Introdução a linguagem de programação C.\n', 381),
(5630, '2013-05-15 15:00:00', 6, 'AEX,AP', 'Prática de programação com a linguagem de programação C.\n', 381),
(5631, '2013-05-27 15:00:00', 2, 'OTR', 'Teste 1.2\n', 381),
(5632, '2013-05-29 15:00:00', 2, 'AEX,AP', 'Revisão.\n', 381),
(5633, '2013-06-03 15:00:00', 2, 'OTR', 'Avaliação 1.\n', 381),
(5634, '2013-06-05 15:00:00', 8, 'AEX,AP', 'Estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes. \n', 381),
(5635, '2013-06-19 15:00:00', 2, 'OTR', 'Teste 2.1.\n', 381),
(5636, '2013-06-24 15:00:00', 4, 'AEX,AP', 'Funções.\n\n', 381),
(5637, '2013-07-01 15:00:00', 4, 'AEX,AP', 'Funções e Recursividade.\n', 381),
(5638, '2013-07-08 15:00:00', 6, 'AEX,AP', 'Estruturas.\n', 381),
(5639, '2013-07-17 15:00:00', 2, 'OTR', 'Teste 2.2.\n', 381),
(5640, '2013-07-22 15:00:00', 2, 'AEX,AP', 'Revisão.\n', 381),
(5641, '2013-07-24 15:00:00', 2, 'OTR', 'Avaliação 2.\n', 381),
(5642, '2013-07-29 15:00:00', 2, 'OTR', 'Entrega dos resultados.\n', 381),
(5643, '2013-04-16 15:00:00', 2, 'AEX', 'Apresentação da Disciplina.\n', 380),
(5644, '2013-04-19 15:00:00', 4, 'AEX', 'Conceitos programação imperativa.\nParadigmas de programação.\nRevisão da linguagem de programação C.\n', 380),
(5645, '2013-04-26 15:00:00', 2, 'AEX,AP', 'Ambiente integrado de desenvolvimento: edição, compilação, empacotamento e distribuição.\n', 380),
(5646, '2013-04-30 15:00:00', 2, 'RE', 'Resolução de exercícios.\n', 380),
(5647, '2013-05-03 15:00:00', 2, 'OTR', 'Teste 1.1.\n', 380),
(5648, '2013-05-07 15:00:00', 2, 'AEX', 'Revisão de vetores e matrizes.\n', 380),
(5649, '2013-05-10 15:00:00', 2, 'RE', 'Resolução de exercícios.\n', 380),
(5650, '2013-05-14 15:00:00', 2, 'AEX', 'Estrutura de dados heterogêneas.\n', 380),
(5651, '2013-05-17 15:00:00', 2, 'RE', 'Resolução de exercícios.\n', 380),
(5652, '2013-05-21 15:00:00', 2, 'OTR', 'Teste 1.2.\n', 380),
(5653, '2013-05-24 15:00:00', 2, 'AEX,AP', 'Revisão.\n', 380),
(5654, '2013-05-28 15:00:00', 2, 'OTR', 'Avaliação 1.\n', 380),
(5655, '2013-06-04 15:00:00', 4, 'AEX', 'Funções.\n', 380),
(5656, '2013-06-07 15:00:00', 2, 'RE', 'Resolução de exercícios.\n', 380),
(5657, '2013-06-11 15:00:00', 4, 'AEX', 'Números pseudo-aleatórios. \nCaracteres.\n', 380),
(5658, '2013-06-14 15:00:00', 2, 'AEX,AP', 'Variáveis indexadas.\n', 380),
(5659, '2013-06-18 15:00:00', 2, 'RE', 'Resolução de exercícios.\n', 380),
(5660, '2013-06-21 15:00:00', 2, 'OTR', 'Teste 2.1.\n', 380),
(5661, '2013-06-25 15:00:00', 2, 'AEX', 'Organização de um programa em C.\n', 380),
(5662, '2013-06-28 15:00:00', 2, 'RE', 'Resolução de exercícios.\n', 380),
(5663, '2013-07-02 15:00:00', 2, 'AEX', 'Strings e variáveis multi-dimensionais.\n', 380),
(5664, '2013-07-05 15:00:00', 2, 'RE', 'Resolução de exercícios.\n', 380),
(5665, '2013-07-09 15:00:00', 2, 'AEX', 'Recursividade.\n', 380),
(5666, '2013-07-12 15:00:00', 2, 'RE', 'Resolução de exercícios.\n', 380),
(5667, '2013-07-16 15:00:00', 2, 'AEX', 'Manipulação de arquivos.\n', 380),
(5668, '2013-07-19 15:00:00', 2, 'OTR', 'Teste 2.2.\n', 380),
(5669, '2013-07-23 15:00:00', 2, 'AEX,AP', 'Revisão.\n', 380),
(5670, '2013-07-26 15:00:00', 2, 'OTR', 'Avaliação 2.\n', 380),
(5671, '2013-07-30 15:00:00', 2, 'OTR', 'Entrega dos resultados.\n', 380),
(5673, '2013-07-16 15:00:00', 4, 'AEX,AP', 'Modularização', 335),
(5675, '2013-09-09 15:00:00', 10, 'AEX,AP', 'Objetos distribuídos: chamada de procedimentos remotos (RPC); modelo de objetos\ndistribuídos (interfaces, referência de objeto, operações, exceções, chamada de métodos\nremotos); uso e implementação de RMI; plataformas de middleware e processamento\ndistribuído aberto; Java RMI; CORBA; eventos e notificações.', 370),
(5676, '2013-10-17 15:00:00', 2, 'AEX,AP', 'Serviços de nomes e serviços de diretórios: publicação e descoberta de serviços, principais tecnologias disponíveis.', 370),
(5679, '2013-03-25 15:00:00', 6, 'AEX,RE,TG,AP', 'Apresentação, conteúdo, noções de complexidade', 383),
(5680, '2013-04-08 15:00:00', 18, 'AEX,RE,TG,AP', 'Ordenação de dados', 383),
(5681, '2013-05-16 15:00:00', 2, 'OTR', 'Avaliação teórica 1.', 383),
(5682, '2013-05-20 15:00:00', 16, 'AEX,RE,TG,AP', 'Pesquisa de dados.', 383),
(5683, '2013-06-24 15:00:00', 10, 'AEX,RE,TG,AP', 'Árvores', 383),
(5684, '2013-07-11 15:00:00', 2, 'OTR', 'Avaliação teórica 2.', 383),
(5685, '2013-07-15 15:00:00', 6, 'TG,SE', 'Preparação e apresentação de seminários.', 383),
(5686, '2013-03-25 15:00:00', 8, 'AEX', '1. Introdução aos Sistemas Operacionais', 384),
(5687, '2013-04-04 15:00:00', 24, 'AEX e AP', '2. Gerência de Processos', 384),
(5688, '2013-05-16 15:00:00', 20, 'AEX e AP', '3. Gerência de Memória', 384),
(5689, '2013-06-17 15:00:00', 8, 'AEX', '4. Entrada/Saída', 384),
(5690, '2013-08-22 15:00:00', 8, 'AEX, RE, ED, AP', 'Introdução a Estrutura de Dados\n	- Conceitos de Programação Estruturada\n	- Tipos primitivos, tipos abstratos de dados\n	- Revisão de comandos, linguagem c\n	- Introdução a vetores e matrizes\n	- Características de Alocação Sequencial e Ligada', 385),
(5691, '2013-09-05 15:00:00', 6, 'AEX, RE, ED, AP', 'Listas lineares\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada', 385),
(5692, '2013-09-16 15:00:00', 8, 'AEX, RE, ED, AP', 'Pilhas\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada', 385),
(5693, '2013-10-07 15:00:00', 8, 'AEX, RE, ED, AP', 'Filas\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada', 385),
(5694, '2013-10-21 14:00:00', 10, 'AEX,RE,ED,AP', 'Grafos\n	- Conceitos\n	- Operações\n	- Representação matricial\n	- Operações em alocação sequencial e ligada', 385),
(5695, '2013-11-14 14:00:00', 8, 'AEX,RE,ED,AP', 'Tópicos avançados\n	- Listas Circulares e Duplamente Ligadas\n	- Estrutura em árvore', 385),
(5696, '2013-11-28 14:00:00', 8, 'TG', 'Implementação de um trabalho envolvendo o conteúdo ministrado.', 385),
(5697, '2013-08-23 15:00:00', 18, 'AEX,AP', 'Introdução a Engenharia de Software\n	- Conceitos de Engenharia de Software\n	- Históricos e Necessidades da Engenharia de Software\n	- Conceitos de produto de software e processo de software\n	- Técnicas e Ferramentas Case', 386),
(5698, '2013-09-23 15:00:00', 14, 'AEX,AP', 'Gerência de Projetos de Software\n	- Planejamento do Projeto de Software\n	- Medidas de Qualidade\n	- Gestão de Riscos\n	- Acompanhamento de Projetos', 386),
(5699, '2013-11-11 14:00:00', 10, 'AEX,AP', 'Projeto de Software\n	- Engenharia de Requisitos\n	- Documentação', 386),
(5700, '2013-03-27 15:00:00', 2, 'AEX', 'Apresentação da Disciplina:\n\n• Identificação Professor e Aluno\n• Programa do Curso\n• Lista de Chamada\n• Provas (critérios de avaliações) Introdução\n\n1.Introdução\n    1.1. Conceitos Preliminares\n    1.2. Alfabetos e Linguagens\n    1.3. Linguagens e Máquinas', 387),
(5701, '2013-04-03 15:00:00', 6, 'AEX/RE', '2. Autômatos Finitos\n	2.1. Autômatos Finitos Determinísticos.\n	2.2. Autômatos Finitos Não - Determinísticos\n	2.3. Autômatos Finitos Não-Determinísticos com movimentos vazios \n	2.4. Minimização de Autômatos Finitos\n        2.5. Equivalência entre Autômatos  ', 387),
(5702, '2013-05-08 15:00:00', 6, 'AEX/RE', '3. Linguagens Regulares\n	3.1. Expressões Regulares\n	3.2. Autômatos Finitos e Expressões Regulares. \n	3.3. Propriedades das Linguagens Regulares   ', 387),
(5703, '2013-05-29 15:00:00', 2, 'OTR', '1ª Avaliação', 387),
(5704, '2013-06-05 15:00:00', 6, 'AEX/RE', '4. Linguagens Livres de Contexto Gramáticas Livres de Contexto\n        4.1. Árvores de análise sintática \n        4.2. Ambigüidade em gramáticas e linguagens\n        4.3. Propriedades das Linguagens Livres de Contexto \n        4.4. Formas Normais ', 387),
(5705, '2013-07-03 15:00:00', 4, 'AEX/RE', '5. Máquinas de Turing \n	5.1. Definição formal e exemplos \n        5.2.Técnicas de programação, Extensões das máquinas de Turing \n        5.3. Reconhecimento de Linguagens \n        5.4. Hierarquia de Chomsky ', 387),
(5706, '2013-07-17 15:00:00', 2, 'RE', 'Revisão do conteúdo ministrado e resolução de exercícios.', 387),
(5707, '2013-07-24 15:00:00', 2, 'OTR', '2ª Avaliação', 387),
(5708, '2013-04-06 15:00:00', 3, 'AEX', 'Fases da compilação.', 388),
(5709, '2013-03-27 15:00:00', 2, 'AEX', 'Entrega  do  programa  de  curso  e  discussão  sobre  o\nescopo  da  disciplina.', 388),
(5710, '2013-04-03 15:00:00', 2, 'AEX', 'Introdução à compilação.', 388),
(5711, '2013-04-10 15:00:00', 4, 'AEX', 'Ambigüidade.', 388),
(5712, '2013-04-17 15:00:00', 4, 'AEX', 'Relações sobre gramáticas. ', 388),
(5713, '2013-04-27 15:00:00', 4, 'AEX', 'Análise léxica.', 388),
(5714, '2013-05-04 15:00:00', 8, 'AEX,AP', 'Análise sintática ascendente e descendente. ', 388),
(5715, '2013-05-11 15:00:00', 2, 'AEX', 'Exercícios de revisão para Prova', 388),
(5716, '2013-05-15 15:00:00', 2, 'OTR', 'Prova P1', 388),
(5717, '2013-05-18 15:00:00', 2, 'AEX', 'Tabelas de símbolos. ', 388),
(5718, '2013-05-22 15:00:00', 6, 'AEX, AP', 'Análise semântica e geração de código para uma máquina virtual. ', 388),
(5719, '2013-06-01 15:00:00', 4, 'AEX,AP', 'Introdução à otimização de código.', 388),
(5722, '2013-07-31 15:00:00', 2, 'OTR', 'Prova 2', 388),
(5723, '2013-03-28 15:00:00', 10, 'AEX', '1. Caracterização e Modelos de Sistema para SD', 389),
(5724, '2013-04-20 15:00:00', 4, 'AEX', '2. Comunicação Interprocessos', 389),
(5725, '2013-04-27 15:00:00', 10, 'AEX', '3. Invocação Remota e Sistemas de Objetos Distribuídos', 389),
(5726, '2013-05-11 15:00:00', 6, 'AEX,AP', '4. Serviços Web', 389),
(5727, '2013-05-23 15:00:00', 6, 'AEX', '5. Comunicação Indireta', 389),
(5728, '2013-06-13 15:00:00', 4, 'AEX', '6. Serviços de Nomes', 389),
(5729, '2013-06-20 15:00:00', 4, 'AEX', '7. Tempo e Estado Global', 389),
(5730, '2013-06-27 15:00:00', 6, 'AEX', '8. Coordenação e Acordo', 389),
(5731, '2013-07-06 15:00:00', 10, 'AEX, AP', '9. Transações e Controle de Concorrência', 389),
(5732, '2013-03-28 15:00:00', 4, 'AEX/AP/T', 'Conceitos Básicos de Computação. ', 390),
(5733, '2013-03-28 15:00:00', 4, 'AEX/AP/T', 'Conceitos Básicos de Computação. ', 391),
(5734, '2013-03-28 15:00:00', 2, 'AEX/AP', 'Apresentação da disciplina', 390),
(5735, '2013-03-28 15:00:00', 2, 'AEX/AP', 'Apresentação da disciplina', 391),
(5736, '2013-04-04 15:00:00', 2, 'AEX', 'Noções de Lógica, Lógica de Programação, Algoritmo.', 390),
(5737, '2013-04-04 15:00:00', 2, 'AEX', 'Noções de Lógica, Lógica de Programação, Algoritmo.', 391),
(5738, '2013-04-11 15:00:00', 16, 'AEX/AP/RE/T', 'Expressões;\nComandos;\nEstruturas de Controle. Sequencial. Seleção (Simples, Composta, Encadeada, Múltipla Escolha)', 390),
(5739, '2013-04-11 15:00:00', 16, 'AEX/AP/RE/T', 'Expressões;\nComandos;\nEstruturas de Controle. Sequencial. Seleção (Simples, Composta, Encadeada, Múltipla Escolha)', 391),
(5740, '2013-05-16 15:00:00', 2, 'OTR', 'Prova 1', 390),
(5741, '2013-05-16 15:00:00', 2, 'OTR', 'Prova 1', 391),
(5742, '2013-06-13 15:00:00', 2, 'OTR', 'Prova 2', 390),
(5743, '2013-06-13 15:00:00', 2, 'OTR', 'Prova 2', 391),
(5744, '2013-06-20 15:00:00', 14, 'AEX/AP/RE/T', 'Estruturas de Dados Homogêneas (Vetores e Matrizes)', 391),
(5745, '2013-06-20 15:00:00', 14, 'AEX/AP/RE/T', 'Estruturas de Dados Homogêneas (Vetores e Matrizes)', 390),
(5746, '2013-07-11 15:00:00', 6, 'AEX/AP/RE/T', 'Modularização', 391),
(5747, '2013-07-18 15:00:00', 2, 'OTR', 'Prova 3', 391),
(5748, '2013-07-18 15:00:00', 2, 'OTR', 'Prova 3', 390),
(5749, '2013-05-23 15:00:00', 14, 'AEX/AP/RE/T', 'Estruturas de Controle. Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)', 391),
(5750, '2013-05-23 15:00:00', 14, 'AEX/AP/RE/T', 'Estruturas de Controle. Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)', 390),
(5751, '2013-07-11 15:00:00', 6, 'AEX/AP/RE/T', 'Modularização', 390),
(5752, '2013-08-20 11:00:00', 2, 'AEX', 'Apresentação da Disciplina: Identificação; Ementa; Conteúdo Programático; Objetivos; Procedimentos Didáticos; Avaliação da Aprendizagem; Bibliografias.', 392),
(5753, '2013-08-27 11:00:00', 2, 'AEX', 'Visão sobre algoritmos e linguagens de programação.', 392),
(5754, '2013-09-03 11:00:00', 2, 'AEX', 'Elementos Fundamentais da Construção de Algoritmos: Tipo de Dados; Formação de Identificadores; Constantes; Variáveis; Comando de Atribuição; Comandos de Entrada e Saída.', 392),
(5755, '2013-09-10 11:00:00', 2, 'AEX', 'Expressões e Operadores: Expressões Aritméticas; Expressões Lógicas.', 392),
(5756, '2013-09-17 11:00:00', 2, 'AEX', 'Estrutura Sequencial.', 392),
(5757, '2013-09-24 11:00:00', 2, 'AEX,RE', 'Estruturas de Seleção.', 392),
(5758, '2013-10-22 11:00:00', 2, 'AEX,RE', 'Vetores.', 392),
(5763, '2013-08-21 15:00:00', 2, 'AEX', 'Introdução: apresentação da disciplina e do plano de ensino.', 393),
(5764, '2013-08-26 15:00:00', 10, 'AEX,RE,AP', 'Conceitos Básicos', 393),
(5765, '2013-09-30 15:00:00', 6, 'AEX,RE,AP', 'Exercícios preparatórios para prova 1', 393),
(5766, '2013-10-14 15:00:00', 2, 'OTR', 'Prova 1', 393),
(5767, '2013-10-16 15:00:00', 6, 'AEX,RE,AP', 'Estrutura de Repetição', 393),
(5768, '2013-10-30 14:00:00', 2, 'AEX, RE', 'Vetor', 393),
(5769, '2013-11-20 14:00:00', 2, 'OTR', 'Prova 2', 393),
(5770, '2013-11-25 14:00:00', 2, 'AEX,RE', 'Matriz', 393),
(5771, '2013-11-27 14:00:00', 4, 'AEX,RE,AP', 'Funções', 393),
(5774, '2013-08-21 15:00:00', 6, 'AEX/RE', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados', 394),
(5775, '2013-08-30 15:00:00', 24, 'AEX/RE/AP/TG', '2. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacionais\n- Linguagens para BD relacionais (álgebra relacional e cálculo relacional)\n- SQL', 394),
(5776, '2013-09-11 15:00:00', 2, 'OTR', '1ª Prova', 394),
(5777, '2013-10-27 14:00:00', 10, 'AEX/RE/AP/TG', '3. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML', 394),
(5778, '2013-10-18 15:00:00', 2, 'OTR', '2ª Prova', 394),
(5779, '2013-11-08 14:00:00', 14, 'AEX/RE/APR/TG', '4. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 394),
(5780, '2013-11-29 14:00:00', 2, 'OTR', '3ª Prova', 394),
(5781, '2013-03-26 15:00:00', 2, 'AEX', 'Apresentação: Definição da estrutura, escopo e foco do curso. Aula sobre caracterização de sistemas distribuídos.', 395),
(5782, '2013-03-28 15:00:00', 2, 'AEX', 'Caracterização de sistemas distribuídos', 395),
(5783, '2013-04-02 15:00:00', 4, 'AEX', 'Modelos de sistema: arquitetura geral de sistemas distribuídos (middleware, cliente-servidor,\npeer-to-peer, agentes móveis); requisitos de projeto (desempenho, qualidade de serviço,\nconfiabilidade, transparência); modelos de interação; modelos de falha; modelos de segurança.', 395),
(5784, '2013-04-25 15:00:00', 2, 'AEX', 'Comunicação em Grupo – Multicast IP', 395),
(5785, '2013-04-30 15:00:00', 10, 'AEX,AP', 'Objetos distribuídos: chamada de procedimentos remotos (RPC); modelo de objetos\ndistribuídos (interfaces, referência de objeto, operações, exceções, chamada de métodos\nremotos); uso e implementação de RMI; plataformas de middleware e processamento\ndistribuído aberto; Java RMI; CORBA; eventos e notificações.', 395),
(5786, '2013-05-16 15:00:00', 2, 'OTR', 'Prova', 395),
(5787, '2013-05-21 15:00:00', 2, 'AEX', 'Middleware: Implementação de RMI (cont.), RPC, Modelo de Eventos, Exemplo com Java RMI', 395),
(5788, '2013-05-23 15:00:00', 6, 'AEX', 'Arquiteturas MOM e JMS', 395),
(5789, '2013-06-03 15:00:00', 8, 'AEX,AP', 'Serviços de nomes e serviços de diretórios: publicação e descoberta de serviços, principais tecnologias disponíveis.', 395),
(5790, '2013-06-18 15:00:00', 10, 'SE', 'Seminários – Arquiteturas Tolerantes a falha', 395),
(5791, '2013-07-04 15:00:00', 10, 'AEX', 'Replicação, transações e tolerância a falhas: comunicação confiável; replicação e\nmanutenção de consistência entre réplicas; transações distribuídas; comunicação de grupo.', 395),
(5792, '2013-07-23 15:00:00', 2, 'OTR', 'Prova final', 395),
(5793, '2013-10-21 14:00:00', 10, 'AEX AP', 'Controle de Qualidade\n	- Modelos de Qualidade\nGerencia de Configuração', 386),
(5794, '2013-12-06 14:00:00', 8, 'AEX AP', 'Tópicos avançados em engenharia de Software\n	- Métodos Formais e Reengenharia', 386),
(5795, '2013-06-08 15:00:00', 15, 'AP,TG', 'Acompanhamento do trabalho prático e avaliação  dos  trabalhos  finais.', 388),
(5796, '2013-03-27 15:00:00', 2, 'AEX', 'Apresentação da Disciplina:\nIdentificação;\nEmenta;\nConteúdo Programático;\nObjetivos;\nProcedimentos Didáticos;\nAvaliação da Aprendizagem;\nBibliografias.', 396),
(5797, '2013-04-03 15:00:00', 2, 'AEX,RE,ED', 'Conceitos Preliminares:\nNoções de lógica.\nLógica de Programação. \n', 396),
(5798, '2013-04-04 15:00:00', 4, 'AEX,RE,TG', 'Construção de Algoritmos: Elementos Fundamentais\nTipo de Dados;\nFormação de Identificadores;\nConstantes;\nVariáveis;\nComando de Atribuição;\nComandos de Entrada e Saída.\nExpressões e Operadores\nExpressões Aritméticas\nExpressões Lógicas\nEstrutura Seqüencial', 396),
(5799, '2013-04-11 15:00:00', 16, 'RE,TG,AEX,AP', 'Estruturas de Seleção:\nSimples;\nCompostas;\nEstruturas de Seleção:\nEncadeada\nHeterogênea;\nHomogênea.\nMúltipla Escolha.', 396),
(5800, '2013-05-16 15:00:00', 22, 'AEX,AP,RE,TG', 'Estruturas de Repetição\nCom Teste no Início, \n Com Teste no final \n Com variável de controle\n Estruturas de repetição encadeada\n', 396),
(5801, '2013-06-27 15:00:00', 18, 'AEX,RE,TG,AP', 'Estruturas de Dados\nVariáveis Compostas Homogêneas (Vetores e Matrizes)\nModularização\n', 396),
(5802, '2013-03-25 15:00:00', 6, 'AEX/RE', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados', 397),
(5803, '2013-04-04 15:00:00', 24, 'AEX/RE/AP/TG', '2. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacionais\n- Linguagens para BD relacionais (álgebra relacional e cálculo relacional)\n- SQL', 397),
(5804, '2013-05-23 15:00:00', 2, 'OTR', '1ª Prova', 397),
(5805, '2013-05-27 15:00:00', 10, 'AEX/RE/AP/TG', '3. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML', 397),
(5806, '2013-06-17 15:00:00', 2, 'OTR', '2ª Prova', 397),
(5807, '2013-06-20 15:00:00', 14, 'AEX/RE/APR/TG', '4. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 397),
(5808, '2013-07-22 15:00:00', 2, 'OTR', '3ª Prova', 397),
(5809, '2013-03-25 15:00:00', 6, 'AEX/RE', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados', 398),
(5810, '2013-04-04 15:00:00', 28, 'AEX/RE/AP/TG', '2. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacionais\n- Linguagens para BD relacionais (álgebra relacional e cálculo relacional)\n- SQL', 398),
(5811, '2013-05-23 15:00:00', 2, 'OTR', '1ª Prova', 398),
(5812, '2013-05-27 15:00:00', 10, 'AEX/RE/AP/TG', '3. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML', 398),
(5813, '2013-06-17 15:00:00', 2, 'OTR', '2ª Prova', 398),
(5814, '2013-06-20 15:00:00', 14, 'AEX/RE/APR/TG', '4. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 398),
(5815, '2013-07-22 15:00:00', 2, 'OTR', '3ª Prova', 398),
(5816, '2013-08-28 15:00:00', 2, 'AEX/RE', '1.3. Alfabetos e Linguagens', 236),
(5817, '2013-10-31 14:00:00', 2, 'OTR', 'Prova 1', 283),
(5818, '2013-12-12 14:00:00', 2, 'OTR', 'Prova 2', 283),
(5819, '2013-08-20 15:00:00', 4, 'AEX', 'Apresentação do programa da disciplina: objetivos geral e específicos, explanação sobre os conteúdos a serem abordados, critérios de avaliação, bibliografia, motivação e expectativas para a disciplina.\n\nFundamentos: desafios para a Engenharia de Software no século XXI, Web de Dados vs. Web Semântica, cenários motivacionais, metadados e arquitetura em camadas.', 267),
(5820, '2013-08-27 15:00:00', 4, 'AEX, RE', 'Fundamentos: metadados e arquitetura em camadas.\n\nPadrões URI, XML, Esquema XML e Espaços de nomes XML.', 267),
(5821, '2013-09-03 15:00:00', 4, 'AEX, AP', 'Ferramentas para manipulação de padrões URI, XML, Esquema XML e Espaços de nomes XML.\n\nPadrão RDF: modelo de triplas e diferentes sintaxes de serialização.', 267),
(5822, '2013-09-10 15:00:00', 4, 'AEX, AP', 'Padrão RDF: modelo de triplas e diferentes sintaxes de serialização.\n\nFerramentas para manipulação de dados RDF: criação, leitura, escrita, consulta e visualização.', 267),
(5823, '2013-09-17 15:00:00', 4, 'AEX, AP', 'Ferramentas para manipulação de dados RDF: criação, leitura, escrita, armazenamento e visualização.\n\nConsulta de dados RDF: sintaxe da linguagem SPARQL e API Jena para SPARQL.', 267),
(5824, '2013-09-24 15:00:00', 4, 'AP', 'Manipulação de dados RDF: criação, leitura, escrita e visualização.\n\nConsulta de dados RDF: sintaxe da linguagem SPARQL e API Jena para SPARQL.', 267),
(5825, '2013-10-01 15:00:00', 2, 'AEX', 'Representação de conhecimento: ontologias, exemplos e metodologia para construção de ontologias.', 267),
(5826, '2013-10-01 15:00:00', 2, 'OTR', 'Prova 1 de caráter objetivo, discursivo e/ou teórico-prático.', 267),
(5827, '2013-10-08 15:00:00', 8, 'AEX', 'Padrões de ontologias para a Web: RDFS e OWL.\n\nFerramentas para manipulação de ontologias: edição, visualização, instanciação, inferência e programação.', 267),
(5828, '2013-10-22 14:00:00', 4, 'AEX, AP', 'Como construir aplicações para a Web Semântica: processo de software, metodologia, representação de conhecimento, arcabouços, máquinas de inferência, bases de ontologias, metadados.', 267),
(5829, '2013-10-29 14:00:00', 4, 'AP', 'Prova 2 de caráter teórico-prático.', 267),
(5830, '2013-11-05 14:00:00', 16, 'AP, TG', 'Desenvolvimento de aplicação simples para a Web Semântica.', 267),
(5831, '2013-12-03 14:00:00', 4, 'SE, TG', 'Apresentação de trabalhos de desenvolvimento de aplicação simples para a Web Semântica.', 267),
(5832, '2013-12-03 14:00:00', 6, 'AEX, RE', 'Teoria dos Números: Resolução de equação modular e teorema chines do resto.', 216),
(5833, '2013-12-17 14:00:00', 2, 'OTR', 'Prova substitutiva', 216),
(5834, '2013-08-22 15:00:00', 6, 'AEX, AP', 'Conceitos Preliminares', 292),
(5835, '2013-09-04 15:00:00', 6, 'AEX, AP', 'Princípios de Projeto de Interfaces Homem-computador', 292),
(5836, '2013-09-19 15:00:00', 6, 'AEX, AP', 'Métodos de Projeto de Interfaces Homem-computador', 292),
(5837, '2013-10-02 15:00:00', 6, 'AEX, AP', 'Avaliação de Interfaces Homem-computador', 292),
(5838, '2013-10-10 15:00:00', 6, 'AEX, AP', 'Visão geral de ferramentas de desenvolvimento de interfaces homem-computador.', 292),
(5839, '2013-10-31 14:00:00', 32, 'AEX, AP', 'Padrões do Design da Interação', 292),
(5840, '2013-08-22 11:00:00', 2, 'AP', 'Introdução ao Moodle e ao SICAS.', 392),
(5841, '2013-08-29 11:00:00', 2, 'AP', 'Exercicios sobre variaveis e sequencias', 392),
(5842, '2013-09-05 11:00:00', 2, 'AP', 'Exercicios', 392),
(5843, '2013-09-12 11:00:00', 2, 'AP', 'Exercicios', 392),
(5844, '2013-09-19 11:00:00', 2, 'AP', 'Exercicios', 392),
(5845, '2013-09-26 11:00:00', 2, 'AP', 'Exercicios', 392),
(5846, '2013-10-08 11:00:00', 2, 'AEX', 'Estruturas de Repetição.', 392),
(5847, '2013-10-03 11:00:00', 2, 'AP', 'Exercicios', 392),
(5848, '2013-10-10 11:00:00', 2, 'AP', 'Exercicios', 392),
(5849, '2013-10-17 11:00:00', 2, 'AP', 'Exercicios', 392),
(5850, '2013-10-31 12:00:00', 2, 'AP', 'Exercicios', 392),
(5851, '2013-11-07 12:00:00', 2, 'AP', 'Exercicios', 392),
(5852, '2013-11-14 12:00:00', 2, 'AP', 'Exercicios', 392),
(5853, '2013-11-21 12:00:00', 2, 'AP', 'Exercicios', 392),
(5854, '2013-11-28 12:00:00', 2, 'AP', 'Exercicios', 392),
(5855, '2013-12-05 12:00:00', 2, 'AP', 'Exercicios', 392),
(5856, '2013-12-03 12:00:00', 2, 'AEX', 'Avaliação 3', 392),
(5857, '2013-11-05 12:00:00', 2, 'AEX', 'Avaliação 2', 392),
(5858, '2013-10-01 11:00:00', 2, 'AEX', 'Avaliação 1', 392),
(5859, '2013-11-12 12:00:00', 2, 'AEX', 'Linguagem C', 392),
(5860, '2013-11-19 12:00:00', 2, 'AEX', 'Matrizes', 392),
(5861, '2013-11-26 12:00:00', 2, 'AEX', 'Funções', 392),
(5862, '2013-12-05 12:00:00', 2, 'AP', 'Exercicios', 392),
(5863, '2013-09-13 15:00:00', 4, 'AEX , RE , TG , AP', 'Ordenação de dados: Quick Sort e Heap Sort.', 328),
(5864, '2013-08-30 15:00:00', 4, 'AEX , RE', 'Ordenação de dados: Seleção e Inserção.', 328),
(5865, '2013-09-27 15:00:00', 4, 'AEX , RE , TG , AP', 'Pesquisa de dados: Binária.', 328),
(5866, '2013-11-22 14:00:00', 4, 'AEX , RE , TG , AP', 'Pesquisa secundária: Acesso sequencial indexado.', 328),
(5867, '2013-11-29 14:00:00', 4, 'AEX , RE , TG , AP', 'Pesquisa secundária: Árvore de pesquisa.', 328),
(5868, '2013-12-12 14:00:00', 4, 'OTR', 'Entrega de avaliações.', 328),
(5869, '2013-11-08 14:00:00', 5, 'AEX , RE , TG , AP', 'Hashing.', 328),
(5870, '2013-08-26 15:00:00', 1, 'AEX', 'Relação com engenharia de sistemas; visão geral de sofware; crise do software; surgimento da engenharia de software; processos do ciclo de vida de software; introducao a engenharia de requisitos\n', 249),
(5871, '2013-09-02 15:00:00', 1, 'AEX', 'Técnicas de elicitação de Requisitos\n', 249),
(5872, '2013-09-05 15:00:00', 1, 'ED, AP, TG', 'Prática de Especificação de Requisitos: definição do escopo do produto\n', 249),
(5873, '2013-09-09 15:00:00', 1, 'AEX', 'Definições e taxonomias de Requisitos - Funcionais\n', 249),
(5874, '2013-09-12 15:00:00', 3, 'ED, AP, TG', 'Prática de Especificação de Requisitos: requisitos funcionais\n', 249),
(5877, '2013-09-23 15:00:00', 1, 'OTR', 'Primeira avaliação (P1)', 249),
(5878, '2013-09-26 15:00:00', 1, 'AEX', 'Definições e taxonomias de Requisitos - não funcionais\n', 249),
(5879, '2013-09-30 15:00:00', 2, 'ED, AP, TG', 'Prática de Especificação de Requisitos: definição dos requisitos nao funcionais\n', 249),
(5881, '2013-10-07 15:00:00', 2, 'SE, TG', 'Apresentação do primeiro trabalho (TG1)', 249),
(5883, '2013-10-14 15:00:00', 1, 'AEX', 'Definições de Casos de Uso - diagrama de casos de uso\n', 249),
(5884, '2013-10-17 15:00:00', 2, 'ED, AP, TG', 'Prática Diagramas de casos de uso\n', 249),
(5886, '2013-10-24 15:00:00', 1, 'AEX', 'Definições de Casos de Uso - detalhamento de casos de uso \n', 249),
(5887, '2013-10-28 15:00:00', 2, 'ED, AP, TG', 'Prática Diagramas de casos de uso - revisao com cada grupo\n', 249),
(5888, '2013-11-04 15:00:00', 1, 'OTR', 'Segunda avaliação (P2)', 249),
(5889, '2013-11-07 15:00:00', 1, 'AEX', 'Definições de Diagramas de Atividades e Diagramas de Raias\n', 249),
(5890, '2013-11-11 15:00:00', 1, 'ED, AP, TG', 'Prática de Especificação de Requisitos: diagrama de raias\n', 249),
(5891, '2013-11-14 15:00:00', 1, 'AEX', 'Conceitos de Modelagem de Dados e Classes de Análise\n', 249),
(5892, '2013-11-18 15:00:00', 1, 'ED, AP, TG', 'Prática de Especificação de Requisitos: modelagem de dados - tabelas\n', 249),
(5893, '2013-11-21 15:00:00', 1, 'SE, TG', 'Revisão dos trabalhos - discussão em grupo\n', 249),
(5894, '2013-11-25 15:00:00', 3, 'SE, TG', 'Apresentação do segundo trabalho (TG2)', 249),
(5895, '2013-12-05 15:00:00', 1, 'OTR', 'Terceira avaliação (P3)', 249),
(5896, '2013-12-09 15:00:00', 1, 'OTR', 'Correção de provas e entrega de notas\n', 249),
(5897, '2013-09-11 15:00:00', 2, 'AEX', 'Definicoes e taxonomias de requisitos - FUNCIONAIS\n', 271),
(5898, '2013-09-18 15:00:00', 2, 'AEX', 'Definicoes e taxonomias de requisitos - NAO FUNCIONAIS\n', 271),
(5899, '2013-09-20 15:00:00', 2, 'ED, AP, TG', 'Pratica requisitos nao funcionais', 271),
(5900, '2013-10-04 15:00:00', 2, 'AEX', 'Modelagem de Análise - detalhamento dos casos de uso\n', 271),
(5901, '2013-10-09 15:00:00', 2, 'ED, AP, TG', 'Prática de engenharia de Software: Modelagem de Análise - caso de uso', 271),
(5902, '2013-10-18 15:00:00', 6, 'AEX', 'Modelagem de Análise - diagrama de atividades, raia, sequencia, diagrama de classes e modelo de dados - Pratica Diagrama de RAIA\n', 271),
(5903, '2013-11-20 14:00:00', 2, 'SE, TG', 'Entrega TG2 - Raia + projeto interface\n', 271),
(5904, '2013-12-04 14:00:00', 4, 'AP', 'Seminários', 224),
(5905, '2013-12-11 14:00:00', 2, 'RE/AP', 'Revisão e Resolução de exercícios', 224),
(5906, '2013-09-11 15:00:00', 4, 'AEX/AP', 'Modelo de Software em Camadas', 224),
(5907, '2013-09-19 15:00:00', 2, 'AEX', 'Técnicas, Níveis e Tipos de Teste de Software.', 217),
(5908, '2013-09-23 15:00:00', 2, 'OTR', 'Primeira Avaliação (A1).', 217),
(5909, '2013-09-26 15:00:00', 2, 'AEX', 'Critérios de Teste de Software.', 217),
(5910, '2013-09-30 15:00:00', 2, 'AEX', 'Critérios de Teste de Software.', 217),
(5911, '2013-10-03 15:00:00', 2, 'AEX', 'Critérios de Teste de Software.', 217),
(5912, '2013-10-07 15:00:00', 2, 'AEX', 'Ambiente de Teste de Software.', 217),
(5913, '2013-10-10 15:00:00', 2, 'AEX', 'Ambiente de Teste de Software.', 217),
(5914, '2013-10-17 15:00:00', 2, 'AEX', 'Análise de Riscos.', 217),
(5915, '2013-10-21 14:00:00', 2, 'AEX', 'Análise de Riscos.', 217),
(5916, '2013-10-31 14:00:00', 2, 'OTR', 'Segunda Avaliação (A2).', 217),
(5917, '2013-11-04 14:00:00', 2, 'AEX', 'Planejamento e Execução dos Testes.', 217),
(5918, '2013-11-07 14:00:00', 2, 'AEX', 'Planejamento e Execução dos Testes.', 217),
(5919, '2013-11-11 14:00:00', 2, 'AEX', 'Planejamento e Execução dos Testes.', 217),
(5920, '2013-11-14 14:00:00', 2, 'AEX', 'Planejamento e Execução dos Testes.', 217),
(5921, '2013-11-18 14:00:00', 2, 'AEX', 'Planejamento e Execução dos Testes.', 217),
(5922, '2013-11-21 14:00:00', 2, 'AEX', 'Gestão de Defeitos.', 217),
(5923, '2013-11-25 14:00:00', 2, 'AEX', 'Gestão de Defeitos.', 217),
(5924, '2013-11-28 14:00:00', 2, 'OTR', 'Terceira Avaliação (A3).', 217),
(5925, '2013-12-05 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (Planejamento, Execução e Gestão de Defeitos).', 217),
(5926, '2013-12-09 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (Planejamento, Execução e Gestão de Defeitos).', 217),
(5927, '2013-12-12 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (Planejamento, Execução e Gestão de Defeitos).', 217),
(5928, '2013-12-16 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (Planejamento, Execução e Gestão de Defeitos).', 217),
(5929, '2013-12-19 14:00:00', 2, 'SE', 'Entrega e Apresentação de Trabalhos: Estudo de Caso (Planejamento, Execução e Gestão de Defeitos).', 217),
(5930, '2013-12-23 14:00:00', 2, 'OTR', 'Avaliação Substitutiva.', 217),
(5931, '2013-08-17 15:00:00', 4, 'AEX', 'Apresentação do programa e conceitos básico de Teoria dos grafos\n', 311),
(5932, '2013-08-24 15:00:00', 4, 'AEX/AP', 'Revisão das linguagens C/C++\n', 311),
(5933, '2013-08-31 15:00:00', 4, 'AEX/AP', 'Dígrafos e Estrutura de Dados', 311),
(5934, '2013-09-14 15:00:00', 8, 'AEX/AP', 'Busca em profundidade', 311),
(5935, '2013-09-28 15:00:00', 8, 'AEX/AP', 'Busca em largura\n', 311),
(5936, '2013-10-19 15:00:00', 4, 'OTR/AEX/AP', 'Avaliação / Ciclos e Árvores\n', 311),
(5937, '2013-11-09 14:00:00', 8, 'AEX/AP', 'Caminhos de Custo mínimo', 311),
(5938, '2013-11-23 14:00:00', 8, 'AEX/AP', 'Árvores Geradoras de custo mínimo\n', 311),
(5939, '2013-10-26 14:00:00', 4, 'AEX/AP', 'Ciclos e Árvores', 311),
(5940, '2013-12-07 14:00:00', 4, 'OTR', 'Avaliação', 311),
(5941, '2013-12-14 14:00:00', 4, 'AP', 'Seminários', 311),
(5942, '2013-12-21 14:00:00', 4, 'OTR', 'Entrega das notas e Fechamento do semestre', 311),
(5943, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação do Programa', 204),
(5944, '2013-08-26 15:00:00', 4, 'AEX', 'Revisão das linguagens C/C++\n', 204),
(5945, '2013-09-02 15:00:00', 2, 'AP', 'Aprendendo a utilizar o sistema de submissão\n', 204),
(5946, '2013-09-04 15:00:00', 8, 'AEX/AP', 'Estruturas de dados', 204),
(5947, '2013-09-18 15:00:00', 8, 'AEX/AP', 'Strings', 204),
(5948, '2013-10-02 15:00:00', 8, 'AEX/AP', 'Matemática', 204),
(5949, '2013-10-09 15:00:00', 2, 'OTR', '1ª Avaliação', 204),
(5950, '2013-10-30 14:00:00', 4, 'AEX/AP', 'Backtracking\n', 204),
(5951, '2013-11-11 14:00:00', 8, 'AEX/AP', 'Teoria dos Grafos\n', 204),
(5952, '2013-11-20 14:00:00', 8, 'AEX/AP', 'Programação Dinâmica', 204),
(5953, '2013-12-04 14:00:00', 4, 'AEX/AP', 'Geometria Computacional', 204),
(5954, '2013-12-11 14:00:00', 2, 'OTR', '2ª Avaliação', 204),
(5955, '2013-12-16 14:00:00', 4, 'TG', 'Seminários\n', 204),
(5956, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação da disciplina, motivação, objetivos, ementa, conteúdo programático, bibliografia e avaliações', 223),
(5957, '2013-08-21 15:00:00', 2, 'AP', 'Introdução à Virtualização', 223),
(5958, '2013-08-23 15:00:00', 2, 'AEX', 'Conceito de Sistemas Operacionais', 223),
(5959, '2013-08-28 15:00:00', 2, 'AEX', 'Histórico dos Sistemas Operacionais', 223),
(5960, '2013-08-28 15:00:00', 2, 'AP', 'Criação de Máquina Virtual Linux', 223),
(5961, '2013-08-30 15:00:00', 2, 'AEX', 'Histórico dos Sistemas Operacionais', 223),
(5962, '2013-09-04 15:00:00', 2, 'AEX', 'Fundamentos de Hardware e Software, Tipos de Sistemas Operacionais ', 223),
(5963, '2013-09-04 15:00:00', 2, 'AP', 'Criação de Máquina Virtual Windows', 223),
(5964, '2013-09-06 15:00:00', 2, 'AEX', 'Gerência de Processos', 223),
(5965, '2013-09-11 15:00:00', 2, 'AEX', 'Gerência de Processos (continuação)', 223),
(5966, '2013-09-11 15:00:00', 2, 'AP', 'Gerência de Processos no Linux', 223),
(5967, '2013-09-13 15:00:00', 2, 'AEX', 'Gerência de Processos (continuação)', 223),
(5968, '2013-09-18 15:00:00', 2, 'AEX', 'Gerência de Processos (continuação)', 223),
(5969, '2013-09-18 15:00:00', 2, 'AP', 'Gerência de Processos no Windows ', 223),
(5970, '2013-09-20 15:00:00', 2, 'OTR', 'Prova 01', 223),
(5971, '2013-09-25 15:00:00', 2, 'AEX', 'Gerência de Memória ', 223),
(5972, '2013-09-25 15:00:00', 2, 'AP', 'Gerência de Memória no Windows', 223),
(5973, '2013-09-27 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 223),
(5974, '2013-09-02 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 223),
(5975, '2013-10-02 15:00:00', 2, 'AP', 'Gerência de Memória no Linux ', 223),
(5976, '2013-10-04 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 223),
(5977, '2013-10-09 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 223),
(5978, '2013-10-09 15:00:00', 2, 'AP', 'Memória Virtual no Windows e no Linux', 223),
(5979, '2013-10-11 15:00:00', 2, 'AEX', 'Gerência de Memória (continuação)', 223),
(5982, '2013-10-18 15:00:00', 2, 'AEX', 'Gerência do Sistema de Arquivos', 223),
(5983, '2013-10-23 14:00:00', 2, 'AEX', 'Gerência do Sistema de Arquivos (continuação)', 223),
(5984, '2013-10-23 14:00:00', 2, 'AP', 'Sistemas de Arquivos Linux', 223),
(5985, '2013-10-25 14:00:00', 2, 'AEX', 'Gerência do Sistema de Arquivos (continuação)', 223),
(5986, '2013-10-30 14:00:00', 2, 'AEX', 'Gerência do Sistema de Arquivos (continuação)', 223),
(5987, '2013-10-30 14:00:00', 2, 'AP', 'Sistemas de Arquivos Windows', 223),
(5988, '2013-11-01 14:00:00', 2, 'AEX', 'Gerência do Sistema de Arquivos (continuação)', 223),
(5989, '2013-10-06 15:00:00', 2, 'AEX', 'Gerência de Entrada/Saída', 223),
(5990, '2013-11-06 14:00:00', 2, 'AP', 'Entrada/Saída – Windows', 223),
(5991, '2013-11-08 14:00:00', 2, 'AEX', 'Gerência de Entrada/Saída (continuação)', 223),
(5992, '2013-11-13 14:00:00', 2, 'AEX', 'Gerência de Entrada/Saída (continuação)', 223),
(5993, '2013-11-13 14:00:00', 2, 'AP', 'Entrada/Saída – Linux', 223),
(5994, '2013-11-20 14:00:00', 2, 'AEX', 'Gerência de Entrada/Saída (continuação)', 223),
(5995, '2013-11-20 14:00:00', 2, 'AP', 'Atividade Prática em Laboratório', 223),
(5996, '2013-11-22 14:00:00', 2, 'AEX', 'Gerência de Entrada/Saída (continuação)', 223),
(5997, '2013-11-27 14:00:00', 2, 'AEX', 'Gerência de Entrada/Saída (continuação)', 223),
(5998, '2013-11-27 14:00:00', 2, 'AP', 'Atividade Prática em Laboratório', 223),
(5999, '2013-11-29 14:00:00', 2, 'AEX', 'Gerência de Entrada/Saída (continuação)', 223),
(6000, '2013-12-04 14:00:00', 2, 'AEX', 'Gerência de Entrada/Saída (continuação)', 223),
(6001, '2013-12-04 14:00:00', 2, 'AP', 'Atividade Prática em Laboratório', 223),
(6002, '2013-12-06 14:00:00', 2, 'AEX', 'Gerência de Entrada/Saída (continuação)', 223),
(6003, '2013-12-11 14:00:00', 2, 'AEX', 'Gerência de Entrada/Saída (continuação)', 223),
(6004, '2013-12-11 14:00:00', 2, 'OTR', 'Prova 02', 223),
(6005, '2013-12-13 14:00:00', 2, 'OTR', 'Entrega de Resultados', 223),
(6006, '2013-08-20 15:00:00', 2, 'AP', 'Apresentação da disciplina, motivação, objetivos, ementa, conteúdo programático, bibliografia e avaliações', 265),
(6007, '2013-08-27 15:00:00', 2, 'AP', 'Implementação do ambiente de estudos', 265),
(6008, '2013-08-23 15:00:00', 2, 'AEX', 'Introdução a Segurança', 265),
(6009, '2013-08-30 15:00:00', 2, 'AEX', 'Ameaças e Ataques\nEstratégias de ataques e defesas', 265),
(6010, '2013-09-03 15:00:00', 2, 'AP', 'Implementação do ambiente de estudos', 265),
(6011, '2013-09-06 15:00:00', 2, 'AEX', 'Vulnerabilidades em softwares, serviços e protocolos', 265),
(6012, '2013-09-10 15:00:00', 2, 'AP', 'Ferramentas de Varreduras de Sistemas Operacionais', 265),
(6013, '2013-09-13 15:00:00', 2, 'AEX', 'Segurança nos serviços Internet', 265),
(6014, '2013-09-17 15:00:00', 2, 'AP', 'Ferramentas de Varreduras Web', 265);
INSERT INTO `itemcronograma` (`id`, `inicio`, `numeroaulas`, `procedimentodidatico`, `topico`, `plano_id`) VALUES
(6015, '2013-09-20 15:00:00', 2, 'AEX', 'Técnicas de varredura', 265),
(6016, '2013-09-29 15:00:00', 2, 'AP', 'Ferramentas de Varreduras de Sistemas Operacionais (continuação)', 265),
(6017, '2013-09-27 15:00:00', 2, 'AEX', 'Técnicas de análise de vulnerabilidade', 265),
(6018, '2013-10-01 15:00:00', 2, '0TR', 'Prova 01', 265),
(6019, '2013-10-04 15:00:00', 2, 'AEX', 'NAT', 265),
(6020, '2013-10-08 15:00:00', 2, 'AP', 'Implementação de NAT', 265),
(6021, '2013-10-11 15:00:00', 2, 'AEX', 'Relacionamento das Aplicações com os Mecanismos de Segurança', 265),
(6022, '2013-10-18 15:00:00', 2, 'AEX', 'Tipos e Arquitetura de Proteção', 265),
(6023, '2013-10-22 14:00:00', 2, 'AP', 'Implementação de Proxy', 265),
(6024, '2013-10-25 14:00:00', 2, 'AEX', 'Firewalls', 265),
(6025, '2013-10-29 14:00:00', 2, 'AP', 'Implementação de Proxy', 265),
(6026, '2013-11-01 14:00:00', 2, 'AEX', 'Firewalls (continuação)', 265),
(6027, '2013-11-05 14:00:00', 2, 'AP', 'Implementação de Firewall', 265),
(6028, '2013-11-08 14:00:00', 2, 'AEX', 'Políticas de Segurança, Criptografia', 265),
(6029, '2013-11-12 14:00:00', 2, 'AP', 'Implementação de Firewall (continuação)', 265),
(6030, '2013-11-19 14:00:00', 2, 'AP', 'Implementação de Firewall (continuação)', 265),
(6031, '2013-11-22 14:00:00', 2, 'AEX', 'Normas de segurança\nGestão de riscos de Segurança', 265),
(6032, '2013-11-26 14:00:00', 2, 'AP', 'Implementação de Firewall (continuação)', 265),
(6033, '2013-11-29 14:00:00', 2, 'AEX', 'Conceitos de auditoria\nAuditoria de sistemas e a área de SI', 265),
(6034, '2013-12-03 14:00:00', 2, 'AP', 'Implementação de Firewall (continuação)', 265),
(6035, '2013-12-06 14:00:00', 2, 'AEX', 'Avaliação de integridade e segurança de dados, de efetividade e de eficiência de sistemas\nSoftwares de auditoria', 265),
(6036, '2013-12-10 14:00:00', 2, 'OTR', 'Prova 02', 265),
(6037, '2013-12-13 14:00:00', 2, 'OTR', 'Entrega de Resultados', 265),
(6038, '2013-08-22 15:00:00', 2, 'AEX', 'Aspectos administrativos da disciplina; introdução ao sistema de apoio Moodle. Introdução a algoritmos e programação de computadores.\n', 298),
(6039, '2013-08-27 15:00:00', 12, 'AEX/AP', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: lógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; expressões aritméticas e lógicas; estruturas de decisão.\n', 298),
(6040, '2013-09-17 15:00:00', 6, 'AEX/AP', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: estruturas de repetição\n', 298),
(6041, '2013-09-26 15:00:00', 2, 'AEX/AP', 'Revisão', 298),
(6042, '2013-09-30 15:00:00', 2, 'OTR', '1ª Prova', 298),
(6043, '2013-10-01 15:00:00', 10, 'AEX/AP', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes.\n', 298),
(6044, '2013-10-17 15:00:00', 2, 'AEX/AP', 'Revisão', 298),
(6045, '2013-10-22 14:00:00', 2, 'OTR', '2ª Prova', 298),
(6046, '2013-10-29 14:00:00', 8, 'AEX/AP', 'Prática de programação com Linguagem C (Code Blocks): fundamentos da línguagem C e transcrição de algoritmos para a linguagem C.', 298),
(6047, '2013-11-12 14:00:00', 10, 'AEX/AP', 'Prática de programação com Linguagem C (Code Blocks): função, recursão e transcrição de algoritmos para a linguagem C.', 298),
(6048, '2013-11-28 14:00:00', 2, 'AEX/AP', 'Revisão', 298),
(6049, '2013-12-03 14:00:00', 2, 'OTR', '3ª Prova', 298),
(6050, '2013-12-05 14:00:00', 2, 'OTR', 'Entrega de resultados', 298),
(6051, '2013-08-22 15:00:00', 16, 'AEX', '1. Introdução à Inteligência Computacional', 269),
(6052, '2013-09-19 15:00:00', 16, 'AEX e SE', '2. Introdução à Computação Evolucionária', 269),
(6053, '2013-10-17 15:00:00', 16, 'AEX e SE', '3. Algoritmos Genéticos', 269),
(6054, '2013-11-14 14:00:00', 14, 'AEX', '4. Algoritmos Evolucionários', 269),
(6055, '2013-12-05 14:00:00', 2, 'OTR', 'Prova 1', 269),
(6056, '2013-08-22 15:00:00', 16, 'AEX', '1. Introdução à Inteligência Computacional', 274),
(6057, '2013-09-19 15:00:00', 16, 'AEX e SE', '2. Introdução à Computação Evolucionária', 274),
(6058, '2013-10-17 15:00:00', 16, 'AEX e SE', '3. Algoritmos Genéticos', 274),
(6059, '2013-11-14 14:00:00', 14, 'AEX e SE', '4. Algoritmos Evolucionários', 274),
(6060, '2013-12-05 14:00:00', 2, 'OTR', 'Prova 1', 274),
(6061, '2013-09-24 15:00:00', 2, 'OTR', 'Prova', 313),
(6062, '2013-10-29 14:00:00', 2, 'OTR', 'Prova', 313),
(6063, '2013-12-05 14:00:00', 2, 'OTR', 'Prova Final', 313),
(6064, '2013-11-28 14:00:00', 2, 'OTR', 'Prova', 313),
(6065, '2013-08-29 15:00:00', 1, 'AP', 'Ordenação de dados: Seleção.', 328),
(6066, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação do Programa, Explanação sobre os conteúdos a serem abordados durante o curso, Critério de Avaliação, Motivação e expectativas para a disciplina, Teste de autoavaliação.', 382),
(6067, '2013-08-22 15:00:00', 2, 'AEX/AP', 'Aspectos administrativos da disciplina; introdução ao sistema de apoio Moodle. Introdução a algoritmos e programação de computadores.\n', 382),
(6068, '2013-08-27 15:00:00', 12, 'AEX/AP', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: lógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; expressões aritméticas e lógicas; estruturas de decisão.\n', 382),
(6069, '2013-09-17 15:00:00', 6, 'AEX/AP', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: estruturas de repetição.', 382),
(6070, '2013-09-26 15:00:00', 2, 'AEX/AP', 'Revisão', 382),
(6071, '2013-09-30 15:00:00', 2, 'OTR', '1ª Prova', 382),
(6073, '2013-10-17 15:00:00', 2, 'AEX/AP', 'Revisão', 382),
(6075, '2013-10-22 14:00:00', 2, 'OTR', '2ª Prova', 382),
(6076, '2013-10-01 15:00:00', 10, 'AEX/AP', 'Estudo e resolução de uma série planejada de problemas envolvendo os tópicos conceituais da ementa: estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes.', 382),
(6077, '2013-10-29 14:00:00', 8, 'AEX/AP', 'Prática de programação com Linguagem C (Code Blocks): fundamentos da línguagem C e transcrição de algoritmos para a linguagem C.', 382),
(6078, '2013-11-12 14:00:00', 10, 'AEX/AP', 'Prática de programação com Linguagem C (Code Blocks): função, recursão e transcrição de algoritmos para a linguagem C.', 382),
(6079, '2013-11-28 14:00:00', 2, 'AEX/AP', 'Revisão', 382),
(6080, '2013-12-03 14:00:00', 2, 'OTR', '3ª Prova', 382),
(6081, '2013-12-05 14:00:00', 2, 'OTR', 'Entrega de resultados', 382),
(6082, '2013-11-29 14:00:00', 2, 'RE', 'Lista 5', 222),
(6083, '2013-10-04 15:00:00', 2, 'AEX', 'O Cenário Mundial.', 263),
(6084, '2013-10-08 15:00:00', 2, 'AEX', 'O Cenário Mundial.', 263),
(6085, '2013-10-11 15:00:00', 2, 'AEX', 'O Cenário Mundial.', 263),
(6086, '2013-10-18 15:00:00', 2, 'AEX', 'O Cenário Mundial.', 263),
(6087, '2013-10-22 14:00:00', 2, 'SE', 'Entrega e Apresentação: Segundo Trabalho (TG2).', 263),
(6088, '2013-10-25 14:00:00', 2, 'AEX', 'Movimento Startup.', 263),
(6089, '2013-10-29 14:00:00', 2, 'AEX', 'Movimento Startup.', 263),
(6090, '2013-11-01 14:00:00', 2, 'AEX', 'Modelo e Validação.', 263),
(6091, '2013-11-05 14:00:00', 2, 'AEX', 'Modelo e Validação.', 263),
(6092, '2013-11-08 14:00:00', 2, 'AEX', 'Modelo e Validação.', 263),
(6093, '2013-11-12 14:00:00', 2, 'AEX', 'Modelo e Validação.', 263),
(6094, '2013-11-19 14:00:00', 2, 'AEX', 'Modelo e Validação.', 263),
(6095, '2013-11-22 14:00:00', 2, 'AEX', 'Modelo e Validação.', 263),
(6096, '2013-11-26 14:00:00', 2, 'AEX', 'Modelo e Validação.', 263),
(6097, '2013-11-29 14:00:00', 2, 'AEX', 'Modelo e Validação.', 263),
(6098, '2013-12-03 14:00:00', 2, 'AEX', 'Financiamento.', 263),
(6099, '2013-12-06 14:00:00', 2, 'AEX', 'Financiamento.', 263),
(6100, '2013-12-10 14:00:00', 2, 'OTR', 'Avaliação.', 263),
(6104, '2013-12-13 14:00:00', 2, 'OTR', 'Avaliação Substitutiva.', 263),
(6105, '2013-10-02 15:00:00', 2, 'AEX', 'Tipo de memória e ordenação de bytes', 272),
(6106, '2013-12-03 14:00:00', 10, 'TG/ED/SE', 'Exercícios / seminários.', 246),
(6141, '2013-08-20 15:00:00', 1, 'AEX', 'Apresentação do plano da disciplina: objetivo geral, explanação sobre conteúdos a serem abordados, critérios de avaliação, bibliografia, motivação e expectativas para a disciplina\n', 259),
(6142, '2013-08-23 15:00:00', 1, 'AEX', 'Relação com engenharia de sistemas; visão geral de sofware; crise do software; surgimento da engenharia de software; processos do ciclo de vida de software\n', 259),
(6143, '2013-08-27 15:00:00', 2, 'AEX', 'Processos de Software: cascata, incremental, Evolucionários e Ágil', 259),
(6144, '2013-09-03 15:00:00', 1, 'AEX', 'Processo Engenharia de Requisitos\n', 259),
(6145, '2013-09-06 15:00:00', 1, 'AEX', 'Engenharia de Requisitos. Documento de especificação de requisitos: definição do escopo\n', 259),
(6146, '2013-09-10 15:00:00', 1, 'AEX', 'Definicoes e taxonomias de requisitos - FUNCIONAIS\n', 259),
(6147, '2013-09-13 15:00:00', 3, 'ED, AP, TG', 'Aula pratica sobre requisitos funcionais\n', 259),
(6148, '2013-09-24 15:00:00', 1, 'OTR', 'Primeira avaliação (P1)', 259),
(6149, '2013-09-27 15:00:00', 1, 'AEX', 'Modelagem de Análise - diagrama de casos de uso\n', 259),
(6150, '2013-10-01 15:00:00', 1, 'ED, AP, TG', 'Prática de diagrama casos de uso\n', 259),
(6151, '2013-10-04 15:00:00', 1, 'AEX', 'Modelagem de Análise - detalhamento dos casos de uso\n', 259),
(6152, '2013-10-08 15:00:00', 1, 'ED, AP, TG', 'Prática de detalhamento dos casos de uso\n', 259),
(6153, '2013-10-11 15:00:00', 2, 'SE, TG', 'Apresentação TG01 - Escopo + Req F e NF + Casos de uso\n', 259),
(6154, '2013-10-18 15:00:00', 2, 'AEX', 'Modelagem de Análise - diagrama de atividades, raia, sequencia - pratica de Diagrama de Raia\n', 259),
(6155, '2013-10-25 14:00:00', 1, 'AEX', 'Modelagem de Análise - diagrama de classes e modelo de dados\n', 259),
(6156, '2013-10-29 14:00:00', 1, 'OTR', 'Segunda avaliação (P2)', 259),
(6157, '2013-11-01 14:00:00', 2, 'AEX', 'Projeto de Software\n', 259),
(6158, '2013-11-08 14:00:00', 2, 'ED, AP, TG', 'Pratica Projeto de Software\n', 259),
(6159, '2013-11-19 14:00:00', 1, 'SE, TG', 'Entrega TG02 - Raia + projeto interface\n', 259),
(6160, '2013-11-22 14:00:00', 1, 'AEX', 'Gerência de Projetos de Software\n', 259),
(6161, '2013-11-26 14:00:00', 1, 'AEX', 'Manutenção de Software E Reengenharia\n', 259),
(6162, '2013-11-29 14:00:00', 1, 'AEX', 'Teste de Software\n', 259),
(6163, '2013-12-03 14:00:00', 1, 'AEX', 'Qualidade de software\n', 259),
(6164, '2013-12-06 14:00:00', 1, 'OTR', 'Terceira avaliação (P3)\n', 259),
(6165, '2013-12-10 14:00:00', 1, 'AEX', 'Correção de provas e entrega de notas\n', 259),
(6166, '2013-12-03 14:00:00', 2, 'AEX', 'Encerramento da disciiplina.', 325),
(6168, '2013-12-09 14:00:00', 4, 'AP, SE', 'Apresentação dos projetos; entrega das notas.', 304),
(6169, '2013-11-22 14:00:00', 2, 'OTR', 'Segunda Avaliação - Prática (NP2)', 251),
(6170, '2013-08-30 15:00:00', 2, 'AP', 'Laboratório: Apresentação do CodeBlocks', 251),
(6172, '2013-11-04 14:00:00', 8, 'AEX, AP, RE', 'JMS (cont.). Afastamento para participar como membro externo de banca de concurso para professor na UFF (04/11 a 08/11).', 304),
(6173, '2013-10-04 15:00:00', 2, 'AP', 'Exercícios Estrutura de Controle.', 251),
(6174, '2013-12-02 14:00:00', 2, 'AP, SE', 'Apresentação dos projetos.', 304),
(6175, '2013-08-22 15:00:00', 4, 'AEX/RE', 'Apresentação e visão geral da disciplina\n', 260),
(6176, '2013-08-22 15:00:00', 2, 'AEX', '1.Apresentação do Professor / Alunos. Apresentação do Plano e Disciplina.', 315),
(6177, '2013-12-09 14:00:00', 6, 'TG/SE', 'Trabalho prático', 260),
(6178, '2013-11-05 14:00:00', 10, 'AEX, RE', 'Complexidade de Espaço', 227),
(6179, '2013-10-18 15:00:00', 10, 'AEX, RE', 'Complexidade de Tempo', 227),
(6180, '2013-11-29 14:00:00', 10, 'SE', 'Seminários', 227),
(6181, '2013-12-17 14:00:00', 2, 'OTR', 'Revisão e Resultado Final', 227),
(6182, '2013-08-26 15:00:00', 12, 'AEX', 'Introdução aos Sistemas  Operacionais', 350),
(6183, '2013-10-09 15:00:00', 2, 'RE', 'Simulado para a prova 1', 393),
(6185, '2013-11-04 14:00:00', 2, 'AEX', 'String', 393),
(6186, '2013-11-06 14:00:00', 6, 'RE', 'Exercícios', 393),
(6187, '2013-11-18 14:00:00', 2, 'RE', 'Simulado para a prova 2', 393),
(6188, '2013-12-04 14:00:00', 6, 'RE', 'Exercícios', 393),
(6189, '2013-12-16 14:00:00', 2, 'RE', 'Simulado para a prova 3', 393),
(6190, '2013-12-18 14:00:00', 2, 'OTR', 'Prova 3', 393),
(6191, '2013-09-18 15:00:00', 6, 'AEX, RE', 'Estruturas de seleção', 393),
(6192, '2013-10-23 14:00:00', 6, 'aex, ap', 'Estrutura de repetição com teste no final (do-while)', 226),
(6193, '2013-11-07 14:00:00', 2, 'AEX', 'Tabelas de Símbolos', 317),
(6194, '2013-11-11 14:00:00', 2, 'AEX', 'Aula de exercícios sobre tradução dirigida por sintaxe', 317),
(6195, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação do programa da disciplina. Explanação sobre os conteúdos a serem abordados durante o curso. Critério de Avaliação. Motivação, expectativas e relacionamento com outras disciplinas do curso. Conceito de modelo computacional.', 232),
(6196, '2013-10-18 15:00:00', 2, 'AEX, RE', 'Seleção linear no pior caso.', 232),
(6197, '2013-10-22 14:00:00', 2, 'AEX, RE', 'Algoritmos de ordenação por contagem.', 232),
(6198, '2013-10-29 14:00:00', 12, 'AEX, RE', 'Programação Dinâmica – aplicações (sequência de multiplicação de matrizes, maior subsequência comum, mochila 0-1, . . .).', 232),
(6199, '2013-11-26 14:00:00', 8, 'AEX, RE', 'Algoritmos Gulosos - aplicações (mochila fracionária, escalonamento de tarefas, código de Huffman, . . .).', 232),
(6200, '2013-12-10 14:00:00', 6, 'AEX, RE', 'Emparelhamento de cadeias – algoritmos (simples, autômatos finitos, Knuth-Morris-Pratt, . . .).', 232),
(6201, '2013-12-03 14:00:00', 6, 'OTR', 'Apresentação do Trabalho de cada equipe e entrega do resultado final.', 305),
(6202, '2013-11-21 14:00:00', 8, 'AEX', 'Geração de código', 317),
(6203, '2013-12-09 14:00:00', 4, 'AEX', 'Análise descendente', 317),
(6204, '2013-12-16 14:00:00', 2, 'AEX', 'Eliminação da recursividade à esquerda', 317),
(6205, '2013-12-19 14:00:00', 4, 'OTR', 'Avaliação final dos trabalhos', 317),
(6206, '2013-12-06 14:00:00', 6, 'SE', 'Redes Sociais', 296),
(6207, '2013-12-16 14:00:00', 0, 'AEX/TG', 'Entrega das Notas Finais e Correção das Provas.', 203),
(6208, '2013-10-31 14:00:00', 2, 'AVL T', 'Primeira Avaliação Teórica - Último dia de Entrega de Trabalho em Equipe', 203),
(6209, '2013-08-26 15:00:00', 4, 'AEX', '2.  Introdução\n  2.1  Estruturas de dados simples\n  2.2  Estruturas de dados vetores e matrizes\n  2.3  Exercícios de estruturas homogenias.', 318),
(6210, '2013-09-02 15:00:00', 8, 'AEX/TG', '3. Matrizes\n   3.1 Tipos especiais de matrizes\n   3.2 Mapeamento de matrizes em vetores,\n   3.3 Aplicação de Matrizes\n   3.4 Matrizes esparsas e algoritmos de atuação\n    3.5 Exercícios práticos', 318),
(6211, '2013-09-16 15:00:00', 10, 'AEX/RE/TG', '4. Listas Lineares Estáticas e seus algoritmos:\n    4.1 Definição de Tipos de listas estáticas\n     4.2 Listas sequenciais\n     4.3 Listas com apontadores de controle\n     4.4 Pilhas estáticas\n     4.5 Filas estáticas\n     4.6 Exercícios práticos', 318),
(6212, '2013-10-07 15:00:00', 4, 'AEX/RE', '5. Recursos de Encadeamentos em listas:\n     5.1 Representação visual.\n     5.2 Representação de inserção e remoção.', 318),
(6213, '2013-10-14 15:00:00', 8, 'AEX/RE/TG/ED', '6. Listas Encadeadas Dinamicamente e algoritmos:\n     6.1 Listas lineares encadeadas;\n     6.2 Pilhas encadeadas;\n     6.3 Filas encadeadas;\n     6.4 Listas duplamente encadeadas.', 318),
(6214, '2013-10-28 14:00:00', 2, 'AVL', '- Primeira Avaliação  e entrega de trabalhos individuais;', 318),
(6215, '2013-10-31 14:00:00', 2, 'AVL T', 'Primeira Avaliação Teórica - Último dia de Entrega de Trabalho em Equipe', 318),
(6216, '2013-11-04 14:00:00', 6, 'AEX/RE/TG/ED', '7. Árvores e seus algoritmos\n    7.1 Introdução à teoria de árvores\n    7.2 Árvore binária e seus algoritmos\n    7.3 Árvores binárias de buscas e seus algoritmos', 318),
(6217, '2013-11-14 14:00:00', 6, 'AEX/TG/ED', '8. Árvores binárias Balanceadas e seus algoritmos:\n    8.1 Introdução à Arvores AVL;\n    8.2 Balanceamento de Árvores e seus tipos;\n    8.3 Inserção em árvores balanceadas binárias;\n    8.4 Remoção em árvores balanceadas binárias;\n    8.5 Exemplos e algoritmos de buscas', 318),
(6218, '2013-11-25 14:00:00', 4, 'AEX/TG', '9. Árvores Balanceadas B Tree e principais algoritmos:\n    9.1 Árvores 2,3,4;\n    9.2 Árvores B;\n    9.3 Exercícios e trabalhos práticos.', 318),
(6219, '2013-08-21 15:00:00', 2, 'AEX', 'Apresentação do professor, no plano de aula, forma de avaliação.', 239),
(6220, '2013-12-02 14:00:00', 4, 'AEX/TG', '10. Introdução a Estruturas de Hash\n  10.1 - Função de hashing.\n  10.2 - Estruturas com overflow\n  10.3 - Estruturas sem overflow', 318),
(6221, '2013-12-09 14:00:00', 2, 'AVL', 'Segunda Avaliação Prática e Entrega de Trabalhos.', 318),
(6222, '2013-12-12 14:00:00', 2, 'AVL T', 'Segunda Avaliação Teórica e Entrega de Trabalhos.', 318),
(6223, '2013-12-16 14:00:00', 0, 'AEX/TG', 'Entrega das Notas Finais e Correção das Provas.', 318),
(6224, '2013-10-07 15:00:00', 8, 'AEX', 'Avaliação de alternativas. Apresentação das principais ferramentas empregadas no processo de seleção de projetos.', 239),
(6225, '2013-10-21 14:00:00', 8, 'AEX', 'Economia aplicada ao desenvolvimento de software. Ambientação com estudos de caso relevantes.', 239),
(6226, '2013-12-06 14:00:00', 4, 'AEX', 'Entrega de notas\n', 394),
(6227, '2013-09-30 15:00:00', 2, 'OTR', 'Prova 1', 317),
(6228, '2013-11-14 14:00:00', 2, 'RE', 'Aula de revisão para a prova', 317),
(6229, '2013-08-29 15:00:00', 8, 'AEX, RE, TG, AP', 'Convenções e Padrões de escrita', 319),
(6230, '2013-09-12 15:00:00', 8, 'AEX, RE, TG, AP', 'Elementos de Programação e Ferramentas para Leitura', 319),
(6231, '2013-09-26 15:00:00', 8, 'AEX, RE, TG, AP', 'Elementos de Estruturas de Dados', 319),
(6232, '2013-10-10 15:00:00', 10, 'AEX, RE, TG, AP', 'Elementos de Controle de Fluxo avançados', 319),
(6233, '2013-11-01 14:00:00', 14, 'AEX, RE, TG, AP', 'Técnicas de Projeto, Construção e Desenvolvimento de Software', 319),
(6234, '2013-11-29 14:00:00', 12, 'AEX, RE, TG, AP', 'Elementos de Arquitetura de Sistemas', 319),
(6235, '2013-08-23 15:00:00', 2, 'AEX', 'Visão geral do proecesso de compilação: análise léxica, sintática, semântica, geração de código, otimização de código.', 339),
(6236, '2013-08-21 15:00:00', 2, 'AEX', 'Entrega do programa de curso e discussão sobre o escopo da disciplina. ', 339),
(6237, '2013-08-22 15:00:00', 6, 'AEX/ RE / ED', 'UNIDADE I - Aspectos Fundamentais da Contabilidade\n*sujeito a alterações no decorrer do semestre', 376),
(6238, '2013-09-02 15:00:00', 10, 'AEX/ RE/ ED', 'UNIDADE II - Patrimônio\n*sujeito alterações no decorrer do semestre', 376),
(6239, '2013-09-19 15:00:00', 16, 'AEX/ RE/ ED', 'UNIDADE III - Estudo das Contas\n*sujeito a alteração no decorrer do semestre', 376),
(6240, '2013-10-17 15:00:00', 16, 'AEX/ RE/ ED', 'UNIDADE IV - Processo de Estruturação e Regime Contábil\n*sujeito a alteração no decorrer do semestre', 376),
(6241, '2013-11-21 14:00:00', 16, 'AEX/ RE/ ED', 'UNIDADE V - Demonstrações Contábeis\n*sujeito alterações no decorrer do semestre', 376),
(6242, '2013-08-28 15:00:00', 8, 'AEX', 'Análise léxica, expressões regulares, autômatos finitos, analisadores léxicos como autômatos finitos. Gerador de analisador léxico - Lex. Conersão de autômatos finitos não determinísticos em determinísticos. Construção de geradores de analisadores léxicos. ', 339),
(6243, '2013-09-11 15:00:00', 2, 'AEX', 'Introdução à análise sintática, gramáticas livres de contexto, derivações, árvores gramáticas. Especificação do analisador sintático. ', 339),
(6244, '2013-09-13 15:00:00', 2, 'AEX', 'Conjuntos Primeiro e Seguinte', 339),
(6245, '2013-09-18 15:00:00', 6, 'AEX', 'Análise ascendente - métodos SLR', 339),
(6246, '2013-09-27 15:00:00', 2, 'OTR', 'Prova 1', 339),
(6247, '2013-10-02 15:00:00', 6, 'AEX', 'Anaálise Ascendente, métodos LR(1), LALR', 339),
(6248, '2013-10-11 15:00:00', 4, 'AEX', 'Definição dirigida por sintaxe, atributos sintetizados e herdados, grafos de dependência', 339),
(6249, '2013-10-18 15:00:00', 2, 'AEX', 'Árvores de sintaxe – esquemas de tradução para criação de árvores de sintaxe ', 339),
(6250, '2013-10-23 14:00:00', 2, 'AEX', 'Espeficação do trabalho', 339),
(6251, '2013-10-25 14:00:00', 2, 'AEX', 'Tabela de Símbolos', 339),
(6252, '2013-10-30 14:00:00', 2, 'RE', 'Aula de exercícios sobre tradução dirigida por sintaxe', 339),
(6253, '2013-11-01 14:00:00', 2, 'AEX', 'Geração de código', 339),
(6254, '2013-11-06 14:00:00', 2, 'OTR', 'Aula de revisão para a prova', 339),
(6255, '2013-11-08 14:00:00', 6, 'AEX', 'Geração de Código', 339),
(6256, '2013-11-27 14:00:00', 4, 'AEX', 'Análise ascendente', 339),
(6257, '2013-12-04 14:00:00', 2, 'AEX', 'Eliminação da recursividade à esquerda', 339),
(6258, '2013-12-06 14:00:00', 4, 'AP', 'Acompanhamento dos trabalhos finais', 339),
(6259, '2013-11-08 14:00:00', 2, 'OTR', 'Prova 2', 339),
(6260, '2013-12-06 14:00:00', 4, 'AEX, AP, TG, SE', 'Entregas e apresentações de trabalhos.', 308),
(6261, '2013-12-10 14:00:00', 2, 'OTR', 'Entrega das avaliações.', 308),
(6262, '2013-08-20 15:00:00', 2, 'AEX', 'Apresentação da disciplina: plano de aulas;\n- sistema de avaliação;\n- datas importantes;\n- bibliografia.\n', 309),
(6263, '2013-08-22 15:00:00', 4, 'AEX e TG', 'Definição de Projeto. Interação entre projeto,requisitos e construção.\nRelação entre arquitetura de software e projeto de software. Contexto de projeto em vários modelos de desenvolvimento de software. Questões fundamentais do projeto: persistência dos dados; concorrência; exceções e outras.', 309),
(6264, '2013-08-29 15:00:00', 4, 'AEX', 'Noções básicas de Projeto Arquitetural.', 309),
(6265, '2013-09-05 15:00:00', 4, 'AEX e TG', 'Projeto Orientado a Objetos: revisão de fundamentos de\nO. O. : classe, relacionamento, objeto, interface, herança,\npolimorfismo, composição.', 309),
(6266, '2013-09-12 15:00:00', 8, 'AEX e AP', 'Princípios de projeto por meio dos padrões GRASP:\n- encapsulamento de informações,\n- alta coesão e\n- baixo acoplamento.', 309),
(6267, '2013-09-26 15:00:00', 2, 'AEX', 'Primeira Avaliação', 309),
(6268, '2013-10-01 15:00:00', 2, 'AEX', 'Apresentação do Projeto a ser desenvolvido pelas equipes.', 309),
(6269, '2013-10-03 15:00:00', 8, 'AEX e AP', 'Padrões de projeto Gang of Four.', 309),
(6270, '2013-10-17 15:00:00', 2, 'OTR', 'Acompanhamento do Desenvolvimento do Projeto.', 309),
(6271, '2013-10-22 14:00:00', 12, 'AEX e TG', 'Padrões de Projeto GoF.', 309),
(6272, '2013-11-14 14:00:00', 2, 'OTR', 'Segunda Avaliação.', 309),
(6273, '2013-11-19 14:00:00', 6, 'AEX, TG e AP', 'Acompanhamento do desenvolvimento do trabalho prático.', 309),
(6274, '2013-11-28 14:00:00', 2, 'OTR', 'Entrega do Trabalho prático.', 309),
(6275, '2013-12-03 14:00:00', 6, 'OTR', 'Apresentação do Trabalho de cada equipe e entrega do\nresultado final.', 309),
(6276, '2013-12-10 14:00:00', 2, 'AEX', 'Entrega do trabalho final', 313),
(6277, '2013-12-12 14:00:00', 2, 'AEX', 'Entrega do trabalho final', 313),
(6278, '2013-08-27 15:00:00', 4, 'AEX', '1. Introdução à Segurança Computacional e de Sistemas', 306),
(6279, '2013-09-10 15:00:00', 4, 'AEX', '2. Ameaças e Ataques', 306),
(6280, '2013-09-24 15:00:00', 6, 'AEX', '3. Criptografia', 306),
(6281, '2013-10-15 15:00:00', 2, 'AEX', '4. Integridade', 306),
(6282, '2013-10-22 14:00:00', 4, 'AEX', '5. Distribuição de Chaves e Certificação', 306),
(6283, '2013-11-05 14:00:00', 4, 'AEX', '6. Autenticação', 306),
(6284, '2013-11-19 14:00:00', 4, 'AEX', '7. Protocolos de Segurança', 306),
(6285, '2013-12-03 14:00:00', 4, 'AEX', '8. Gerenciamento de Segurança e Noções de Auditoria', 306),
(6286, '2013-08-23 15:00:00', 8, 'AEX e AP', '1. Introdução às Redes de Computadores', 273),
(6287, '2013-09-06 15:00:00', 4, 'AEX', '2. Modelos e Arquiteturas de Referência', 273),
(6288, '2013-09-13 15:00:00', 16, 'AEX e AP', '3. Camada de Aplicação', 273),
(6289, '2013-10-11 15:00:00', 8, 'AEX', '4. Camada de Transporte', 273),
(6290, '2013-10-25 14:00:00', 12, 'AEX', '5. Camada de Rede e Roteamento', 273),
(6291, '2013-11-19 14:00:00', 16, 'AEX', '6. Camada de Enlace, Redes Locais e sem Fio', 273),
(6292, '2013-09-30 15:00:00', 2, 'OTR', 'Solução de exercícios, revisão e atendimento individual para solução de dúvidas', 385),
(6293, '2013-10-03 15:00:00', 2, 'OTR', 'Primeira avaliação', 385),
(6294, '2013-12-12 14:00:00', 2, 'OTR', 'Solução de exercícios, revisão e atendimento individual para solução de dúvidas', 385),
(6295, '2013-12-16 14:00:00', 2, 'OTR', 'Segunda Avaliação', 385),
(6296, '2013-08-22 15:00:00', 2, 'AEX', 'Apresentação da disciplina.', 207),
(6297, '2013-08-26 15:00:00', 2, 'AEX', 'Revisão de vetores e funções', 207),
(6298, '2013-08-29 15:00:00', 2, 'AEX', 'Introdução aos tipos abstrados de dados', 207),
(6299, '2013-09-02 15:00:00', 2, 'AEX', 'Pilha com vetor', 207),
(6300, '2013-09-05 15:00:00', 2, 'AP', 'Exercícios de implementação da pilha', 207),
(6301, '2013-09-09 15:00:00', 2, 'AEX', 'Fila Simples e Fila Circular com Vetor', 207),
(6302, '2013-09-12 15:00:00', 2, 'AP', 'Exercícios de implementação da Fila Simples e Fila Circular', 207),
(6303, '2013-09-16 15:00:00', 2, 'AEX', 'Lista com vetor', 207),
(6304, '2013-09-18 15:00:00', 4, 'AEX, AP', 'Exercícios de implementação de lista, exemplos de aplicação de tipos de dados abstratos', 207),
(6305, '2013-09-19 15:00:00', 2, 'AEX', 'Alocação dinâmica de memória', 207),
(6306, '2013-09-23 15:00:00', 2, 'AEX', 'Pilha e Fila com Alocação dinâmica de memória', 207),
(6307, '2013-09-26 15:00:00', 4, 'AEX', 'Listas com alocação dinâmica de memória, listas encadeadas', 207),
(6308, '2013-10-03 15:00:00', 2, 'AEX, AP', 'Exercícios de implementação de pilha, fila e lista simplesmente encadeada', 207),
(6309, '2013-10-07 15:00:00', 2, 'OTR', '1. Avaliação', 207),
(6310, '2013-11-07 15:00:00', 2, 'AEX, AP, OTR', 'Entrega da avaliação 1, introdução à alocação dinâmica de memória', 207),
(6311, '2013-11-11 15:00:00', 2, 'AEX', 'Lista duplamente Encadeada', 207),
(6312, '2013-11-14 15:00:00', 2, 'AEX, AP', 'Variações de listas encadeadas, análise de navegação em listas', 207),
(6313, '2013-11-18 15:00:00', 2, 'AEX, AP', 'Exercícios com listas duplamente encadeadas', 207),
(6314, '2013-11-21 15:00:00', 2, 'AEX, AP', 'Implementação de listas encadeadas em arquivos', 207),
(6315, '2013-11-25 15:00:00', 2, 'AEX, AP', 'Introdução à árvores, tipos de árvores, representação', 207),
(6316, '2013-11-27 15:00:00', 4, 'AEX, AP', 'Árvore binária, algoritmos de navegação e pesquisa em árvores, Inserção, em árvores binárias', 207),
(6317, '2013-11-28 15:00:00', 2, 'AEX, AP', 'Remoção em árvores binárias', 207),
(6318, '2013-12-02 15:00:00', 2, 'AEX, AP', 'Árvores AVL, balanceamento, rotação simples, rotação dupla', 207),
(6319, '2013-12-05 15:00:00', 2, 'AEX, AP', 'Árvores rubro-negras, regras, construção', 207),
(6320, '2013-12-09 15:00:00', 2, 'AEX, AP', 'Inserção em árvores rubro-negras', 207),
(6321, '2013-12-12 15:00:00', 2, 'AEX, AP', 'Remoção em árvores rubro-negras', 207),
(6322, '2013-12-16 15:00:00', 2, 'AEX', 'Outros tipos de árvores', 207),
(6323, '2013-12-19 15:00:00', 2, 'OTR', '2. avaliação', 207),
(6324, '2013-12-23 15:00:00', 2, 'OTR', 'Entrega da 2a avaliação e encerramento da disciplina', 207),
(6325, '2013-12-05 14:00:00', 6, 'AEX', 'Recursividade', 286),
(6326, '2013-09-16 15:00:00', 8, 'OTR/AEX/RE', 'AVALIAÇÃO DE PROCESSOS', 301),
(6327, '2013-10-07 15:00:00', 8, 'ED', 'DEFINIÇÃO DE PROCESSOS', 301),
(6328, '2013-11-25 14:00:00', 4, 'ED', 'AVALIAÇÃO DE PROCESSOS', 301),
(6329, '2013-10-28 14:00:00', 14, 'SE', 'APRESENTAÇÃO DE PROCESSOS', 301),
(6330, '2013-09-10 15:00:00', 6, 'OTR/AEX/RE', 'Marketing', 244),
(6331, '2013-09-28 15:00:00', 4, 'OTR/AEX/RE', 'Criação e Entrega de valor', 244),
(6332, '2013-10-01 15:00:00', 4, 'OTR/AE/RE', 'Networking', 244),
(6333, '2013-11-19 14:00:00', 4, 'OTR', 'Entrega do resultado da prova e Disciplina', 244),
(6334, '2013-08-20 15:00:00', 12, '6- AEX  + 6-AP', '1. Conceitos básicos Fluxo de caixa. Juros. O valor do dinheiro no tempo. A Matemática financeira. Moeda estável e Inflação.\n\nJuros simples e compostos. Conceitos de Juros simples e crescimento linear. Juros compostos e crescimento exponencial', 399),
(6335, '2013-09-10 15:00:00', 10, '6-AEX + 4-AP', '3. Juros simples: fórmulas básicas. Capitalização simples. Desconto racional. Desconto comercial\n\n4. Juros compostos: capitalização e Desconto Capitalização e desconto racional. Desconto comercial.', 399),
(6336, '2013-09-28 15:00:00', 4, '2-AEX + 2-RE', '5. Taxas de juros. Taxa efetiva. Taxas proporcionais. Taxas equivalentes. Taxa nominal.', 399),
(6337, '2013-10-05 15:00:00', 6, '2AEX + 4AP', '6. Séria uniforme: prestações iguais. Dado PMT achar FV. Dado FV achar PMT. Dado PMT achar PV. Dado PV achar PMT.', 399),
(6338, '2013-10-12 15:00:00', 12, '6-AEX + 5-AP', '7. Valor presente liquido e taxa interna de retorno. Valor presente e taxa de desconto. Valor presente liquido e taxa interna de retorno.', 399),
(6339, '2013-11-05 14:00:00', 10, '4-AEX + 6-AP', '8. Equivalência de fluxos de caixa. Planos equivalentes de financiamento. Pagamento no final. Pagamento periódico de juros.\nPrestações iguais. Sistemas de amortizações constantes..', 399),
(6340, '2013-08-20 15:00:00', 8, 'AEX, AP', 'Fundamentos de construção de software \n      - Complexidade\n      - Manutenibilidade\n      - Construção para a verificação \n      - Padrões em construção de software. ', 205),
(6341, '2013-09-03 15:00:00', 12, 'AEX/AP', 'Gerência de construção \n       - Modelos de processos de construção\n       - Planejamento de construção\n       - Medidas de construção', 205),
(6342, '2013-09-24 15:00:00', 10, 'AEX, AP', 'Linguagens empregadas na construção de software\n- Codificação\n- Linguagem Java', 205),
(6343, '2013-10-11 15:00:00', 8, 'AEX, AP', 'Projeto detalhado \n- Pré-requisitos para a construção de software', 205),
(6344, '2013-12-03 14:00:00', 8, 'AEX, AP', 'Qualidade de código\nIntegração.', 205),
(6345, '2013-11-22 14:00:00', 6, 'AEX AP', 'Reutilização de software', 205),
(6346, '2013-10-29 14:00:00', 12, 'AEX, AP', 'Testes de unidade e de integração\n         - JUnit', 205),
(6347, '2013-08-20 15:00:00', 8, 'AEX, AP', 'Bases para a Construção de Software\n       - Introdução a Construção de Software\n       - Metáforas\n       - Pré-Requisitos\n       - Principais Decisões na Construção de Software', 253),
(6348, '2013-09-03 15:00:00', 12, 'AEX/AP', 'Códigos de Alta Qualidade\n       - Projeto de Software\n       - Classes Funcionais\n       - Rotinas de Alta Qualidade\n       - Programação Defensiva\n       - Pseudocódigos', 253),
(6349, '2013-09-24 15:00:00', 10, 'AEX, AP', 'Variáveis\n       - Problemas Gerais com Uso de Variáveis\n       - Nomes para Variáveis\n       - Tipos de Dados Fundamentais\n       - Tipos de Dados Incomuns', 253),
(6350, '2013-10-11 15:00:00', 8, 'AEX, AP', 'Instruções\n       - Organização de Código Linear\n       - Condicionais\n       - Loops\n       - Estruturas de Controle Incomuns\n       - Métodos Baseados em Tabelas\n       - Questões Gerais Sobre Controle', 253),
(6351, '2013-10-29 14:00:00', 12, 'AEX, AP', 'Melhorias no Código\n       - Qualidade de Software\n       - Construção Colaborativa\n       - Testes do Desenvolvedor\n       - Depuração\n       - Refatoração\n       - Otimização - Estratégias e Técnicas', 253),
(6352, '2013-11-22 14:00:00', 6, 'AEX AP', 'Considerações Sobre o Sistema\n       - Tamanho x Construção\n       - Gerenciamento da Construção\n       - Integração\n       - Ferramentas de Programação', 253),
(6353, '2013-12-03 14:00:00', 8, 'AEX, AP', 'Artesanato de Software\n       - Leiaute e Estilo\n       - Documentação Automática\n       - Caráter Pessoal\n       - Temas do Artesanato de Software', 253),
(6444, '2012-10-19 03:00:00', 2, 'OTR', 'Apresentação da Disciplina:\r\n•	Explanação sobre os conteúdos a serem abordados \r\n•	Critério de Avaliação\r\n•	Bibliografia\r\n•	Motivação e expectativas para a disciplina\r\n', 1000021),
(6445, '2012-11-30 02:00:00', 2, 'OTR', 'Prova Escrita - editada', 1000021),
(6446, '2013-03-05 15:00:00', 2, 'OTR', 'Entrega dos resultados do semestre', 1000021),
(6447, '2012-12-04 14:00:00', 36, 'AEX/ED/RE/TG', 'Unidade II – Processo e Método de Desenvolvimento Orientado a Objetos. \n1.	Abordagem iterativa e incremental.\n2.	Etapas e artefatos produzidos.\n3.	Levantamento e Especificação de Requisitos.\n4.	Casos de uso.\n5.	Construção de modelo de análise e de desenho de software.\n6.	Mapeamento de modelo de projeto para implementação.\n7.	Processos Formais x Processos Ágeis\n8.	Práticas ágeis e contexto de sua aplicação.\n9.	Impacto das práticas ágeis nos métodos de desenvolvimento.\n', 1000021),
(6448, '2013-03-01 03:00:00', 2, 'OTR', 'Prova Escrita', 1000021),
(6449, '2012-10-23 14:00:00', 20, 'AEX/ED/RE/TG', 'Unidade I – Paradigmas de Desenvolvimento de Software\n1.	Software, Ciclo de Vida de Software e Processo de Software.\n2.	Engenharia de Software e a visão em camadas: qualidade, processo, métodos, ferramentas e técnicas.\n3.	Engenharia de software e princípios básicos de desenvolvimento de Software.\n4.	Evolução histórica de métodos de desenvolvimento\n5.	Visão geral das diferenças entre Paradigma Estruturado e Paradigma Orientado a Objetos.\n6.	Detalhamento dos conceitos do Paradigma Orientado a Objetos (abstração, encapsulamento, classes, métodos, objetos, herança, polimorfismo, delegação).\n7.	UML como ferramenta para modelagem orientada a objetos.', 1000021);

-- --------------------------------------------------------

--
-- Estrutura da tabela `justificativa`
--

CREATE TABLE IF NOT EXISTS `justificativa` (
  `Requerimento_id` int(10) unsigned NOT NULL,
  `justificativa` text COLLATE utf8_unicode_ci,
  KEY `Justificativa_FKIndex1` (`Requerimento_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- --------------------------------------------------------

--
-- Estrutura da tabela `parecer`
--

CREATE TABLE IF NOT EXISTS `parecer` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `requerimento_id` int(10) unsigned NOT NULL,
  `usuario_id` int(10) unsigned DEFAULT NULL,
  `data_parecer` datetime DEFAULT NULL,
  `conteudo` text COLLATE utf8_unicode_ci,
  `status` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `requerimento_id` (`requerimento_id`),
  KEY `usuario_id` (`usuario_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=852 ;

--
-- Extraindo dados da tabela `parecer`
--

INSERT INTO `parecer` (`id`, `requerimento_id`, `usuario_id`, `data_parecer`, `conteudo`, `status`) VALUES
(451, 1000347, 2182, '2013-11-28 18:06:25', 'documentos', 5),
(551, 1000375, 1788, '2013-12-02 14:48:43', 'rsdfsdfsdfsdfsdf', 2),
(552, 1000377, 1788, '2013-12-02 15:03:57', 'adasdasdasd', 5),
(553, 1000377, 1788, '2013-12-02 15:06:19', 'asdaSDAsdaS', 2),
(601, 1000378, 1072, '2013-12-02 14:49:56', 'Ok!! Eu cedo!', 2),
(651, 1000383, 2182, '2013-12-02 20:09:49', 'Documentos conferidos e sendo repassados ao coordenador de estágio para assinatura.', 5),
(701, 1000384, 2182, '2013-12-03 11:18:15', 'Pode vir buscar sua declaração, na quarta das 8h às 18h, não esqueça de trazer um documento oficial com foto!', 2),
(751, 1000389, 2182, '2013-12-03 14:08:28', 'Não dá!!!', 3),
(801, 1000381, 2182, '2013-12-04 10:45:58', 'Pode vir buscar doutor Márcio.', 2),
(851, 1000405, 2182, '2014-01-16 14:43:14', 'ok', 2);

-- --------------------------------------------------------

--
-- Estrutura da tabela `perfil`
--

CREATE TABLE IF NOT EXISTS `perfil` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `nome` varchar(45) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=8 ;

--
-- Extraindo dados da tabela `perfil`
--

INSERT INTO `perfil` (`id`, `nome`) VALUES
(1, 'Administrador do Sistema'),
(2, 'Aluno'),
(3, 'Coordenador de Curso'),
(4, 'Coordenador de Estágio'),
(5, 'Professor'),
(6, 'Secretário(a)/Funcionário Administrativo'),
(7, 'Diretor');

-- --------------------------------------------------------

--
-- Estrutura da tabela `plano`
--

CREATE TABLE IF NOT EXISTS `plano` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `criterioavaliacao` char(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `datarealizacaoprovas` char(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `objetivosespecificos` text COLLATE utf8_unicode_ci,
  `programa` text COLLATE utf8_unicode_ci,
  `relacaooutrasdisciplinas` char(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `turma_id` int(10) unsigned DEFAULT NULL,
  `bibliografiasugerida` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`id`),
  KEY `plano_FKIndex1` (`turma_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1000025 ;

--
-- Extraindo dados da tabela `plano`
--

INSERT INTO `plano` (`id`, `criterioavaliacao`, `datarealizacaoprovas`, `objetivosespecificos`, `programa`, `relacaooutrasdisciplinas`, `turma_id`, `bibliografiasugerida`) VALUES
(203, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n        P1 – Prova escrita individual – Valor: 5,0 pontos\n	P2 – Prova prática individual – Valor: 5,0 pontos\n        M1 = P1 + P2   primeira a', '1a. Prova Prática - 28/10/2013 e Entrega de Trabalhos.\n1a. Prova Teórica - 31/10/2013.\n2a. Prova Prática e Entrega de Trabalhos - 09/12/2013.\n2a. Prova Teórica - 12/12/2013.', ' Exercitar as principais estruturas de dados homogenias e heterogenias.  \n Estudar e praticar as estruturas de dados do tipo listas sequenciais e listas encadeadas. \n Estudar e praticar as estruturas de dados do tipo árvores binárias, binárias de buscas e AVL e os principais algoritmos de inserção, remoção e buscas.\n Estudar e praticar as estruturas de dados do tipo árvores de Índices (B tree) e algoritmos.\n ', '1. Apresentação do Programa:\n 1.1 Explanação sobre os conteúdos a serem abordados durante o curso\n  1.2  Critério de Avaliação\n  1.3  Bibliografia\n  1.4  Motivação e expectativas para a disciplina.\n2.  Introdução\n  2.1  Estruturas de dados simples\n  2.2  Estruturas de dados vetores e matrizes\n  2.3  Exercícios de estruturas homogenias.  \n3. Matrizes\n   3.1 Tipos especiais de matrizes\n   3.2 Mapeamento de matrizes em vetores,\n   3.3 Aplicação de Matrizes\n   3.4 Matrizes esparsas e algoritmos de atuação\n    3.5 Exercícios práticos.\n4. Listas Lineares Estáticas e seus algoritmos:\n    4.1 Definição de Tipos de listas estáticas\n     4.2 Listas sequenciais\n     4.3 Listas com apontadores de controle\n     4.4 Pilhas estáticas\n     4.5 Filas estáticas\n     4.6 Exercícios práticos.\n5. Recursos de Encadeamentos em listas:\n     5.1 Representação visual.\n     5.2 Representação de inserção e remoção.\n6. Listas Encadeadas Dinamicamente e algoritmos:\n     6.1 Listas lineares encadeadas;\n     6.2 Pilhas encadeadas;\n     6.3 Filas encadeadas;\n     6.4 Listas duplamente encadeadas.\n7. Árvores e seus algoritmos\n    7.1 Introdução à teoria de árvores\n    7.2 Árvore binária e seus algoritmos\n    7.3 Árvores binárias de buscas e seus algoritmos\n8. Árvores binárias Balanceadas e seus algoritmos:\n    8.1 Introdução à Arvores AVL;\n    8.2 Balanceamento de Árvores e seus tipos;\n    8.3 Inserção em árvores balanceadas binárias;\n    8.4 Remoção em árvores balanceadas binárias;\n    8.5 Exemplos e algoritmos de buscas\n9. Árvores Balanceadas B Tree e principais algoritmos:\n    9.1 Árvores 2,3,4;\n    9.2 Árvores B;\n    9.3 Exercícios e trabalhos práticos.\n', 'A disciplina de Estruturas de dados será trabalhada em conjunto com as disciplinas de programação visando desempenhar mais a teoria e demonstrar algoritmos principais. Na disciplina de programação será praticado exemplos que utilizam as estruturas estudad', 62, 'Dictionary of Algorithms and Data Structures. URL: http://www.nist.gov/dads/.'),
(204, '2 Provas (P1 e P2)\n1 Seminário (SEM)\nExercícios de laboratório (EXL)\n\nNF = 0,25 * P1 + 0,3 * P2 + 0,3 *  EXL + 0,15 * SEM', '09/10/13 (Quarta) P1\n11/12/13 (Quarta) P2\nData do Seminário: 16 e 18/12/13', '- Compreender e aplicar técnicas avançadas de construção de software;\n- Resolver problemas mais complexos através da programação.', '1) Revisão das linguagens C/C++\n\n2) Aprendendo a utilizar o sistema de submissão\n\n3) Estruturas de dados\n\n4) Strings\n\n5) Matemática\n\n6) Backtracking\n\n7) Teoria dos Grafos\n\n8)Programação Dinâmica\n\n9) Geometria Computacional\n', 'Essa disciplina é relacionada diretamente a "Construção de Software" e outras matérias de programação, mas a construção de software em si é uma etapa que sempre estará presente em qualquer projeto de software, o que faz dessa disciplina uma visão avançada', 70, 'Code Complete: Um guia prático para a construção de software, Steve McConnell, Microsoft Press, 2nd Edition, 2004'),
(205, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por: \n         A1*0,1+A2*0,2+TP/3\n\nA1, A2: Atividas Avaliativas\nTP: Trabalhos Práticos', '- A1: 24/09/2013\n- A2: 17/12/2013', 'O estudante deverá ser capaz ao final da disciplina de:\n- conhecer os prerrequisitos necessários para construção de software de qualidade;\n- elaborar códigos-fontes seguindo boas práticas de programação;\n- dividir os códigos-fontes em pacotes conforme sua especialidade;\n- utilizar ferramentas de controle de versão durante o processo de construção de software;\n- conhecer ferramentas de desenvolvimento de software;\n- construir softwares bem documentados.', 'Fundamentos de construção de software \n- Complexidade\n- Manutenibilidade\n- Construção para a verificação \n- Padrões em construção de software. \nGerência de construção \n- Modelos de processos de construção\n- Planejamento de construção\n- Medidas de construção\nProjeto detalhado \nLinguagens empregadas na construção de software\n- Codificação\nTestes de unidade e de integração\n- JUnit\nReutilização de software\nQualidade de código\nIntegração.\n', 'Introdução a Programação', 79, '[1] MARTIN, Robert C., The Clean Coder: A Code of Conduct for Professional Programmers, Pearson Education, 2011; \n[2] MARTIN, Robert C., Clean Code: A Handbook of Agile Software Craftsmanship, Pearson Education, 2009;\n[3] McCONNELL Steve,  Code Complete: A Practical Handbook of Software Construction, 2nd Edition, Microsoft Press, 2004;\n[4] FEATHERS, Michel, Working Effectively with Legacy Code, 1st. edition, Prentice Hall, 2004; \n[5] FOWLER, Martin et al,  Refactoring: Improving the Design of Existing Code, 1st. Edition, Addisson-Wesley Professional, 1999;\n[6] GOODLIFE, Pete,  Code Craft: The Pratice of Writing Excellent Code, 1st. Edition, No Starch Press, 2006;\n[7] PILONE, Dan and MILES, Russ, Head First Software Development, 1st. Edition, O’Reilly, 2008;\n[8] FREEMAN, Elisabeth et al,  Head First Design Patterns, 1st. Editon, O''Reilly Media, 2004.'),
(206, 'A avaliação da disciplina será realizada mediante três provas (P1, P2 e P3). A nota de cada prova será multiplicada pelo fator multiplicativo do aluno até o momento da prova. A média final será obtida pela fórmula:\n\nNF = FM*0.3*P1 + FM*0.4*P2 + FM*0.3*P3,', 'P1 - 02/10/2013\nP2 - 18/11/2013\nP3 - 18/12/2013', '- Desenvolver o raciocínio formal e abstrato.\n- Familiarizar-se com a escrita matemática formal e a linguagem computacional.\n- Apresentar os conceitos básicos de teoria dos grafos e algumas aplicações.', '1. Introdução: apresentação da disciplina e do plano de ensino. Motivação.\n2. Noções de lógica matemática.\n3. Técnicas de demonstração: prova direta, por contrapositiva e por absurdo.\n4. Conjuntos: introdução e operações.\n5. Relações: introdução, operações, propriedades, relações de equivalência e ordem parcial.\n6. Funções: propriedades, funções inversas e composição de funções.\n7. Indução matemática e recursão\n8. Princípios dos números naturais, inteiros, racionais e reais.\n9. Matrizes e sistemas de equações lineares.\n10. Introdução à Teoria dos Grafos\n', 'Esta disciplina deve fornecer embasamento para as disciplinas Estruturas de Dados, Banco de Dados 1 e 2.\nSerão utilizados os conhecimentos adquiridos em Lógica.', 103, 'Ross and Wright. Discrete Mathematics. Prentice-Hall.\nGRIMALDI. Discrete and Combinatorial Mathematics—An Applied Introduction. Addison-Wesley.\nALBERTSON and Hutchinson. Discrete Mathematics with Applications. John Wiley & Sons.\nKenneth, R. Exploring Discrete Mathematics With Maple, McGraw-Hill Science/Engineering/Math; 4th edition\nROSEN, Kenneth H. Matemática Discreta e suas Aplicações. 6.ed. Rio de Janeiro: McGraw Hill, 2009.'),
(207, 'A avaliação da aprendizagem será efetuada considerando-se o material visto em aulas, os exercícios resolvidos em aula, listas de exercícios para resolução extraclasse e trabalhos práticos de implementação propostos durante o curso. Serão realizadas duas p', 'As provas (graus N1 e N2) serão realizadas nas seguintes datas:\n1a Prova (N1) : 20/05/2013 (segunda-feira), e\n2a Prova (N2) : 15/07/2013 (segunda-feira).\n', 'Apresentar estruturas de dados fundamentais, tais como listas, pilhas, matrizes e árvores. Compreender a complexidade de algoritmos. Exercitar as operações básicas sobre as estruturas de dados trabalhadas, visando ao entendimento de sua manipulação de dados. Aplicar recursividade na construção de algoritmos. Desenvolver o raciocínio para a implementação de soluções de problemas usando as estruturas de dados estudadas. ', ' 1 - Introdução\n 1.1 - Estruturas da informação\n 1.2 - Aspectos gerais do desenvolvimento de programas\n\n 2 - Tipos de dados\n 2.1 - Tipos primitivos (inteiro, real, lógico, caracter)\n 2.2 - Tipos construídos (vetor, registro, sequência, alternativa, referência, enumeração)\n\n 3 - Matrizes\n 3.1 - Matrizes unidimensionais\n 3.2 - Matrizes: caso geral\n 3.3 - Matrizes especiais\n 3.4 - Matrizes esparsas\n\n 4 - Cadeias de caracteres\n 4.1 - O tipo de caracteres\n 4.2 - Operações sobre cadeias\n 4.3 - Aplicações\n\n 5 - Listas lineares\n 5.1 - Conceituação\n 5.2 - Operações\n 5.3 - Representação\n 5.4 - Listas com descritor\n 5.5 - Listas duplamente encadeadas\n\n 6 - Pilhas, filas e recursividade\n 6.1 - Estruturas lineares com restrições de acesso\n 6.2 - Estruturas de pilhas\n 6.4 - Aplicações de pilhas e filas\n 6.5 - Recursividade\n\n 7 - Árvores Binárias\n 7.1 - Definição, terminologia e representação\n 7.2 - Árvores binárias\n 7.3 - Construção de árvores\n 7.4 - Algoritmos de caminhamento em árvores binárias\n \n 8 - Aplicação de árvores binárias e filas\n 8.1 - Fila de prioridades (heaps)\n 8.1 - Union & Find\n 8.2 - Codificação de Huffman\n\n 9 - Árvores AVL\n 9.1 - Definição de árvores AVL\n 9.2 - Balanceamento de AVL\n 9.3 - Rotações de subárvores AVL\n\n10 - Árvores B\n10.1 - Busca de um elemento\n10.2 - Inserção de novos elementos\n10.3 - Remoção de elementos\n10.3 - Árvores 2-3\n', 'O aluno deverá aplicar os conhecimentos adquiridos através de disciplinas teóricas básicas (Lógica Matemática, Matemática Discreta, Álgebra Linear, . . .) e os conhecimentos adquiridos nas disciplinas de programação de computadores para entender e dominar', 21, 'W. Celes, R. Cerqueira, J. L. Rangel. Introdução a Estruturas de Dados - com técnicas de programação em C. Ed. Campus - ISBN 85-352-1228-0.\n'),
(208, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:  \n	A1 – Avaliação individual, discursiva e sem consulta a material  – Valor: 10,0 pontos\n	A2 – Avaliação individual, discursiva e sem consulta', '- A1: 22/12/2012, sábado, das 08h às 11h \n- A2: 02/03/2012, sábado, das 08h às 11h\n- AF: de 26 a 30/11/2012 (1a. parte) e de 21 a 25/01/2013 (2a. parte)', 'O estudante deverá ser capaz ao final da disciplina de:\n- conhecer os prerrequisitos necessários para construção de software de qualidade;\n- elaborar códigos-fontes seguindo boas práticas de programação;\n- dividir os códigos-fontes em pacotes conforme sua especialidade;\n- utilizar ferramentas de controle de versão durante o processo de construção de software;\n- conhecer ferramentas de desenvolvimento de software;\n- construir softwares bem documentados.', 'definição de software; prerrequisitos para uma boa construção; boas práticas na definição de requisitos de software; arquitetura de software e seus componentes, escolha da linguagem; convenções de programação e principais práticas projeto de software; formas de acoplamento classes e pacotes; rotinas (métodos), projeto de software em nível de rotina, recursividade; variáveis; escopo; tempo de vida; notação (húngara, javabean, etc); tipos de dados; estruturas; ponteiros e referências; otimização de código; pesquisa em tabelas; qualidade de software; construção colaborativa; testes do desenvolvedor; depuração; refatoração; ferramentas de programação; leiaute, estilo e documentação de código. ', 'Introdução à programação', 80, '[1] MARTIN, Robert C., The Clean Coder: A Code of Conduct for Professional Programmers, Pearson Education, 2011; \n[2] MARTIN, Robert C., Clean Code: A Handbook of Agile Software Craftsmanship, Pearson Education, 2009;\n[3] McCONNELL Steve,  Code Complete: A Practical Handbook of Software Construction, 2nd Edition, Microsoft Press, 2004;\n[4] FEATHERS, Michel, Working Effectively with Legacy Code, 1st. edition, Prentice Hall, 2004; \n[5] FOWLER, Martin et al,  Refactoring: Improving the Design of Existing Code, 1st. Edition, Addisson-Wesley Professional, 1999;\n[6] GOODLIFE, Pete,  Code Craft: The Pratice of Writing Excellent Code, 1st. Edition, No Starch Press, 2006;\n[7] PILONE, Dan and MILES, Russ, Head First Software Development, 1st. Edition, O’Reilly, 2008;\n[8] FREEMAN, Elisabeth et al,  Head First Design Patterns, 1st. Editon, O''Reilly Media, 2004.'),
(209, 'A avaliação da aprendizagem será feita por:\n(i) 2 (duas) Avaliações Teóricas; e (ii) Exercícios (avaliações  de acompanhamento) e trabalho prático.\nA média do aluno é calculada pela fórmula:\nMÉDIA = ( 0,35 * AT1 ) + ( 0,35 * AT2 ) + ( 0,3 * EX )\nAT1 e AT2', 'AT1 - 22/Out/2013\nAT2 - 26/Nov/2013', 'Exercitar a prática de projeto, implementação e utilização de aplicações de Bancos de Dados;\nHabilitar o aluno a propor soluções computacionais para problemas de relativa complexidade na área de Banco de Dados;\nExercitar a capacidade de raciocínio lógico;\nExercitar a capacidade de expressão oral e escrita.', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados\n2. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacional\n- Linguagens para BD relacionais (álgebra relacional e cálculo relacional)\n- SQL\n3. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML\n4. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 'Lógica Matemática (lógica de primeira ordem)\nSistemas Gerenciadores de Banco de Dados', 23, 'ELMASRI, R. e NAVATHE, S.B., Sistemas de Banco de Dados, 6ª ed., Pearson - Addison Wesley, 2011.'),
(210, 'A nota final (NF) será obtida pela fórmula:\nNF =  NP1*0,275 + NP2*0,275 + NP3*0,30 + EX*0,15 \nonde: \n         NP1 representa a nota da primeira prova escrita, valendo 10,0 pontos;\n         NP2 representa a nota da segunda prova escrita, valendo 10,0 ponto', '20/09/2013\n08/11/2013\n20/12/2013', 'Desenvolver o raciocínio formal e abstrato e familiarizar o aluno com a escrita matemática formal e a linguagem computacional.', '1) Fundamentos matemáticos: Conjuntos; Relações e Funções; Lógica Booleana; Teoremas e Provas. Indução Matemática.\n2) Hierarquia de Chomsky.\n3) Alfabetos e Linguagens. \n4) Linguagens Regulares:\n * Expressões Regulares;\n * Autômatos Finitos Determinísticos, Não-determinismo;\n * Linguagens não-regulares e o Lema do Bombeamento;\n * Propriedades das Linguagens Regulares.\n5) Linguagens Livres de Contexto: \n *Gramáticas livres de contexto. Gramáticas regulares.\n * Derivação à esquerda e Ambiguidade.\n * Introdução à análise sintática.\n * Forma normal de Chomsky e de Greibach.\n * Autômato de Pilha; \n * Linguagem Não Livre de Contexto;\n * Propriedades das linguagens livres de contexto.\n6) Máquinas de Turing – Definição formal, variações e equivalência com\noutros modelos.', 'O aluno deverá aplicar conhecimentos adquiridos nas disciplinas matemática discreta (tais como técnicas de demonstração, conjuntos, relação e função) , lógica matemática e teoria dos grafos.\nEsta disciplina deve fornecer embasamento para as disciplinas co', 29, 'HOPCROFT, J.E., ULLMAN, J Introdução à teoria de Autômatos, Linguagens e Computação. Ed. Campus.\nSUDKAMP, Thomas A., Languages and Machines. Addison Wesley Publishing Company. \nSIPSER, M. Introdução a Teoria da Computação, Tomson Learning.'),
(211, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\nP1 – Prova individual – Valor: 10,0 pontos\nP2 – Prova individual – Valor: 10,0 pontos\nP3 – Prova individual – Valor: 10,0 pontos\nE – Exercício', '27/11/12 - Prova 1\n15/01/13 - Prova 2\n22/02/13 - Prova 3\n', '- Dominar a operação de um sistema operacional Unix;\n- Compreender o funcionamento de sistemas operacionais;\n- Conhecer e identificar a arquitetura de um Sistema Operacional de forma geral e específica do estudo de caso;\n- Saber diagnosticar causas de problemas de desempenho de aplicações em Sistemas\nOperacionais;', '1. Conceitos e introdução aos Sistemas Operacionais\n2. Gerência de Processos\n3. Gerência de Memória\n4. Dispositivos de entrada e saída\n5. Gerência de Sistema de Arquivos\n6. Estudos de caso\n', 'Essa disciplina faz uso de conceitos apresentados nas disciplinas de Arquitetura de Computadores e Estruturas de Dados 1, e demanda habilidades de programação desenvolvidas nas disciplinas de Programação de Computadores \n', 51, '- MOTA FILHO, João Eriberto. Descobrindo o Linux. 3a Edição, Novatec, 2012. ISBN: 978-85-7522-278-2\n- OLIVEIRA, Romulo Silva de; TOSCANI, Simao Sirineo; CARISSIMI, Alexandre da Silva. Sistemas Operacionais. Editora: Bookman, 4ª Ed. 2010 - Vol. 11\n- SILBERSCHATZ, Abraham. Fundamentos de sistemas operacionais. 8. ed. Rio de janeiro: LTC, 2011. 515 p. ISBN 9788521617471 (Broch.).'),
(212, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\nP1 – Prova individual – Valor: 9,0 pontos\nP2 – Prova individual – Valor: 9,0 pontos\nT – Trabalho em grupo – Valor: 2,0 pontos\n\nA NF será calcu', '17/10/13 - Prova 1\n16/12/13 - Prova 2\n\n', '- Apresentar conceitos, protocolos e tecnologias da camada de enlace.\n- Apresentar os fundamentos de camada física e os conceitos básicos de telecomunicações e transmissão de dados. \n- Apresentar os conceitos e as principais tecnologias de redes sem fio, assim como os princípios básicos de redes de telefonia celular e de sua convergência com redes de computadores.\n- Familiarizar os alunos com o funcionamento de protocolos de gerenciamento de redes.\n- Apresentar os fundamentos de segurança em redes de computadores.', '1. Camada de enlace\n    1.1.Introdução e serviços\n    1.2.Técnicas de detecção e correção de erros\n    1.3.Protocolos de acesso múltiplo\n    1.4.Endereçamento\n    1.5.Ethernet\n    1.6.Comutadores\n2. Camada física e comunicação sem fio\n   2.1.Fundamentos\n   2.2.Meios de transmissão\n   2.3.Redes locais sem fio\n   2.4.Redes celulares\n   2.5.Mobilidade\n3. Gerenciamento\n   3.1.Conceitos\n   3.2.Infraestrutura para gerenciamento de rede\n   3.3.Gerenciamento de redes TCP/IP\n      3.3.1.SNMP (Simple Network Management Protocol)\n      3.3.2.SMI (Structure of Management Information) e MIB (Management Information Base)\n4. Segurança\n   4.1.Fundamentos\n   4.2.IPsec e VPNs (Virtual Private Networks)\n   4.3.Segurança em redes locais sem fio\n   4.4.Firewalls e sistemas de detecção de intrusão', 'Essa disciplina faz amplo uso de conceitos apresentados nas disciplinas de Arquitetura de Computadores, Estruturas de dados 1, Teoria dos Grafos, Probabilidade e Estatística, Sistemas Operacionais 1 e, sobretudo, Redes de Computadores 1; além de demandar', 28, 'TANENBAUM, A. S., Redes de Computadores, 5a. ed., Prentice Hall, 2011.'),
(213, 'Nota final = (((Trabalho1 + Trabalho2)/2) + Prova+atividades/5)/2\nprova - 8,0\natividades - 2,0\ntrabalhos - 10,0', 'Trabalho 1 = 13/09/2013\nTrabalho 2 = 18/10/2013\nPROVA 22/11/2013\n', '1 Definição do Empreendedor\n2 O Cenário Mundial e Nacional\n3 Movimento Startup\n4 Estruturando e Validando', '1 Definição do Empreendedor\n2 Empreendedor Social\n3 Empreendedorismo no Brasil\n4 O Cenário Mundial\n5 E-growth\n6 Expectativas para 2013\n7 CEBIT 2013\n8 Movimento Startup\n9 O Início e o Modelo\n10 A Validação\n11 O Financiamento\n ', 'Essa disciplina esta relacionada com todas as disciplinas do curso, pois consiste em como gerar um produto ou serviço com valor agregado e vendê-lo. Para isso é importante compreender requisitos técnicos fornecidos pelas disciplinas de engenharia de softw', 3, 'Brown, Tim. Design Thinking. Ed Campus, 2012.'),
(214, 'A avaliação da aprendizagem será efetuada considerando uma prova escrita individual, uma apresentação de trabalho, exercício. A Prova escrita considerará o conteúdo ministrado até a data de sua aplicação.\n\nSerão atribuídas 3 (três) notas, que correspondem', 'Data de realização das avaliações:\n•	07/10/2013 - Prova\n•       28/10/2013 - Trabalho (a partir desta data)\n', 'Trazer à discussão questões éticas, sociais e legais do profissional ligado à área da Computação.\nAnalisar situações hipotéticas e reais relacionadas à ética em Computação e respectivas consequências para a sociedade em geral, para o meio-ambiente, para o cliente e/ou empregador, para a profissão de Computação, e para o profissional em si.\n', '1.	Apresentação da Disciplina\n2.	Ética em Computação\n3.	Código de Ética da ACM \n4.	Legislação Brasileira e Crimes de Informática\n5.	Aspectos Sóciotécnicos\n6.	Projeto/Pesquisa de Campo', 'Embora a disciplina não possua pré-requisito, nem co-requisito dentro da matriz curricular do curso de Sistemas de Informação, seu conteúdo programático permite fornecer um norte para a conduta profissional de seu egresso.', 122, '\n\n1.	JOHNSON, D.G. Computer Ethics, Englewood Cliffs, Prentice Hall, 1985.\n2.	MEIRA, A.C.H. Ética – Ensaios Interdisciplinares sobre Teoria e Práticas Profissionais, Editora Unifeob, 2006.\n3.	Sociedade Brasileira de Computação (SBC), Disponível na Internet em http://www.sbc.org.br\n4.	Association for Computing Machinery (ACM), Disponível na Internet em http://www.acm.org \n'),
(215, 'Média aritmética de todos os testes aplicados durante o período.\n', 'Múltiplos testes regulares sem prévio aviso durante as aulas.\n', '- Desenvolver o raciocínio analítico e a habilidade de elaborar sentenças logicamente precisas.\n- Desenvolver a habilidade de distinguir os argumentos válidos dos inválidos.\n- Empregar os conceitos e técnicas da Lógica na solução de problemas práticos em computação.\n- Iniciar o aluno no paradigma da Programação em Lógica.\n', '- Conceitos básicos da Lógica\n- Cálculo Proposicional\n- Cálculo de Predicados de Primeira Ordem\n', 'Todas as disciplinas de matemática, programação de computadores, arquitetura de computadores, sistemas formais e inteligência computacional.\n\n', 119, 'SILVA, Flávio Soares da. Lógica para Computação. Editora Cengage Learning, 2006.\n'),
(216, 'CRITÉRIO DE AVALIAÇÃO \n\nA nota final (NF) será calculada da seguinte forma:\nNF = P1 + P2 + P3 + P4 + P5 + P6 + 0,4*NT.\n\nSerão realizadas seis testes individuais (P1, P2, P3, P4, P5 e P6), cada uma valendo 10 pontos e trabalhos em grupos e/ou individuais a', 'Teste 1: 06/09/2013\nTeste 2: 24/09/2013\nTeste 3: 22/10/2013\nTeste 4: 08/11/2013\nTeste 5: 29/11/2013\nTeste 6: 13/12/2013\nProva substitutiva: 17/12/2013', '- Desenvolver o raciocínio formal e abstrato;\n- Familiarizar o aluno com a escrita matemática formal e a linguagem computacional;\n- Ensinar ao aluno como redigir demonstrações.', '1. Técnicas de Demonstração.\n2. Conjuntos: Operações. Produto Cartesiano.\n3. Relações: Operações, Representação, Propriedades. Relações de equivalência e de ordem parcial.\n4. Funções: Propriedades, Funções Inversas e composição de funções.\n5. Indução Matématica e Recursão.\n6. Noções sobre números naturais e inteiros: Algoritmo da divisão, Mínimo múltiplo comum,\nmáximo divisor comum, Aritmética modular, Teorema Chines do Resto. Aplicações.', 'Esta disciplina é base fundamental principalmente para as disciplinas Teoria dos Grafos, Análise e Projeto de Algoritmos, Pesquisa Operacional, Linguagens Formais e Autômatos, Teoria da Computação. Serão utilizados conhecimentos adquiridos em Lógica Matem', 30, 'ROSEN, Kenneth H. Matemática Discreta e suas Aplicações. 6.ed. Rio de Janeiro: McGraw Hill, 2009.\nSCHEINERMAN, E. . MATEMATICA DISCRETA, THOMSON PIONEIRA.'),
(217, 'Primeira avaliação escrita individual (A1) - Valor: 10,0 pontos\nSegunda avaliação escrita individual (A2) - Valor: 10,0 pontos\nTerceira avaliação escrita individual (A3) - Valor: 10,0 pontos\nApresentação dos trabalhos em grupo (TG) - Valor: 10,0 pontos\nNo', 'A1 - 23/09/2013\nA2 - 31/10/2013\nA3 - 28/11/2013\nTG - 05 à 19/12/2013\nAvaliação Substitutiva - 23/12/2013', '- Apresentar as atividades de teste de software no ciclo de vida da Engenharia de Software;\n- Compreender a importância das atividades de teste, bem como as técnicas e as estratégias relacionadas ao processo;\n- Discutir os diferentes tipos de teste de software e as suas utilizações;\n- Mostrar a importância do gerenciamento da qualidade no processo de desenvolvimento de software.', '- Introdução ao Teste de Software; \n- Processo de Teste de Software;\n- Técnicas, Níveis e Tipos de Teste de Software;\n- Critérios de Teste de Software;\n- Ambiente de Teste de Software;\n- Análise de Riscos;\n- Planejamento e Execução dos Testes;\n- Gestão de Defeitos;\n- Entrega e Apresentação de Trabalhos: Estudo de Caso (Planejamento, Execução e Gestão de Defeitos).', 'A disciplina Tópicos I aborda o Teste de Software com o intuito de contribuir na melhoria da qualidade dos produtos e serviços construídos/disponibilizados aos usuários finais. Portanto, relaciona-se com todas as disciplinas do curso do ponto de vista pro', 116, 'DELAMARO. M.E.; MALDONADO, J. C.; JINO, M.; Introdução ao Teste de Software. Rio de Janeiro: Campus, 2007.\nMYERS, G.J.; The Art of Software Testing. 2nd ed.; Hoboken, New \nJersey: John Wiley & Sons, 2004.'),
(218, 'Média aritmética de todos os testes aplicados durante o período.', 'Múltiplos testes regulares sem prévio aviso durante as aulas.', '- Desenvolver o raciocínio analítico e a habilidade de elaborar sentenças logicamente precisas.\n- Desenvolver a habilidade de distinguir os argumentos válidos dos inválidos.\n- Empregar os conceitos e técnicas da Lógica na solução de problemas práticos em computação.\n- Iniciar o aluno no paradigma da Programação em Lógica.', '- Conceitos básicos da Lógica\n- Cálculo Proposicional\n- Cálculo de Predicados de Primeira Ordem', 'Todas as disciplinas de matemática, programação de computadores, arquitetura de computadores, sistemas formais e inteligência computacional.', 120, 'SILVA, Flávio Soares da. Lógica para Computação. Editora Cengage Learning, 2006.'),
(219, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n\n	P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova escrita individual – Valor: 10,0 pontos\n	TG – Média da notas do trabalhos em', 'A1. 07/06/2013\nA2. 26/07/2013\n', 'Fazer com que o aluno entenda o papel do projeto detalhado de software no ciclo de vida de software e no contexto de vários modelos de ciclo de vida;\n\nFazer com que o aluno entenda a distinção e a relação existente entre projeto arquitetural de software e projeto detalhado de software;\n\nFazer como que o aluno entenda os princípios básicos de projeto de software (encapsulamento, coesão e acoplamento) e os padrões de projeto que permitem aplicá-los durante o desenvolvimento de software;\n\nFazer com que o aluno entenda as diferentes abordagens para projeto de software (projeto funcional, projeto funcional, projeto orientado a objetos, projeto orientado por responsabilidades e por contratos);\n\nFazer com que o aluno compreenda os componentes de modelagem estrutural (estática) e modelagem comportamental (dinâmica) que fazem parte do processo de projeto de software;\n\nFazer com que o aluno conheça as principais métricas e avaliações da qualidade de projetos de software;\n\nFazer com que o aluno aplique na prática de laboratório um método de projeto de software orientado a objetos que utilize a linguagem de modelagem UML e padrões de projeto;\n\nFazer com que o aluno aplique na prática de laboratório ferramenta CASE para suportar a documentação dos artefatos de projeto obtidos;\n', '\nVisão geral do projeto de software:\n\n• Princípios básicos: abstração e particionamento de problemas; modularização; acoplamento; coesão e encapsulamento de informação;\n• A questão da arquitetura de software; definição, principais modelos e padrões; diferenças entre projeto arquitetural e projeto detalhado.\n• Modelo estrutural e comportamental de software;\n• Projeto funcional X projeto O.O;\n• Projeto de Interfaces;\n• Projeto de Persistência;\n\nMétodo de análise e desenho orientado a objetos usando UML e padrões de projeto arquitetural e detalhado de software.\n\nAspectos notáveis de projetos de Software:\n• Concorrência;\n• controle de eventos;\n•  distribuição;\n• tratamento de exceções;\n• tolerância a falhas;\n• interfaces e prototipação;\n• persistência de informação.\n• mapeamento para código\n\nMétricas de projetos e técnicas de avaliação nas etapas de desenvolvimento. Normas e padrões pertinentes com base nas normas de desenvolvimento e obtenção de qualidade;\n\n', 'A disciplina de Projeto de Software está intimamente ligada com as demais disciplinas ligadas à área de Engenharia de Software (Engenharia de Software, Requisitos de Software) e de  Banco de dados.\nOs conceitos de ciclo de vida, processo e qualidade de so', 27, '1.	Larman, Craig. Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, Prentice-Hall, 3nd edition, 2004.'),
(220, 'Todas valendo 10 pontos:\n\nSE: Seminário em grupo\nTI: Trabalho individual\nP1: Prova escrita individual\nP2: Prova escrita individual\nP3: Prova escrita individual\n\nNF = [ P1 + (2 * P2) + (2 * P3) + (2 * TI) + SE] / 8', 'P1: 10/05/2013\nP2: 14/06/2013\nP3: 12/07/2013\nSE: 23/07/2013\nTI: 05/05/2013', '- Conhecer diferentes paradigmas de programação.\n- Identificar e compreender as características mais importantes de cada paradigma.\n- Compreender a aplicabilidade dos paradigmas e das linguagens que os representam.\n', '1.Introdução\n1.1. Motivação e aplicações de linguagens de programação\n1.2. Critérios de avaliação da linguagem\n1.3. Categorias de linguagem\n1.4. Métodos de implementação\n1.5. Ambientes de programação\n1.6. Evolução das principais linguagens de programação\n2.Sintaxe e semântica\n2.1. O problema geral de descrever a sintaxe\n2.2. Métodos formais para descrever a sintaxe\n2.3. Gramáticas de atributos\n2.4. Semântica dinâmica\n3.Nomes, vinculações, verificação de tipos e escopos\n3.1. Nomes, variáveis e constantes nomeadas\n3.2. Vinculação\n3.3. Verificação, tipificação e compatibilidade de tipos\n3.4. Escopo, tempo de vida e ambientes de referenciamento\n4.Tipos de dados\n4.1. Tipos de dados primitivos\n4.2. Tipo arranjo (array), registro e união\n4.3. Tipo ponteiro e tipo referência\n5.Expressões e atribuições\n5.1. Expressões aritméticas\n5.2. Operadores sobrecarregados\n5.3. Conversões de tipos\n5.4. Expressões relacionais e booleanas\n5.5. Avaliação curto-circuito\n5.6. Instruções de atribuição\n6.Estruturas de Controle\n6.1. Instruções de seleção\n6.2. Instruções iterativas\n6.3. Desvio incondicional\n7.Subprogramas\n7.1. Ambientes de referência locais\n7.2. Métodos de passagem de parâmetros\n7.3. Implementação de funções\n8.Programação Orientada a Objeto\n8.1. Questões de projeto referentes às linguagens orientadas a objeto\n8.2. Suporte para programação orientada a objeto em C++ e Java\n8.3. Implementação de construções orientadas a objeto\n9.Tratamento de exceções e manipulação de eventos\n9.1. Introdução à manipulação de exceções\n9.2. Manipulação de exceções em C++ e Java\n10.Linguagens de programação funcionais\n10.1. Introdução e fundamentos\n10.2. Algumas linguagens funcionais: Lisp, Scheme, Haskell\n10.3. Aplicações das linguagens funcionais\n11.Linguagens de programação lógica\n11.1. Introdução e fundamentos\n11.2. Visão geral da programação lógica e linguagem Prolog\n11.3. Aplicações da programação lógica\n', 'Linguagens de programação muitas vezes são fortemente baseadas no funcionamento do\ncomputador, por isso a importância da disciplina de Arquitetura de Computadores. O entendimento dos recursos da linguagem influenciam nas decisões de projeto de software, a', 6, 'SCOTT, M. - Programming Language Pragmatics, 3a. ed., Morgan Kaufmann, 2009'),
(221, 'Primeira avaliação escrita individual (A1) - Valor: 10,0 pontos\nSegunda avaliação escrita individual (A2) - Valor: 10,0 pontos\nTerceira avaliação escrita individual (A3) - Valor: 10,0 pontos\nApresentação dos trabalhos em grupo (TG) - Valor: 10,0 pontos\nNo', 'A1 - 23/09/2013\nA2 - 30/10/2013\nA3 - 27/11/2013\nTG - 04 à 18/12/2013\nAvaliação Substitutiva - 23/12/2013', '- Descrever o conceito de qualidade num contexto geral;\n- Apresentar as principais normas de qualidade e sua aplicabilidade (Série ISO 9000);\n- Retratar o conceito de qualidade no contexto de software (ISO 9000-3);\n- Mostrar as principais normas de qualidade de produto de software e sua aplicabilidade (ISSO 9126);\n- Expor os principais conceitos relacionados a qualidade de Processo de Software;\n- Demonstrar as principais normas de qualidade de processo de software e sua aplicabilidade (ISSO 12207, ISO 15504);\n- Evidenciar os principais modelos maturidade de processo de software e sua aplicabilidade (CMM, MPS.BR);\n- Apontar outros modelos que definem padrões de qualidade (IEEE Std 1028-2008, IEEE Std 1465-2004, IEEE Std 12207-2008, ITIL);\n- Mostrar pelo menos um estudo de caso em Qualidade de Software.\n', '- Série ISO 9000: ISO 9000, ISO 9001, ISO 9004;\n- Qualidade no Contexto de Software: ISO 9000-3;\n- Qualidade no Produto de Software: ISO 9126;\n- Qualidade no Processo de Software: ISO 12207, ISO 15504;\n- Modelos de Maturidade de Processo: CMMI, MPS.BR;\n- Outros Padrões de Qualidade: IEEE Std 1028-2008, IEEE Std 1465-2004; IEEE Std 12207-2008;\n- Processo de Desenvolvimento de Software: RUP e Metologias Ágeis;\n- Verificação e Validação;\n- Auditoria de Sistemas;\n- Entrega e Apresentação de Trabalhos: Estudo de Caso (RUP, Processos Ágeis de Software, Teste de software, Verificação e Validação de Software, Auditoria de Sistemas, ITIL, COBIT).', 'A disciplina Qualidade de Software serve como referência para a melhoria da qualidade dos processos vistos na disciplina Engenharia de Software e Engenharia de Requisitos, pois sugere normas para definição dos processos e medição de seu nível de maturidad', 102, 'SOFTEX. MPS.BR – Guia de Avaliação: 2012, Maio/2012. Disponível em: www.softex.br.\nSOFTEX. MPS.BR – Guia de Aquisição, Outubro/2011. Disponível em: www.softex.br.\nSOFTEX. MPS.BR – Guia de Implementação - Parte 1 a 12, Julho/2011. Disponível em: www.softex.br.'),
(222, 'N1: Primeira Avaliação  - Valor: 3 pontos  \nN2: Segunda Avaliação - Valor: 6 pontos \nN3:Listas (5 Listas no total) - Valor: 1 ponto\n\nNota Final = N1 + N2 + N3\n', '20/09/2013: Primeira Avaliação\n13/12/2013: Segunda Avaliação', '- Entender as características das principais partes do computador e suas inter-relações.\n- Compreender como os dados são armazenados e manipulados pelo computador.\n- Apresentar como os computadores interagem com o meio externo.\n- Compreender técnicas que melhoram o desempenho do computador e  consequentemente das aplicações.', '1. Organização dos computadores\n1.1. Linguagens, níveis e máquinas virtuais\n1.2. Evolução das máquinas multinível\n\n2. Sistema de numeração e representação de dados\n2.1. Conversão de base: octal, decimal, binário e hexadecimal\n2.2. Tipos booleanos, caractere, inteiro e decimal\n\n3. Memória primária\n3.1. Organização e endereçamento\n3.2. Ordenação de bytes\n3.3. Códigos de correção de erro\n3.4. Memória cache\n\n4. Barramento\n4.1. Barramentos síncronos e assíncronos\n4.2. Árbitragem de barramento\n4.3. Exemplo de barramentos: ISA, PCI, PCI Express, etc.\n\n5. Dispositivos de entrada e saída\n5.1. Técnicas de entrada e saída\n5.2. Dispositivos de entrada e saída: discos\n\n6. Processador\n6.1. Ciclo do processador\n6.2. Formato de instrução\n6.3. Modelos de endereçamento\n6.4. Pipeline\n\n7. Paralelismo de dados e controle\n7.1. Speedup, eficiência e escalabilidade\n7.2. Leis de Amadahl e Gustafson', 'A arquitetura dos computadores influencia, por exemplo, a linguagem de programação, a\ninterconexão de computadores e o desempenho de sistemas. O aluno deverá aplicar os\nconhecimentos adquiridos em várias disciplinas, principalmente: Programação Imperativa', 96, '.'),
(223, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\nNF = 0,4*NP1 + 0,4*NP2 + 0,2*NT\nonde:\nNP1 representa a nota da primeira prova escrita (P1);\nNP2 representa a nota da segunda prova escrita (P2);\nNT representa a nota do trabalho.\n', 'Prova 01 (P1): 20/09/2013\nProva 02 (P2): 11/12/2013', 'Capacitar o aluno a compreender a arquitetura e o funcionamento dos sistemas operacionais modernos, propiciando o conhecimento das aplicações práticas dos sistemas operacionais.', '1. Conceito de Sistemas Operacionais\n2. Histórico\n3. Fundamentos de Hardware e Software\n4. Tipos de Sistemas Operacionais\n5. Gerência de Processos\n6. Gerência de Memória\n6.1. Mono-programação\n6.2. Memória Virtual\n6.2.1 Segmentação\n6.2.2 Paginação\n7. Gerência de Sistema de Arquivos\n7.1. FAT16 e FAT32\n7.2. NTFS\n7.3. EXT\n7.4. ReiserFS\n7.5. DMA\n7.6. RAID\n', 'O aluno deve aplicar os conhecimentos adquiridos através das disciplinas: Algoritmos e Programação 1 e 2. Sistemas Operacionais é a base para: Redes de Computadores, Programação e Engenharia De Software.\n', 128, 'DEITEL, H. Sistemas Operacionais, Prentice-Hall, 2005'),
(224, '2 Provas (P1 e P2)\nExercícios de Laboratório (EXL)\nSeminário (SEM)\n\nNF =0,3 * P1 + 0,4 * P2 + 0,2 *  EXL + 0,1 * SEM', '09/10/2013 (Quarta) P1\n16/12/2013 (Segunda) P2\nSeminários: 04/12/2013', 'Capacitar o aluno a: Reconhecer, entender, e comparar as diferentes definições existentes do termo arquitetura de software; Conhecer a definição de Arquitetura de Software pelo Padrão ISO/IEEE 1471-2000; Conhecer os componentes de construção de um software e sua relação com outros softwares; Conhecer os modelos de arquiteturas;\nDesenvolver softwares aplicando o estilo apropriado; Desenvolver softwares aplicando os atributos de qualidade de software; Entender o conceito de transações distribuídas e conhecer os protocolos para coordenação de transações distribuídas (XA, MTC, etc);\nConhecer a linguagem de marcação XML, suas derivações e aplicações em arquiteturas de softwares; Conhecer os modelos de softwares em camadas e suas particularidades;\nDesenvolvedor aplicativos com utilização de servidores de aplicação; Conhecer os modelos e notações utilizadas para especificar Processos de Arquitetura de Software; Conhecer os conceitos de Arquiteturas Dirigidas por Modelos (MDA); Especificar arquiteturas de softwares conforme o domínio; Integrar softwares desenvolvidos em tecnologias diferentes; Conhecer protocolos para comunicação de softwares; Conhecer e desenvolver softwares baseado em arquitetura orientada a serviços (SOA); Conhecer e desenvolver aplicativos baseados em eventos, orientado a mensagens e utilizando MVC; Entender os conceitos de SOAP e WSDL; Desenvolver aplicativos com uso de Web Services; Conhecer e desenvolver aplicativos com o uso de ESB (Enterprise Service Bus), e outros. ', 'Introdução à Arquitetura de Software; Estilos Arquiteturais; Atributos de Qualidade de Software; Modelo de Software em Camadas; Tecnologias para Middleware; Requisitos Arquiteturais; Análise Arquitetural; Arquiteturas de Domínio Específico; Introdução ao XML; Model-View-Controller (MVC); Arquitetura Dirigida por Modelos (MDA); Webservices; Arquitetura Orientada a Serviços (SOA) e Barramento de Serviços Empresariais (ESB).\n', 'Requisitos de Software; Construção de Software; Projeto Detalhado de Software; Verificação e Validação; Manutenção de Software e Qualidade de Software.', 105, '- EJB 3 in Action Debu Panda et al, Manning Publications, 2008\n- Enterprise JavaBeans 3.0 Bill Burke & Richard Monson-Haefel, O''Reilly, 2006\n- Enterprise JavaBeans Technology: http://java.sun.com/products/ejb/\n- EJB 3 em Ação, Reza Rahman; Debu Panda; Lane, Derek, Alta Books, 2009.\n- Enterprise Java Beans 3.0, Bill Burke & Richard Monson-Haefel, Pearson, 2007.\n- EJB 3 Profissional - Java Persistence API, Merrick Schincariol, Ciência Moderna, 2008.\n\n'),
(225, 'Critério de avaliação \nA avaliação de aprendizagem será feita utilizando os seguintes itens de avaliação e percentuais:\n\nMF = (0,4 * MT) + (0,6 * MP) onde \n\nMT = Média das notas de trabalhos individuais e em grupo\nMP = Média das provas escritas individuai', '1ª. prova: 04/12/2012\n2ª. prova: 01/03/2013\n', '1. Fazer com que o aluno entende a aplicação de métodos de desenvolvimento de software dentro do ciclo de vida de software.\n2. Fazer com que o aluno entenda o paradigma orientado a objetos e as principais diferenças em relação ao paradigma de desenvolvimento estruturado.\n3. Habilitar o aluno a entender e aplicar um método de desenvolvimento usando o paradigma orientado a objetos, as ferramentas de modelagem da UML e o ciclo de vida iterativo e incremental.\n4. Mostrar ao aluno as principais diferenças entre os processos mais formais e os processos ágeis para o desenvolvimento de software e a implicação dessas diferenças na aplicação de métodos de desenvolvimento.', 'Unidade I – Paradigmas de Desenvolvimento de Software\n1.	Software, Ciclo de Vida de Software e Processo de Software.\n2.	Engenharia de Software e a visão em camadas: qualidade, processo, métodos, ferramentas e técnicas.\n3.	Engenharia de software e princípios básicos de desenvolvimento de Software.\n4.	Evolução histórica de métodos de desenvolvimento\n5.	Visão geral das diferenças entre Paradigma Estruturado e Paradigma Orientado a Objetos.\n6.	Detalhamento dos conceitos do Paradigma Orientado a Objetos (abstração, encapsulamento, classes, métodos, objetos, herança, polimorfismo, delegação).\n7.	UML como ferramenta para modelagem orientada a objetos.\nProva\nUnidade II – Processo e Método de Desenvolvimento Orientado a Objetos. \n1.	Abordagem iterativa e incremental.\n2.	Etapas e artefatos produzidos.\n3.	Levantamento e Especificação de Requisitos.\n4.	Casos de uso.\n5.	Construção de modelo de análise e de desenho de software.\n6.	Mapeamento de modelo de projeto para implementação.\n7.	Processos Formais x Processos Ágeis\n8.	Práticas ágeis e contexto de sua aplicação.\n9.	Impacto das práticas ágeis nos métodos de desenvolvimento.\n', 'O aluno deve aplicar os conhecimentos adquiridos na disciplina Introdução à Engenharia de Software para entender o contexto em que um método de desenvolvimento de software é aplicado nas organizações, como esse método se encaixa dentro do ciclo de vida de', 74, 'Utilizando UML e Padrões - Uma Introdução a Análise e Projeto Orientado a Objetos, Craig Larman, 3ª Edição, Editora Bookman, 2007'),
(226, 'O processo de avaliação dos discentes será contínuo. Observar-se-á a participação, organização, responsabilidade e desempenho nas atividades, exercícios e testes realizados ao longo do semestre. A nota final será calculada a partir das notas de duas prova', 'P1- 22/10/2113\nP2- 10/12/2013', 'Elaborar algoritmos a partir da descrição textual de pequenos problemas;\nDesenvolver programas em uma linguagem de programação procedural de alto nível;\nSelecionar estruturas de dados simples para a implementação dos programas;\nElaborar algoritmos específicos para a solução de problemas numéricos e não numéricos;\nDesenvolver programas, na linguagem de programação C, dentro de suas atividades acadêmicas e profissionais;\nUtilizar ferramentas para o desenvolvimento de programas.', 'Conceitos básicos de computação: Hardware e software. Noções de sistemas operacionais. Lógica de programação: algoritmos. Implementação em uma linguagem de programação.', 'Os conhecimentos de lógica de programação adquiridos nesta disciplina serão usados em disciplinas do curso, tais como Cálculo Numérico e outras disciplinas que necessitem de programação', 39, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nCONTEÚDOS ONLINE\nFundamentos de Linguagem C: www.dca.ufrn.br/~lmarcos/courses/DCA800/apostila_C.pdf\nC Programming: http://www.strath.ac.uk/CC/Courses/NewCcourse/ccourse.html\nLinguagem C:  http://www.i2.com.br/~rora/aulas/topicos/index.html'),
(227, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina que será composta por: \nAVi – Provas escrita individuais – Valor: 10,0 pontos, para i de 1 a 3 \nS - Seminários - Valor: 10,0 pontos \nLj – Listas de exercício – Valor: 1', 'AV1: 17/09/2013\nAV2: 15/10/2013\nAV3: 26/11/2013\nS: 29 de novembro e 3, 6, 10 e 13 de dezembro.\n', 'Introduzir o conceito de máquina de Turing como modelo computacional e definição formal de algoritmos.\n\nUtilizar o modelo computacional apresentado para identificar limitações em computabilidade e classes de problemas computáveis.\n\nDesenvolver a capacidade analítica para identificação de problemas, justificadas de maneira formal.', 'Máquinas de Turing e a Tese Church-Turing \nDecidibilidade \nRedutibilidade \nComplexidade de Tempo \nComplexidade de Espaço \nTópicos em Teoria da Computabilidade e Complexidade.', 'Pré-requisitos:\nLinguagens Formais e Autômatos - Pré-requisito oficial de TC\nAnálise e Projeto de Algoritmos - Importante ter cursado antes de TC\nMatemática Discreta - Importante ter cursado antes de TC\nLógica Matemática - Importante ter cursado antes de', 9, 'W.A. Carnielli; R.L. Epstein; Computabilidade: Funções Computáveis, Lógica e os Fundamentos da Matemática. 2a edição, ed. Unesp, 2009.\n\nT. H. Cormen, C.E. Leiserson, R.L. Rivest, Introduction to Algorithms, McGraw- Hill, New York, 1990.\n');
INSERT INTO `plano` (`id`, `criterioavaliacao`, `datarealizacaoprovas`, `objetivosespecificos`, `programa`, `relacaooutrasdisciplinas`, `turma_id`, `bibliografiasugerida`) VALUES
(228, 'Critério de avaliação \nA avaliação de aprendizagem será feita utilizando os seguintes itens de avaliação e percentuais:\n\nN1 = 0,4 * MT\nN2 = 0,6 * MP\n\nMF = N1 +  N2 , onde \n\nMT = Média das notas de trabalhos individuais e em grupo\nMP = Média das provas esc', '1ª. prova: 01/10/2013\n2ª. prova: 03/12/2013\n', '1. Fazer com que o aluno entenda a aplicação de métodos de desenvolvimento de software dentro do ciclo de vida de software.\n2. Fazer com que o aluno entenda o paradigma orientado a objetos e as principais diferenças em relação ao paradigma de desenvolvimento estruturado.\n3. Habilitar o aluno a entender e aplicar um método de desenvolvimento usando o paradigma orientado a objetos, as ferramentas de modelagem da UML e o ciclo de vida iterativo e incremental.\n4. Mostrar ao aluno as principais diferenças entre os processos mais formais e os processos ágeis para o desenvolvimento de software e a implicação dessas diferenças na aplicação de métodos de desenvolvimento.', 'Unidade I – Paradigmas de Desenvolvimento de Software\n1.	Software, Ciclo de Vida de Software e Processo de Software.\n2.	Engenharia de Software e a visão em camadas: qualidade, processo, métodos, ferramentas e técnicas.\n3.	Engenharia de software e princípios básicos de desenvolvimento de Software.\n4.	Evolução histórica de métodos de desenvolvimento\n5.	Visão geral das diferenças entre Paradigma Estruturado e Paradigma Orientado a Objetos.\n6.	Detalhamento dos conceitos do Paradigma Orientado a Objetos (abstração, encapsulamento, classes, métodos, objetos, herança, polimorfismo, delegação).\n7.	UML como ferramenta para modelagem orientada a objetos.\nProva\nUnidade II – Processo e Método de Desenvolvimento Orientado a Objetos. \n1.	Abordagem iterativa e incremental.\n2.	Etapas e artefatos produzidos.\n3.	Levantamento e Especificação de Requisitos.\n4.	Casos de uso.\n5.	Construção de modelo de análise e de desenho de software.\n6.	Mapeamento de modelo de projeto para implementação.\n7.	Processos Formais x Processos Ágeis\n8.	Práticas ágeis e contexto de sua aplicação.\n9.	Impacto das práticas ágeis nos métodos de desenvolvimento.', 'O aluno deve aplicar os conhecimentos adquiridos na disciplina Introdução à Engenharia de Software para entender o contexto em que um método de desenvolvimento de software é aplicado nas organizações, como esse método se encaixa dentro do ciclo de vida de', 75, 'Utilizando UML e Padrões - Uma Introdução a Análise e Projeto Orientado a Objetos, Craig Larman, 3ª Edição, Editora Bookman, 2007'),
(229, 'NF = (((T1 + T2 + T3)/3) + P1)/2', '- Trabalho sobre Computação Evolucionária (Trabalho 1);\n- Trabalho de implementação de um AG (Trabalho 2);\n- Trabalho de Implementação de uma RNA (Trabalho 3);\n- Prova 1 - sobre CE e RNA na data de 05/12/13.', 'Apresentar uma visão abrangente das Redes Neurais Artificiais e da Computação Evolucionária, além de apresentar métodos que podem auxiliar no processo de resolução de problemas complexos.', '1. Introdução à Inteligência Computacional\n2. Introdução à Computação Evolucionária\n- Apresentação da disciplina;\n- Introdução sobre CE;\n- Conceitos Biológicos;\n- Histórico;\n- Conceitos gerais e dos diferentes AE;\n- O Projeto de um AE;\n- Um código canônico geral.\n3. Algoritmos Genéticos [slides e livro [2] capítulo 9]\n1. Introdução;\n2. Conceitos, Fluxograma, Pseudo-código;\n3. População Inicial;\n4. Operadores (Seleção, Reprodução e Sobrevivência);\n5. Parametrização;\n6. Aplicações;\n7. Trabalho de implementação de um AG para o problema da Mochila\nMultidimensional. [5] – OR-Library.\n4. Conceitos sobre Redes Neurais Artificias\n- Histórico\n- Topologias\n- Aprendizado da RNA\n- Aplicações', 'Estrutura de Dados, Programação e Banco de Dados.', 49, '1. Russell, S., Norvig, P. Inteligência Artificial, Editora Campus, 2004.  (Livro Texto)\n2. Rezende, S. Sistemas Inteligentes: Fundamentos e Aplicações, Editora Manole, 2005.\n3. Luger, G. F., Inteligência Artificial - Estruturas e Estratégias para a Solução de Problemas\nComplexos, 4a Edição, Bookman, 2004.\n4. Engelbrecht, Andries P . Fundamentals of computational swarm intelligence. 	Hoboken, NJ: WILEY, 2005.\n5. Goldberg, David E. Genetic algorithms in search, optimization, and machine learning. 2009.\n6. Russel Eberhart e Yuhui Shi. Computational Intelligence: Concepts to Implementations. Morgan\nKaufmann, 2007.\n7.  Andries P. Engelbrecht. Computational Intelligence: An Introduction. New York: Wiley, 2002.\n8. Kenneth A. De Jong. Evolutionary Computation: A Unified Approach. MIT Press, 2006.\n9. Ricardo Liden. Algoritmos Genéticos. 2a. Edição. Brasport, 2008.\n10. Artigos relevantes.'),
(230, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n\n	P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova escrita individual – Valor: 10,0 pontos\n	P3 – Prova escrita individual – Valo', '- P1: 03/09/2013\n- P2: 29/05/2013\n- P3: 19/07/2013\n\n', 'Detalhar conceitos do suporte e simulação de paralelismo em sistemas operacionais; detalhar\nconceitos de processos, threads e comunicação entre processos; apresentar conceitos e técnicas de gerência de memória e fixar os conceitos adquiridos através de estudos de caso com sistemas operacionais comerciais (livres ou não).', 'Tópico Procedimento Didático Número de Aulas Início\n1 Introdução\n1.1. Revisão de Conceitos de Arquitetura de Computadores\n1.2. Definição de Sistema Operacional (SO)\n1.3. História dos Sistemas Operacionais\n1.4. Conceitos Fundamentais de SO\n1.5. Chamadas ao SO\n1.6. Estrutura de um SO\n2 Processos e Threads\n2.1. Processos\n2.2. Threads\n2.3. Comunicação InterProcessos (CIP)\n2.4. Problemas clássicos de CIP\n2.5. Escalonamento\n3 Deadlocks\n3.1. Recursos\n3.2. Introdução aos Deadlocks\n3.3. Algoritmo do Avestruz\n3.4. Detecção e Recuperação de Deadlocks\n3.5. Prevenção de Deadlocks\n4 Gerenciamento de Memória\n4.1. Gerenciamento básico\n4.2. Troca de Processos\n4.3. Memória Virtual\n4.4. Algoritmo de substituição de páginas\n4.5. Modelagem de algoritmos de substituição de páginas\n4.6. Questões de projeto em sistemas de paginação\n4.7. Implementação\n4.8. Segmentação', 'Esta disciplina é pré-requisito para a disciplina de Sistemas Operacionais 2. Os conceitos de\ncomunicação entre processos são extensíveis à disciplina de Sistemas Distribuídos, Redes de\nComputadores e a quaisquer disciplinas de programação que utilizem-se', 15, '\nDAVIS, W. Sistemas Operacionais,: uma visão sistemática, Campus, 1991'),
(231, 'NF = (((T1 + T2 + T3)/3) + P1)/2', '- Trabalho sobre Computação Evolucionária (Trabalho 1), entrega até dia 07/11/12;\n- Trabalho de implementação de um AG (Trabalho 2), entrega até dia 05/12/12;\n- Trabalho de Implementação de uma RNA (Trabalho 3), entrega até dia 13/02/13;\n- Prova 1 - sobre', 'Apresentar uma visão abrangente das Redes Neurais Artificiais e da Computação Evolucionária, além de apresentar métodos que podem auxiliar no processo de resolução de problemas complexos.', '1. Introdução à Inteligência Computacional\n2. Introdução à Computação Evolucionária\n- Apresentação da disciplina;\n- Introdução sobre CE;\n- Conceitos Biológicos;\n- Histórico;\n- Conceitos gerais e dos diferentes AE;\n- O Projeto de um AE;\n- Um código canônico geral.\n3. Algoritmos Genéticos [slides e livro [2] capítulo 9]\n1. Introdução;\n2. Conceitos, Fluxograma, Pseudo-código;\n3. População Inicial;\n4. Operadores (Seleção, Reprodução e Sobrevivência);\n5. Parametrização;\n6. Aplicações;\n7. Trabalho de implementação de um AG para o problema da Mochila\nMultidimensional. [5] – OR-Library.\n8. Conceitos sobre Redes Neurais Artificias\n- Histórico\n- Topologias\n- Aprendizado da RNA\n- Aplicações', 'Estrutura de Dados, Programação e Banco de Dados.', 41, '1. Russell, S., Norvig, P. Inteligência Artificial, Editora Campus, 2004.  (Livro Texto)\n2. Rezende, S. Sistemas Inteligentes: Fundamentos e Aplicações, Editora Manole, 2005.\n3. Luger, G. F., Inteligência Artificial - Estruturas e Estratégias para a Solução de Problemas\nComplexos, 4a Edição, Bookman, 2004.\n4. Engelbrecht, Andries P . Fundamentals of computational swarm intelligence. 	Hoboken, NJ: WILEY, 2005.\n5. Goldberg, David E. Genetic algorithms in search, optimization, and machine learning. 2009.\n6. Russel Eberhart e Yuhui Shi. Computational Intelligence: Concepts to Implementations. Morgan\nKaufmann, 2007.\n7.  Andries P. Engelbrecht. Computational Intelligence: An Introduction. New York: Wiley, 2002.\n8. Kenneth A. De Jong. Evolutionary Computation: A Unified Approach. MIT Press, 2006.\n9. Ricardo Liden. Algoritmos Genéticos. 2a. Edição. Brasport, 2008.\n10. Artigos relevantes.'),
(232, 'Serão aplicadas várias avaliações no decorrer do semestre letivo (no mínimo oito avaliações). Para a composição da nota final de cada aluno, será calculada a média das notas obtidas nas avaliações, excluídas a menor e a maior notas.', '.', 'Estudar técnicas fundamentais para a análise de algoritmos através da investigação, e implementação, de soluções eficientes para problemas recorrentes em aplicações computacionais.\n\nProver critérios  e ferramentas de avaliação para o desenvolvimento e identificação de algoritmos eficientes.', 'Conceitos Básicos\nComplexidade de Algoritmos\nDividir e conquistar\nAlgoritmos de ordenação\nProgramação dinâmica\nAlgoritmos Gulosos\nAlgoritmos em grafos\nAlgoritmos Probabilísticos', 'Pré-requisito:  Estrutura de Dados I \n                          \nImportante ter cursado: Matemática Discreta\n                                           Cálculo 1 e 2 \n                      \n', 8, 'PAPADIMITRIOU, C. H., VAZIRANI, U. V., DASGUPTA, S.. Algoritmos. 2009. Mcgraw-Hill Brasil. ISBN 9788577260324.\n\nBRASSARD, G., Bratley, P., Fundamentals of algorithmics, Prentice Hall. ISBN: 0-13-335068-1.\n\nSKIENA, S. S., The Algorithm Design Manual. Springer. 2008. ISBN: 978-1-84800-069-8.\n\nZIVIANI, N. Projeto de Algoritmos com Implementações em Pascal e C, 2a Edição. 2004. Editora Thomson. ISBN 8522103909.\n\nAHO, A.V., HOPCROFT, J.E., ULLMAN, J.D.. The Design and Analysis of Computer Algorithms. Addison-Wesley Publishing Company, 1974. ISBN 0-201-00029-6.\n\nGUSFIELD, D.. Algorithms on Strings, Trees and Sequences. Cambridge University Press, 1997 (reprinted 1999). ISBN 0-521-58519-8. '),
(233, '- P1: Prova 1 (Prova escrita individual)\n- P2: Prova 2 (Prova escrita individual)\n\nNota Final = (P1 + P2)/2\n\nObservação: as provas têm conteúdo acumulativo', 'P1: 14/12/2012\nP2: 27/02/2012', 'Entender as características das principais partes do computador e suas inter-relações.\nCompreender como os dados são armazenados e manipulados pelo computador.\nApresentar como os computadores interagem com o meio externo.\nCompreender técnicas que melhoram o desempenho do computador e consequentemente das aplicações.\n', '1. Organização dos computadores\n  1.1. Linguagens, níveis e máquinas virtuais\n  1.2. Evolução das máquinas multinível\n2. Sistema de numeração e representação de dados\n 2.1. Conversão de base: octal, decimal, binário e hexadecimal\n 2.2. Tipos booleanos, caractere, inteiro e decimal\n3. Memória primária\n 3.1. Organização e endereçamento\n 3.2. Ordenação de bytes\n 3.3. Códigos de correção de erro\n 3.4. Memória cache\n4. Barramento\n 4.1. Barramentos síncronos e assíncronos\n 4.2. Árbitragem de barramento\n 4.3. Exemplo de barramentos: ISA, PCI, PCI Express, etc.\n5. Dispositivos de entrada e saída\n 5.1. Técnicas de entrada e saída\n 5.2. Dispositivos de entrada e saída: discos\n6. Processador\n 6.1. Ciclo do processador\n 6.2. Formato de instrução\n 6.3. Modelos de endereçamento\n 6.4. Pipeline\n7. Paralelismo de dados e controle\n 7.1. Speedup, eficiência e escalabilidade\n 7.2. Leis de Amadahl e Gustafson\n', 'A arquitetura dos computadores influencia, por exemplo, a linguagem de programação, a\ninterconexão de computadores e o desempenho de sistemas. O aluno deverá aplicar os\nconhecimentos adquiridos em várias disciplinas, principalmente: Programação Imperativa', 76, 'BRYANT, R. and O''RALLARON, D.; Computer Systems: A Programmer''s Perspective, 2nd Edtion, Addison Wesley, 2010.'),
(234, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n\n	P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova escrita individual – Valor: 10,0 pontos\n	TS – Testes/avaliações a serem aplic', '- P1: 19/12/2012\n- P2: 26/02/2013\n', 'Detalhar conceitos do suporte e simulação de paralelismo em sistemas operacionais; detalhar conceitos de processos, threads e comunicação entre processos; apresentar conceitos e técnicas de gerência de memória e fixar os conceitos adquiridos através de estudos de caso com sistemas operacionais comerciais (livres ou não).', '1	Introdução\n1.1	Revisão de Conceitos de Sistemas Operacionais\n2	Sistemas de arquivos\n2.1	Arquivos \n2.2	Diretórios\n2.3	Implementação\n2.4	Administração e otimização\n2.5	Exemplos\n3	Entrada e Saída\n3.1	Princípios de hardware de E/S\n3.2	Princípios de software de E/S\n3.3	Camadas de software de E/S\n3.4	Discos\n3.5	Relógios\n3.6	Interfaces com usuário\n3.7	Exemplos\nApresentação trabalhos sobre arquivos\nRevisão\nProva 1\n4	Sistemas multiprocessadores\n4.1	Multiprocessadores\n4.2	Multicomputadores\n4.3	Virtualização\n4.4	Exemplos\n5	Segurança\n5.1	O ambiente de segurança\n5.2	Mecanismos de proteção\n5.3	Ataques\n5.4	Exemplos\n6	Sistemas Operacionais Multimídia\n6.1	Introdução à multimídia\n6.2	Arquivos multimídia\n6.3	Compressão de vídeo\n6.4	Escalonamento de processos Multimídia\n6.5	Paradigmas de sistemas de arquivos multimídia\n6.6	Arranjo de arquivos multimídia\n6.7	Caching\n6.8	Escalonamento de discos para multimídia\n6.9	Exemplos\nApresentação trabalhos sobre Multicomputadores e segurança\nRevisão\nProva 2\n', 'Esta disciplina é pré-requisito para a disciplina de Sistemas Operacionais 2. Os conceitos de comunicação entre processos são extensíveis à disciplina de Sistemas Distribuídos, Redes de Computadores e a quaisquer disciplinas de programação que utilizem-se', 16, '\nVAHALIA, Uresh, Unix Internals, Prentice Hall 1996.'),
(235, 'A avaliação da disciplina será realizada mediante duas provas escritas (P1, P2), e um trabalho (T1), podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa e/ou questões sobre trabalhos realizados em aula.\nO trabalh', 'P1 - 20/12/2012\nP2 - 05/02/2013\nT1 - 07/02/2013', 'Conhecer os sistemas específicos abordados na disciplina. Estimular os alunos à pesquisa e produção de trabalhos intelectuais e sua apresentação em público', '1- Apresentação da Disciplina\n2- Etapas do processo de engenharia de sistema de informação (SI)\n3- Processo de desenvolvimento\n4- Tipos de SI\n5- Sistemas Corporativos (CRM, DBM, ERP, Portais Corporativos e E-Learning, B2B, B2C, EDI)\n6- Sistemas de Gestão Eletrônica de Documentos (GED)\n7- Sistemas de Workflow \n8- Aplicações WEB e e-commerce\n9- Arquitetura de Gestão dos SI.', 'Banco de Dados, Engenharia de Software', 46, 'Guide to the Software Engineering Body of Knowledge (SWEBOK) - 2004 version. Editado pro IEEE Computer Society'),
(236, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por duas provas escritas individuais (graus N1 e N2; 10,0 pontos cada uma). A nota final será calculada como segue: ￼NF=0,5*P1+0,5*P2.\n\nCada prova', 'P1 - 09/10/2013\nP2 - 18/12/2013', '• Aprender os fundamentos da teoria de autômatos e linguagens formais, e como eles se relacionam aos princípios da ciência da computação.\n• Conhecer e compreender o relacionamento entre essa teoria e as disciplinas de natureza mais prática.\n• Aprender a distinguir os diversos tipos de linguagens formais e seus reconhecedores.\n• Ser capaz de projetar linguagens e gramáticas para a representação ou formalização de\nprocessos.\n• Ser capaz de especificar reconhecedores para linguagens que se apresentem.\n• Ter consciência da existência de problemas para os quais não existe solução computacional.\n• Ter consciência da dinâmica subjacente à disciplina, em termos dos novos autômatos e\nlinguagens que continuam surgindo.\n• Ter consciência da necessidade que a disciplina impõe de se proceder a provas formais, a fim de obter conhecimento confiável em seu domínio.', '1. Introdução\n	1.1. Introdução às Linguagens Formais\n	1.2. Hierarquia de Chomsky \n    	1.3. Alfabetos e Linguagens\n\n2. Autômatos Finitos\n	2.1. Autômatos Finitos Determinísticos.\n	2.2. Autômatos Finitos Não - Determinísticos\n	2.3. Autômatos Finitos Não-Determinísticos com movimentos vazios \n	2.4. Minimização de Autômatos Finitos\n         2.5. Equivalência entre Autômatos  \n        2.6. Autômatos Finitos e Expressões Regulares. \n\n3. Linguagens Livres de Contexto Gramáticas Livres de Contexto\n         3.1. Árvores de análise sintática \n        3.2. Ambigüidade em gramáticas e linguagens\n         3.3. Propriedades das Linguagens Livres de Contexto \n        3.4. Formas Normais \n\n4. Máquinas de Turing \n	4.1. Definição formal e exemplos \n        4.2.Técnicas de programação, Extensões das máquinas de Turing\n        4.3. Reconhecimento de Linguagens \n \n\n', 'Linguagens Formais constitui o conhecimento-base para a construção e teoria de compiladores. Além disso, reconhecedores de linguagens são utilizados em qualquer tipo de software que realize reconhecimento de cadeias, como comandos de Sistemas Operacionais', 45, '1. SIPSER, Michael. Introdução a Teoria da Computação; tradução da 2a edição norte-americana (Cengage Learning).'),
(237, 'A média do aluno será composta por 7 (sete) trabalhos práticos, 2 (duas) avaliações escritas e 1 (um) projeto final, e será determinada pelos seguintes pesos:\n\nAvaliações escritas: 	50%\nProblemas práticos:	40%\nProjeto final:		10%\n\nOs problemas práticos se', '20/12/2012 - Primeira avaliação escrita.\n21/02/2013 - Segunda avaliação escrita.', '1. Entendimento do conceito de Tipos Abstratos de Dados.\n2. Estudo de Listas Simplesmente Encadeadas, Listas Duplamente Encadeadas e Listas Encadeadas Circulares.\n3. Estudo de Pilhas e Filas usando Vetores e Listas Encadeadas.\n4. Estudo de Árvores Binárias, seus algoritmos de percurso e aplicação como Filas de Prioridade.\n5. Estudo de Árvores de Pesquisa: Árvores Binárias Balanceadas e Árvore B.\n5. Estudo de Tabelas de Dispersão.', 'Estudo de estruturas de dados básicas, seus conceitos e operações. Estudo de Listas Lineares, compreensão de seu uso como Pilhas e Filas e de implementações usando vetores, listas lineares encadeadas, listas duplamente encadeadas, listas circulares e listas com descritores. Estudo dos conceitos de Árvores Binárias, dos algoritmos de caminhamentos e da sua aplicação como fila de prioridade. Estudo de Árvores de Pesquisa: árvores binárias balanceadas, árvore B. Estudo de Tabelas de Dispersão.', 'É uma disciplina de base sendo utilizada por demais disciplinas que envolvem o uso de algoritmos e estruturas de dados.', 81, 'GOODRICH, Michael. TAMASSIA, Roberto. Estruturas de Dados e Algoritmos em Java, 2007.'),
(238, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\r\n	P1 – Prova escrita individual – Valor: 10,0 pontos\r\n	P2 – Prova escrita individual – Valor: 10,0 pontos\r\n	P3 – Prova escrita individual – Va', 'P1: 23/05/2013 (5ª-feira)\r\nP2: 17/06/2013 (2ª-feira)\r\nP3: 22/07/2013 (2ª-feira)\r\n', 'Exercitar a prática de projeto, implementação e utilização de aplicações de Bancos de Dados.\r\nHabilitar o aluno a propor soluções computacionais para problemas de relativa complexidade na área de Banco de Dados.\r\nExercitar a capacidade de raciocínio lógico.\r\nExercitar a capacidade de expressão oral e escrita.', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\r\n- Bancos de Dados e usuários de BD\r\n- Sistemas de Bancos de Dados\r\n- Modelos de Dados e Esquemas de BD\r\n- Arquiteturas de Sistemas de Bancos de Dados\r\n2. O Modelo Relacional\r\n- Conceitos, fundamentos, restrições de integridade\r\n- Esquemas de BD relacionais\r\n- Linguagens para BD relacionais (álgebra relacional)\r\n- SQL\r\n3. Modelagem de Dados usando o Modelo E/R\r\n- O Modelo de Entidades e Relacionamentos\r\n- Diagrama de Entidades e Relacionamentos\r\n- Dicionário de Dados\r\n- Modelo ER estendido e diagrama de classe UML\r\n4. Projeto de Banco de Dados Relacional\r\n- mapeamento a partir do modelo ER e EER\r\n- Dependências funcionais\r\n- Formas normais e normalização', 'Estruturas de Dados 2\r\nBanco de Dados 2', 43, 'COUGO, Paulo, Modelagem Conceitual e Projeto de Banco de Dados, Ed. Campus, Rio de Janeiro, 1997.'),
(239, 'A1 – Primeira avaliação individual – Valor: 10,0 pontos\nA2 – Segunda avaliação individual – Valor: 10,0 pontos\nTG – Trabalho em Grupo – Valor: 10,0 pontos\nNota Final: (A1 + A2 + TG)/3\n\nCaso o aluno deixe de fazer uma ou mais avaliações (A1 ou A2) terá dir', 'A1 - 18/09/2013\nA2 - 30/10/2013', '- Noção da importância e do emprego.\n- Conhecimento de termos relevantes\n- Principais fórmulas e suas aplicações na seleção de projetos.', 'Noção da importância e contexto de emprego da engenharia econômica.\nEscopo da Engenharia Econômica. \nFornecimento, demanda e produção. \nLucro produzido por capital (interest). \nAnálise custo-benefício. \nAnálise breakeven. \nRetorno de investimento. \nAvaliação de alternativas.\nApresentação das principais ferramentas empregadas no processo de seleção de projetos.\nEconomia aplicada ao desenvolvimento de software.\nAmbientação com estudos de caso relevantes.', 'Mercado de Software terá como uma das avaliações a apresentação de um plano de negócios que deverá considerar, onde oportuno, o conhecimento do escopo desta disciplina.', 64, 'Princípios de Administração Financeira, Lawrence J. Gitman, 12a edição, Pearson, 2010.\n\nEHRLICH,P J, MORAES, E A; Engenharia Econômica: Avaliação e Seleção de Projetos de Investimento; 6ª Ed.;Editora Atlas. 2006\n\nHIRSCHFELD, H;Engenharia Econômica e Análise de Custos; 7ª Ed.; Editora Atlas; 2000.\n\nKOPITTE, B. H.; CASAROTTO FILHO, N.; Análise de Investimentos; São Paulo; Atlas, 2000.'),
(240, '\\N', '\\N', 'asdf asfd', 'aaaaa', 'adf adf asdf', 64, '\\N'),
(241, '\\N', '\\N', '\\N', '\\N', '\\N', 64, '\\N'),
(242, '\\N', '\\N', 'asdf asfd', 'aaaaa', 'adf adf asdf', 64, 'Não existe sugestão realizada no PPC.'),
(243, 'ass', 'sss', 'asdf asfd', 'aaaaa', 'adf adf asdf', 64, 'Não existe sugestão realizada no PPC.'),
(244, 'Cada estudante terá três avaliações (três trabalhos escritos e impressos). O primeiro deverá ser entregue no dia 28/09/2013 e deve ter como título "Legislação brasileira sobre o mercado de software: O que todo Engenheiro de Software deve saber?". O segund', 'Primeiro trabalho: 28/09/2013\nSegundo trabalho: 29/10/2013\nTerceiro trabalho: 12/11/2013', '- Boa noção da legislação relevante para engenheiros de software.\n- Noção de inovação em software\n- Habilitar o estudante a elaborar um plano de negócios de inovação em software.', 'Apresentar legislação relevante para engenheiros de software, ou seja, principais leis e portarias. Atualização acerca de avanços recentes da área de software e o que pode ser feito, juntamente com potenciais patrocinadores. Elaboração de um plano de negócios de software.', 'Engenharia Econômica para Software, que será empregada na elaboração do plano de negócios.', 65, 'O portal www.softex.br possui referências (links e documentos) para praticamente todos os tópicos da disciplina. Ao longo da disciplina novos links serão fornecidos pelo professor. Detalhes da disciplina em http://www.inf.ufg.br/~fabio/ms.html'),
(245, 'A avaliação da disciplina será realizada mediante duas provas escritas (P1, P2) e trabalhos variados, podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa e/ou questões sobre trabalhos realizados em aula.\nA média', 'P1: 26/09/2013\nP2: 28/11/2013', 'Capacitar o aluno a respeito dos conceitos do paradigma de orientação a objetos;\nCapacitar o estudante a desenvolver programas utilizando linguagem de programação Orientada a Objeto;\nCapacitar para a utilização de ferramentas para o desenvolvimento de programas.\n', '1- . Conceitos básicos de OO\n1.1. Classe\n1.2. Objeto\n1.3. Atributo\n1.4. Método\n1.5. Construtor\n1.6. Pacote\n1.7. Encapsulamento\n1.8. Abstração\n1.9. Herança\n1.10. Polimorfismo\n\n2. AWT e Swing\n2.1. AWT\n2.2. Swing\n2.3. Containers e componentes\n2.4. GUI\n2.5. Gerenciadores de layout: FlowLayout, BorderLayout e GridLayout\n2.6. Criação de layouts complexos\n\n3. Tratamento de eventos em interfaces gráficas\n3.1. Componentes do modelo de delegação de eventos\n3.2. Interfaces gráficas que interagem com o usuário\n3.3. Classes adapter\n3.4. Utilização de inner e anonymous inner class\n\n4. Tratamento básico de exceções\n4.1. Exceções\n4.2. Try-catch-finally\n4.3. Utilização de throw e throws\n4.4. Exceções verificadas e não-verificadas\n\n5. Threads\n5.1. Diferentes estados de uma thread\n5.2. Prioriadade na thread\n5.3. Métodos da classe Thread\n5.4. Sincronização de threads\n5.5. Comunicação entre threads\n\n6. Teste de software\n6.1. Definição\n6.2. Tipos de teste\n6.3. Teste de unidade\n6.4. Testes e métricas\n\n7. Projeto orientado a objetos\n7.1. Noções\n7.2. Patterns\n7.3. Arquiteturas\n\n8. Ferramentas de desenvolvimento\n8.1. Netbeans\n8.2. Eclipse\n\n', 'O aluno deve expandir os conhecimentos adquiridos na disciplina de Algoritmos e Programação 1. Os conceitos e habilidades de programação desenvolvidos nesta disciplina são úteis para as disciplinas  de  Computação  Gráfica,  Estrutura  de  Dados,  Intelig', 130, '1.	Furgeri,  SERGIO.  Java  6:  Ensino  didático:  Desenvolvendo  e  Implementando Aplicações. São Paulo: Érica, 2008.\n2.	Ziviani, Nivio. Projeto de Algoritmos, com implementações em Java e C++. São Paulo: Thomson Learning, 2007.\n3.	JEDI - Java Education and Development Initiative. Curso de Introdução à programação I. Lições: 5, 8, 9, 10, 11 e 12. Disponível em http://jedi.wv.com.br/course/view.php?id=3. Acesso em 16 de fevereiro de 2011.\n4.	JEDI - Java Education and Development Initiative. Curso de Introdução à programação II.  Lições:  1,  2,  5,  7,  8,  9  e  12.  Disponível  em http://jedi.wv.com.br/course/view.php?id=4. Acesso em 16 de fevereiro de 2011.\n5.	JEDI  -  Java Education and Development  Initiative. Curso de Engenharia de Software. Lições: 2, 6 e 8. Disponível em http://jedi.wv.com.br/course/view.php?id=8. Acesso em 16 de fevereiro de 2011.\n6.	FJ-11 – Java e Orientação a Objetos. Caelum – Ensino e Soluções em Java. Disponível em  http://www.caelum.com.br/downloads/apostila/caelum-java-objetos-fj11.pdf. Acesso em 16 de fevereiro de 2011.\n7.	J100: Programação Orientada a Objetos usando Java. Disponível  em http://www.argonavis.com.br/cursos/java/j100/index.html. Acesso em 16 de fevereiro de 2011.\n'),
(246, 'A avaliação da aprendizagem será feita por:\n(i) 2 (duas) Avaliações Teóricas; e (ii) Exercícios (avaliações de acompanhamento) e  seminários.\nA média do aluno é calculada pela fórmula:\nMÉDIA = ( 0,35 * AT1 ) + ( 0,35 * AT2 ) + ( 0,3 * EX )\nAT1 e AT2 refer', '1a. Avaliação Teórica - 11/10/2013\n2a. Avaliação Teórica - 29/11/2013.', 'Estudar os principais conceitos e algoritmos envolvidos na implementação das funcionalidades básicas de sistemas gerenciadores de banco de dados;\nHabilitar o aluno a propor soluções computacionais para problemas de relativa complexidade na área de Banco de Dados;\nExercitar a capacidade de raciocínio lógico;\nExercitar a capacidade de expressão oral e escrita.', '1. Introdução\n2. Arquitetura básica de um SGBD\n3. Armazenamento e Estruturas de Arquivos\n    - Dispositivos de armazenamento físico\n    - Organização de arquivo\n    - Organização de registros em arquivos\n    - Armazenamento em dicionário de dados\n4. Indexação e Hashing\n    - Índices ordenados\n    - Arquivos de índice de árvore B+ e de árvore B\n    - Acesso por chave múltipla\n    - Hashing estático versus hashing dinâmico\n    - Comparação de indexação ordenada e hashing\n    - Índices de mapa de bits\n5. Processamento de Consulta\n      - Medidas de custo de consulta\n    - Operação de seleção\n    - Classificação\n    - Operação de junção\n    - Outras operações\n    - Avaliação de expressões\n6. Otimização de Consulta\n     - Transformação de expressões relacionais\n     - Estimando estatísticas de resultados de expressões\n     - Escolhas de planos de avaliação\n     - Visões materializadas\n7. Transações\n     - Conceito e estado da transação\n     - Implementação de atomicidade e durabilidade\n     - Execuções simultâneas\n     - Seriação\n     - Facilidade de recuperação\n8. Controle de Concorrência\n     - Protocolos baseados em bloqueio\n     - Protocolos baseados em timestamp\n     - Protocolos baseados em validação\n     - Esquemas de múltipla versão\n     - Tratamento de impasse\n     - Concorrência em estruturas de índice\n9. Sistema de Recuperação\n     - Classificação das falhas\n     - Estrutura de armazenamento\n     - Recuperação e atomicidade\n     - Recuperação baseada em log\n     - Recuperação com transações concorrentes\n     - Gerenciamento de buffer\n     - Falha com perda de armazenamento não volátil\n     - Sistemas de backup remoto\n10. Segurança e Autorização\n     - Controle de acesso\n     - Controle de acesso discricionário\n     - Controle de acesso obrigatório\n     - Outros problemas relacionados à segurança', 'Estruturas de Dados II\nBanco de Dados', 24, 'ELMASRI, R. e NAVATHE, S.B., Sistemas de Banco de Dados, 6ª ed., Pearson - Addison Wesley, 2011.\nSILBERSCHATZ, A., KORTH, H.F. e SUDARSHAN, S., Sistema de Banco de Dados, 5ª ed., Ed. Campus, Rio de Janeiro, 2006.'),
(247, 'A avaliação da disciplina será feita através de provas escritas e trabalhos. As provas serão em um total de três (P1, P2 e P3). Os trabalhos, cuja média aritmética é T, serão no mínimo dois e, serão realizados em grupo de dois alunos ou individualmente, d', 'P1: 10/12/2012\nP2: 21/01/2013\nP2: 20/02/2013', 'Ao final do curso o aluno deve ser capaz de:\nCompreender a estrutura lógica para o desenvolvimento de algoritmos;\nElaborar algoritmos a partir da descrição textual de pequenos problemas;\nDesenvolver programas em uma linguagem de programação;\nSelecionar estruturas de dados simples para a implementação dos programas;\nElaborar algoritmos específicos para a solução de problemas numéricos e não numéricos;\nDesenvolver programas, na linguagem de programação C, dentro de suas atividades acadêmicas e profissionais;\nUtilizar ferramentas para o desenvolvimento de programas.', '1.Conceitos Preliminares\n1.1.Histórico da Computação\n1.2.Visão Geral do Computador: Hardware, Software\n1.3.Noções sobre o Armazenamento de Dados\n1.4. Noções de Lógica\n1.5.Lógica de Programação\n2.Expressões e Operadores\n2.1.Expressões Aritméticas\n2.2.Expressões Lógicas\n3.Itens Fundamentais de uma Linguagem de Programação\n3.1.Tipo de Dados\n3.2.Formação de Identificadores\n3.3.Constantes\n3.4.Variáveis\n4.Comandos Básicos\n4.1.Comando de Atribuição\n4.2.Comandos de Entrada e Saída\n4.3.Estrutura Sequencial\n5.Estruturas de Seleção\n5.1.Simples\n5.2.Composta\n5.3.Encadeada\n5.3.1.Heterogênea\n5.3.2.Homogênea\n5.4.Múltipla Escolha\n6.Estrutura de Repetição\n6.1.Com Variável de Controle\n6.2.Com Teste no Início\n6.3.Com Teste no Final\n7.Estrutura de Dados\n7.1.Variáveis Compostas Homogêneas Unidimensionais\n7.2.Variáveis Compostas Homogêneas Multidimensionais\n8.Modularização\n9.Programação (em paralelo com os algoritmos)', 'A disciplina promove o desenvolvimento do raciocínio lógico e estruturado aluno, que são\naplicados diretamente em disciplinas subsequentes do curso.', 40, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(248, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n\nPT - Prova Teórica - Valor: 10,0 pontos\nPP - Projeto Prático - Valor: 10,0 pontos\nRP - Relatório do Projeto - Valor: 10,0 pontos\n\nNF será cal', 'PPparcial e RPparcial: 11/01/2013\nProva Teórica: 20/02/2013\nPPfinal + RPfinal: 22/02/2013', 'Ao final da disciplina o aluno deverá ser capaz de compreender e aplicar conceitos avançados de bancos de dados na execução de projetos de software que envolvam persistência de grandes volumes de informação. O aluno deverá ter uma boa compreensão da tecnologia de bancos de dados e da forma de operação dos Sistemas de Bancos de Dados.', 'Apresentação da disciplina:\n    Identificação do Professor e do Aluno\n    Programa do Curso\n    Provas (Critério de Avaliação)\nMotivação e expectativas para a disciplina\n\nBanco de Dados Orientados a Objetos:\n    Necessidade dos Sistemas Complexos;\n    Linguagem de Definição de Objetos;\n    Linguagem de Consulta a Objetos. Banco de Dados\n\nBanco de Dados Objeto Relacional:\n    Tipos de dados complexos\n    Tipos estruturados e herança em SQL\n    Herança de tabela\n    Implementando recursos O-R\n    Orientação a objeto versus relacional de objeto\n\nDataWare House e Mineração de Dados:\n    Sistemas de apoio à decisão\n    Análise de dados e OLAP\n    Depósito de dados\n    Mineração de dados\n\nAtividade prática em laboratório: BDOO, BDOR e Mineração de Dados\nAvaliação parcial do projeto final.\n\nControle de Transações:\n    controle de concorrência e recuperação contra falhas.\n    mono/Multi-usuário.\n\nBanco de Dados Distribuídos:\n    armazenamento distribuído.\n    processamento de Consultas.\n    sistemas homogêneos / heterogêneos.\n    Replicação / Reprodução.\n    Fragmentação.\n\nProva Teórica \n\nAvaliação do Projeto Final. \n', 'O aluno aperfeiçorá os conhecimentos adquiridos na disciplina de Banco de Dados 1. Além disso, fará uso dos conceitos de orientação a objetos adquiridos em disciplinas de programação e projeto orientados a objetos.\n', 48, 'Peter Rob e Carlos Coronel. SISTEMAS DE BANCO DE DADOS: PROJETO, IMPLEMENTAÇÃO E ADMINISTRAÇÃO - Tradução da 8ª edição norte-americana'),
(249, 'A avaliação será feita com base em três avaliações individuais e dois trabalhos em grupo, a serem realizados e entregues nos dias indicados no programa de aulas. O valor de cada avaliação ou trabalho é de dez pontos. Não haverá avaliação substitutiva, exc', 'P1: 23/09/2013\nP2: 04/11/2013\nP3: 05/12/2013\nTrabalho em Grupo: 07/10/2013 e 25/11/2013', 'Habilitar os alunos a:\n1- compreender os principais aspectos relacionados à definição de requisitos de sistemas de software; \n2- elaborar e manter especiﬁcações de requisitos de software de diferentes tipos de projetos; \n3- compreender os conceitos e definições da Engenharia de Requisitos;\n4- conhecer as principais técnicas de eliciação, análise, validação e especificação de requisitos;\n5- conhecer os principais modelos e padrões internacionais relacionados com requisitos;\n6- aplicar técnicas de desenvolvimento e gerência de requisitos;\n7- aplicar técnicas de modelagem conceitual, segundo o paradigma orientado a objetos;\n8- aplicar técnicas de leitura de modelos de análise de requisitos, de modo a verificar e validar requisitos.', '- Revisão da Engenharia de Software: visão geral, subáreas e objetivos, caracterização de software (produto e processo), processos do ciclo de vida de um software, relação com Engenharia de Sistemas, papel dos requisitos.\n- Fundamentos de Requisitos: definições, taxonomia, fontes de informação, relações com outros artefatos.\n- Processos Relacionados a Requisitos: técnicas de levantamento e elicitação, análise, especificação e validação.\n- Normas e padrões para modelagem e documentação.\n- Gerenciamento de Requisitos: processo, rastreabilidade e controle de mudanças.\n- Verificação e Validação de Requisitos.', 'Essa disciplina tem relacionamento direto com a disciplina de Engenharia de Software, cujos conceitos são necessários para entender o contexto da Engenharia de Requisitos. Também está diretamente relacionada com Projeto de Software, Programação Orientada', 31, 'G. Booch et al. Object-Oriented Analysis and Design with Applications. 3rd edition, Addison-Wesley, 2007 \nI. Sommerville, P. Sowyer. Requirements Engineering – A good practice guide. John Wiley & Son, 2001\nG. Kotonya, I. Sommerville. Requirements Engineering: Processes and Techniques. Wiley, 1998.'),
(250, 'A1 – Primeira avaliação individual – Valor: 10,0 pontos\nA2 – Segunda avaliação individual – Valor: 10,0 pontos\nA3 – Terceira avaliação individual – Valor: 10,0 pontos\nA4 – Terceira avaliação individual – Valor: 10,0 pontos\nNota Final: (A1 + A2 + A3 + A4)/', 'A1 - 18/09/2013\nA2 - 21/10/2013\nA3 - 20/11/2013\nA4 - 11/12/2013\nAS - 16/12/2013', 'Conceituar Gestão Estratégica Empresarial e Gestão Estratégica de TI.\nConhecer os modelos genéricos dos processos de Gestão em TI.\nConhecer os modelos COBIT e ITIL de Governança em TI e detalhar seus principais processos.\nConhecer outros modelos que oferecem suporte a Gestão de TI.', 'Gestão de TI: conceito, objetivos e componentes;\nO Modelo de Governança de TI: visão geral do modelo de Gestão de TI;\nPlanejamento Estratégico de TI; \nAlinhamento estratégico de TI ao negócio;\nO Plano de Tecnologia da Informação;\nModelos de Gestão de TI (COBIT 4.1 e ITIL V3): Histórico, Objetivos, Estrutura, Aplicabilidade, Benefícios, Certificações relacionadas.\nTópicos Avançados: Gestão Estratégica da Informação. Business Intelligence (BI). Cloud Computing.', 'Os modelos ITIL e COBIT podem ser considerados processos de apoio a qualidade de software, pois estes modelos tratam da qualidade na entrega dos serviços de TI. Aquisição, desenvolvimento e manutenção de software são exemplos de serviços de TI logo se ben', 101, 'BOAR, Bernard H. Tecnologia da Informação: A arte do planejamento estratégico. São \nPaulo: Berkeley Brasil, 2002.\n\nOffice of Government Commerce (OGC). ITIL: Service Strategy. Disponível em http://www.itil-officialsite.com/. (ISBN 978  01 1331 045 6)\n\nOffice of Government Commerce (OGC). ITIL: Service Design. Disponível em http://www.itil-officialsite.com/. (ISBN 978 01 1331 047 0)\n\nOffice of Government Commerce (OGC). ITIL: Service Transition. Disponível em http://www.itil-officialsite.com/. (ISBN 978 01 1331 048 7)\n\nOffice of Government Commerce (OGC). ITIL: Service Operation. Disponível em http://www.itil-officialsite.com/. (ISBN 978 01 1331 046 3)\n\nOffice of Government Commerce (OGC). ITIL: Continual Service Improvement. Disponível em http://www.itil-officialsite.com/. (ISBN 978 01 1331 049 4)'),
(251, 'A nota final (NF) será obtida pela fórmula:\nNF = (2 * NP1 + 3 * NP2 + 4 * NP3 + 1 * NT)/10\nonde:\nNP1 representa a nota da primeira prova (escrita), com peso 2; \nNP2, a nota da segunda prova (prática), com peso 3; \nNP3, a nota da terceira prova escrita, co', 'NP1- 01/10/2013\nNP2(prática)-22/11/2013\nNP3 - 17/12/2013', 'Ao final do curso o aluno deverá:\n• Ter domínio dos conceitos fundamentais, identificando e desenvolvendo modelos\nmatemáticos para resolução de problemas.\n• Desenvolver algoritmos em Portugol.\n• Desenvolver programas utilizando a linguagem C.\n• Criar representações conceituais e desenvolver programas ( rotinas ) capazes de atuar sobre\nestas representações.\n• Desenvolver habilidades de pesquisa técnica.\n• Situar-se na Lógica de Programação.\n• Raciocinar de forma lógica, fundamentando-o.\nRelação com', 'Introdução à lógica de Programação. Conceitos fundamentais. Programação Estruturada.\nAlgoritmos.\nElementos de um algoritmo. Tipos de dados. Variáveis.\nEstrutura sequencial. Declaração de variáveis. Tipos de variáveis. Constantes. Comentários.\nExpressões, operadores e funções. Comandos básicos. Estruturas condicionais. Estruturas de repetição. Estruturas de dados. Subprogramas.', 'Verificar grade curricular do curso.', 87, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.\nASCENCIO, A. F. G. e CAMPOS, E. A. V Fundamentos da Programação de Computadores – Algoritmos, Pascal e C/C++. Prentice Hall. 2007.\nDEITEL, H.M., DEITEL, P.J.; Como Programar em C; LTC; 1999.\n\nInternet:\nAlgoritmos e Lógica; http://www.inf.ufg.br/~deller/ApostilaAlg1.pdf;\nC Programming: http://www.strath.ac.uk/CC/Courses/NewCcourse/ccourse.html;\nFundamentos de Linguagem C: www.dca.ufrn.br/~lmarcos/courses/DCA800/apostila_C.pdf;\nLinguagem C: http://www.i2.com.br/~rora/aulas/topicos/index.html.\n'),
(252, 'A avaliação da aprendizagem será feita por: \n(i) 2 (duas) Avaliações Teóricas; e \n(ii) Exercícios e trabalhos.\nAs avaliações teóricas serão aplicadas em sala de aula, sobre o conteúdo explorado durante o curso, em data previamente estabelecida.\nOs exercíc', 'AT1 - 17/10/2013\nAT2 - 25/11/2013', 'Exercitar a prática de projeto, implementação e utilização de aplicações de Bancos de Dados.\nHabilitar o aluno a propor soluções computacionais para problemas de relativa complexidade na área de Banco de Dados.', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados\n2. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacionais\n- Linguagens para BD relacionais (álgebra relacional)\n- SQL\n3. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML\n4. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 'Estruturas de Dados 2\nBanco de Dados 2', 117, 'ELMASRI, R. e NAVATHE, S.B., Sistemas de Banco de Dados, 6ª ed., Pearson - Addison Wesley, 2011.'),
(253, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por: \n         (A1 + A2 + A3) *0,1 + A4*0,2 + TP*0,5\n\nA1, A2, A3 e A4: Atividas Avaliativas\nTP: Trabalhos Práticos', '- A1: 24/09/2013\n- A2: 08/10/2013\n- A3: 19/11/2013\n- A4: 13/12/2012', 'O estudante deverá ser capaz ao final da disciplina de:\n- conhecer os pré-requisitos para construção de software;\n- redigir códigos seguindo boas práticas;\n- construir códigos-fontes utilizando conceitos de acoplamento e coesão;\n- dividir os códigos-fontes em pacotes conforme sua especialidade;\n- utilizar ferramentas de controle de versão;\n- conhecer ferramentas de desenvolvimento;\n- construir softwares documentados.', 'Bases para a Construção de Software\n       - Introdução a Construção de Software\n       - Metáforas\n       - Pré-Requisitos\n       - Principais Decisões na Construção de Software\nCódigos de Alta Qualidade\n       - Projeto de Software\n       - Classes Funcionais\n       - Rotinas de Alta Qualidade\n       - Programação Defensiva\n       - Pseudocódigos\nVariáveis\n       - Problemas Gerais com Uso de Variáveis\n       - Nomes para Variáveis\n       - Tipos de Dados Fundamentais\n       - Tipos de Dados Incomuns\nInstruções\n       - Organização de Código Linear\n       - Condicionais\n       - Loops\n       - Estruturas de Controle Incomuns\n       - Métodos Baseados em Tabelas\n       - Questões Gerais Sobre Controle\nMelhorias no Código\n       - Qualidade de Software\n       - Construção Colaborativa\n       - Testes do Desenvolvedor\n       - Depuração\n       - Refatoração\n       - Otimização - Estratégias e Técnicas\nConsiderações Sobre o Sistema\n       - Tamanho x Construção\n       - Gerenciamento da Construção\n       - Integração\n       - Ferramentas de Programação\nArtesanato de Software\n       - Leiaute e Estilo\n       - Documentação Automática\n       - Caráter Pessoal\n       - Temas do Artesanato de Software\n', 'Introdução à programação', 95, 'Code Complete: Um guia prático para a construção de software, Steve McConnell, Microsoft Press, 2nd Edition, 2004.'),
(254, 'A avaliação do processo de aprendizagem dos alunos se dará por meio da realização de 2 avaliações individuais (P1, P2) e de listas de exercícios (LE) que formarão a nota final (NF) da seguinte forma:\n\nNF=(LE+P1*4+P2*5)/10\n\nTodas as avaliações parciais de', 'As provas serão realizadas nas seguintes datas:\n\nP1: 04/06/2013\nP2: 24/07/2013', 'Capacitar a utilização um ambiente de desenvolvimento didático, compilando e executando\naplicações em uma linguagem de programação; saber utilizar as estruturas de repetição e controle para controlar o fluxo de programas; utilizar estruturas de dados simples; escrever\nprogramas em uma linguagem de programação, objetivando a solução de problemas simples;', 'Apresentação da Disciplina: Identificação; Ementa; Conteúdo Programático; Objetivos;\nProcedimentos Didáticos; Avaliação da Aprendizagem; Bibliografias.\nIntrodução ao conceito de algoritmo e programação estruturada. Elementos Fundamentais da Construção de Algoritmos: Tipo de Dados; Formação de Identificadores; Constantes; Variáveis; Comando de Atribuição; Comandos de Entrada e Saída.\nExpressões e Operadores: Expressões Aritméticas; Expressões Lógicas. \nEstruturas Básicas de Controle: Sequência, Seleção, Repetição\nAlgoritmos com Estruturas de dados homogêneas: vetores\nAlgoritmos com Estruturas de dados homogêneas: matrizes\nAlgoritmos com Estruturas de dados heterogêneas: registros\nProcedimentos, funções e recursão\nIntrodução à linguagem de programação C\nTranscrição de algoritmos para a linguagem de programação C\nTópicos especiais de linguagem C: Ponteiros\n', 'Esta disciplina provê a base preliminar para o desenvolvimento de software, fornecendo a\nambientação e primeira experiência com uma linguagem de programação, fornecendo a base teórica e prática para disciplinas como: algoritmos e programação II, estrutura', 44, 'EDMONDS, Jeff, Como pensar sobre algoritmos, Rio de Janeiro: LTC, 2010, 284 p.');
INSERT INTO `plano` (`id`, `criterioavaliacao`, `datarealizacaoprovas`, `objetivosespecificos`, `programa`, `relacaooutrasdisciplinas`, `turma_id`, `bibliografiasugerida`) VALUES
(255, 'A avaliação da aprendizagem será efetuada utilizando as modalidades de exercícios e trabalhos extraclasse, assim como provas individuais. Cada prova será cumulativa, considerando todo o conteúdo desenvolvido até a data de sua aplicação. Durante o semestre', 'P1: 02/05/2013 (quinta-feira) \nP2: 06/06/2013 (quinta-feira) \nP3: 29/07/2013 (segunda-feira)', '- Apresentar o funcionamento básico de redes de comunicação. \n- Apresentar os serviços suportados por redes de computadores, bem como o funcionamento de protocolos de comunicação. \n- Apresentar as funcionalidades suportadas pelas camadas dos modelos de rede OSI e TCP/IP. \n- Apresentar maneiras de interconectar redes de computadores, incluindo protocolos, dispositivos e aplicações. \n- Familiarizar os alunos com o funcionamento de redes de comunicação e de computadores.', '1. Introdução\n1.1. Arquitetura de redes de computadores \n1.2. Protocolos e serviços de rede \n1.3. Meios físicos de transmissão \n1.4. Comutação de circuitos e de pacotes \n1.5. Hierarquia em camadas: ISO/OSI e TCP/IP \n1.6. Organismos internacionais de padronização (ISO, IEEE, ITU-T, IETF, W3C) \n1.7. História da Internet\n2. Camada de aplicação\n2.1. Protocolos de aplicação - princípios gerais \n2.2. WWW e HTTP \n2.3. FTP \n2.4. Correio eletrônico \n2.5. DNS \n2.6. P2P \n2.7. Programação com sockets\n3. Camada de transporte \n3.1. Tipos de serviço de transporte \n3.2. Protocolo UDP \n3.3. Transmissão de dados confiável \n3.4. Protocolo TCP \n3.5. Controle de congestionamento\n4. Camada de rede \n4.1. Modelos de serviço de rede\n4.2. Roteamento - princípios gerais e algoritmos \n4.3. Protocolo IP \n4.4. Roteamento na Internet \n4.5. Interconexão de redes', 'Essa disciplina faz amplo uso de conceitos apresentados nas disciplinas de Arquitetura de Computadores, Estruturas de dados 1, Teoria dos Grafos e Probabilidade e Estatística; além de demandar habilidades de programação desenvolvidas nas disciplinas de Pr', 22, 'FOROUZAN, BEHROUZ A - Comunicação de dados e redes de computadores - Sao Paulo: McGraw-Hill, 2008'),
(256, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\nP1 – Prova escrita individual – Valor: 10,0 pontos\nP2 – Prova prática individual – Valor: 10,0 pontos\nTG – Trabalho Geral – Valor: 10,0 pontos', 'Prova1 - 28/10/2013\nProva2 - 23/12/2013\n', 'Ao final do curso, o aluno deve ser capaz de: \n	1.	Ter uma visão geral das disciplinas do curso de sistemas de informação;\n	2.	Definir um sistema de informação;\n	3.	Conhecer alguns exemplos de sistemas de informação;\n	4.	Aplicar os conceitos básicos da teoria de sistemas;\n	5.	Conhecer os conceitos básicos de análise de sistemas de informação;\n	6.	Conhecer os conceitos básicos de projeto de sistemas de informação;\n	7.	Diferenciar os diferentes papéis e tarefas desempenhadas pelo analista de sistemas.', '1. Apresentação da Disciplina\n     1.1	Identificação; \n     1.2	Ementa; \n     1.3	Conteúdo Programático; \n     1.4	Objetivos; \n     1.5.      Procedimentos Didáticos; \n     1.6.	Avaliação da Aprendizagem; \n     1.7.      Bibliografias; \n     1.8.	Motivação; \n     1.9.	Relacionamento com outras disciplinas. \n\n2. Projeto pedagógico e o profissional de sistemas de informação\n     2.1. Os cursos da área de computação e suas diferenças; \n     2.2. Matriz curricular; \n     2.3. Ementa das disciplinas; \n     2.4. Carreiras em Sistemas de Informação. \n     2.5. Aspectos de segurança, éticos, morais e sociais da computação.\n \n3. Conceituação de computador, informática e software\n     3.1. Breve histórico da computação; \n     3.2. Recursos de hardware \n     3.3. Componentes de hardware de um sistema; \n     3.4. Processamento paralelo e sequencial; \n     3.5. Classificação de computadores; \n     3.6. Sistemas operacionais (processos, arquivos, memória, armazenamento, entrada e saída); \n     3.7. Linguagens de programação (evolução, compiladores, interpretadores, modelos, aplicações).\n\n\n4. Recursos de dados\n      4.1. Banco de dados; \n      4.2. Modelo relacional; \n      4.3. Modelo ER; \n      4.4. SQL. \n\n5. Recursos de Telecomunicações: internet e rede de computadores.\n\n6. Fundamentos de sistemas de informação\n\n       6.1. Conceitos, componentes e recursos; \n       6.2. Modelo de sistema de informação; \n       6.3. A empresa como um sistema; \n       6.4. Os componentes de um sistema de informação; \n       6.5. Dados X Informação; \n       6.6. Atividades e funções de sistemas de informação. \n\n7. Sistemas de informação na empresa\n	7.1.	Empresa digital; \n	7.2.	Tipos de sistemas de informação empresariais; \n        7.3. Aplicações de sistemas de informação \n        7.4. Sistemas integrados; 		\n	7.5.	Relacionamentos entre os tipos de sistemas. \n\n8. Infra-estrutura de TI\n	8.1. Componentes; \n	8.2. Integração de componentes.\n\n9. Desenvolvimento e gerenciamento de sistemas\n        9.1. Modelos de processos; \n        9.2. Técnicas de desenvolvimento.\n\n10.  Administração de recursos de TI.\n\n', 'Por ser uma disciplina de fundamentos, a abordagem metodológica está focada no relacionamento do conteúdo ministrado com as demais disciplinas do curso. Tanto no seu início, com a apresentação do projeto pedagógico do curso, quanto no decorrer da discipli', 125, 'AUDY, J. L. N.; ANDRADE, G. K.; CIDRAL, A. Fundamento de Sistemas de Informação. Porto alegre: Bookman, 2005.'),
(257, 'A avaliação da aprendizagem se dará de forma continuada ao longo do curso. Serão aplicadas diversas avaliações, em datas não especificadas ao longo do semestre.\n\nA nota final será composta pela média aritmética das notas obtidas em todas as avaliações.\n\nO', 'As avaliações serão realizadas em dadas não especificadas.', '- Apresentar as principais técnicas associadas à resolução de problemas, conhecimento e\nraciocínio e à aprendizagem.\n- Estimular os alunos a utilizar estas técnicas na solução de problemas do "mundo real".', 'Introdução:\n- Conceitos básicos\n- Agentes inteligentes \nResolução de problemas: \n- Estratégias de busca\n- Buscas não-informadas\n- Buscas informadas (heurísticas)\n- Busca com adversário\n- Algoritmos genéticos\nConhecimento e raciocínio:\n- Raciocínio\n- Representação\n- Lógica\n- Incerteza \nAprendizagem:\n- Aprendizado a partir de observações\n- Aprendizado de árvores de decisão\n- Aprendizado conexionista\n- Aprendizado probabilístico\nAplicações', 'Para construir aplicações computacionais utilizando técnicas de Inteligência Artificial (IA) é preciso dominar conhecimentos básicos da computação como Lógica Matemática, Estruturas de Dados, Programação de Computadores, dentre outras. As técnicas da IA p', 7, 'RUSSELL, Stuart e NORVIG, Peter, Inteligência Artificial, Ed. Campus, 2004.'),
(258, 'A nota final (NF) será calculada da seguinte maneira:\nNF = EXM*0.5+SEM*0.2+P1*0.3\n\nem que EXM é o exame final a ser realizado dia 18/07/2013\nSEM é a nota de seminário,\ne P1 é a prova 1 a ser realizada dia 06/06/2013', 'P1 é a prova 1 a ser realizada dia 06/06/2013\nEXM é o exame final a ser realizado dia 18/07/2013', '• Desenvolver a capacidade de avaliar a complexidade e a qualidade dos algoritmos\npropostos para um determinado problema.\n• Estudas os algoritmos básicos para algumas classes importantes de problemas tratados\nem computação.\n• Exibir técnicas de projetos de algoritmos que possibilitem a confecção eficiente dos\nmesmos e que capacitem o aluno a resolver novos problemas no futuro.\n• Conhecer as potencialidades e as limitações do conhecimento algorítmico atual.', 'Analise de algoritmos\n• Algoritmos de classificação e busca\n• Algoritmos de manipulação de conjuntos\n• Algoritmos em grafos\n• NP­completude', 'Teoria da Computação', 88, 'Thomas H. Cormen, Charles E. Leiserson, Ronal L. Rivest e Clifford Stein.\nAlgoritmos teoria e prática\nTradução da 3a. edicão americana, Editora Campus, 2002.\n\nNivio Ziviane.\nProjeto de Algortimos\n3a. Edição - Editora Cengage Learning'),
(259, 'A avaliação será feita com base em três avaliações individuais e dois trabalhos em grupo, a serem realizados e entregues nos dias indicados no programa de aulas. O valor de cada avaliação ou trabalho é de dez pontos. Não haverá avaliação substitutiva, exc', 'prova 24/09/2013\nprova 29/10/2013\nprova 06/12/2013', '1. Familiarizar o estudante com os termos e as diferentes etapas inerentes ao processo empregado no desenvolvimento de produtos de software\n2. Apresentar ao estudante as metodologias mais empregadas recentemente em Engenharia de Software\n', 'Software e Engenharia de Software\n- Características do software\n- Crise do Software\n- Custos e Engenharia de Software\n\nEngenharia de Sistemas\n- Sistemas Baseados em Computador\n- Hierarquia da Engenharia de Sistemas\n- Modelagem de Sistemas\n\nProcesso de Software\n- Produto e Processo\n- Modelos de Processo\n- Processo Unificado\n\nEngenharia de Requisitos\n- Requisitos de software\n- Documento de Especificação de Software\n- Processo de Engenharia de Requisitos\n\nModelagem de Análise\n- Modelos de Contexto e de Dados\n- Modelos de Objetos e de Comportamento\n\nProjeto de Software\n- Conceitos e Modelos\n- Projetos Arquitetural e de Dados\n- Projeto de Interface com o Usuário\n\nGerência de Projetos de Software\n- Espectro de Gestão, Métricas e Planejamento\n- Análise e Gerência de Riscos\n- Acompanhamento de Projetos\n\nControle de Qualidade de Software\n- Inspeções, Revisões e Testes de Software\n\nGerência de Configuração de Software\n- Itens de Configuração de Software\n- Controle de Versão\n\nReengenharia\n- Reengenharia de negócio\n- Reengenharia de software\n', 'A disciplina de Engenharia de Software está fortemente relacionada com as seguintes disciplinas de períodos posteriores do curso:\n- Engenharia de Requisitos\n- Projeto de Software\n- Segurança e Auditoria de Sistemas', 10, 'SOMMERVILLE, Ian. Engenharia de Software. Addison-Wesley, Oitava Edição, 2007.\n\nPRESSMAN, Roger S..Engenharia de Software. McGraw-Hill, Sexta Edição, 2006.\n'),
(260, 'A avaliação da aprendizagem será feita por:\n(i) 2 (duas) Avaliações Teóricas; e (ii) Exercícios (avaliações de acompanhamento) e trabalho prático.\nA média do aluno é calculada pela fórmula:\nMÉDIA = ( 0,35 * AT1 ) + ( 0,35 * AT2 ) + ( 0,3 * EX )\nAT1 e AT2', '1a. Avaliação Teórica - 17/10/2013\n2a. Avaliação Teórica - 28/11/2013\n', 'Aproximar-se de alguns dos conceitos fundamentais pertinentes à implementação de SGDBs, tais como:  estruturas de armazenamento e de índices, transações, controle de concorrência, recuperação após falhas e segurança. Estudar e praticar a programação de banco de dados referente a gatilhos e rotinas armazenadas.', 'Armazenamento de disco, estruturas de arquivo básicas e hashing.\nEstruturas de indexação para arquivos.\nProcessamento de transações.\nTécnicas de controle de concorrência.\nTécnicas de recuperação de banco de dados.\nSegurança de banco de dados.\nFunções, gatilhos e procedimentos armazenados.', 'Banco de dados 1 e estruturas de dados.', 109, 'ELMASRI, R. e NAVATHE, S.B., Sistemas de Banco de Dados, 6ª ed., Pearson - Addison Wesley, 2011.\nSILBERSCHATZ, A., KORTH, H.F. e SUDARSHAN, S., Sistema de Banco de Dados, 5ª ed., Ed. Campus, Rio de Janeiro, 2006.\n'),
(261, 'A avaliação da aprendizagem será efetuada considerando duas provas, escritas individuais, e um trabalho em grupo. As provas escritas serão compostas pelo conteúdo ministrado até a data de sua aplicação.\n\nA nota final será calculada da seguinte forma:\n\nNot', 'Data de realização das avaliações:\n•	P1 - 11/10/2013 \n•	P2 – 20/12/2013\n•	Trabalhos – 01/11/2013 e 04/11/2013', 'Capacitar o aluno a:\n  - Identificar e compreender a importância da manutenção no ciclo de vida de um software;\n  - Compreender as técnicas de execução e gerência de manutenção de um software;\n  - Compreender práticas de manutenção de software;\n  - Aplicar práticas de engenharia reversa;\n  - Desenvolver práticas de refatoração e transformação de software', 'Introdução à Manutenção de Software\nTipos de Manutenção de Software\nQuestões-chave da Manutenção de Softw\nEstimativa de Custo da Manutenção\nMedição da Manutenção de Software\nProcesso de Manutenção\nNorma IEEE Std 14764-2006\nTécnicas para Manutenção\nEngenharia Reversa\nRefatoração e transformação de programas', '• Requisitos de Software\n• Construção de Software\n• Projeto Detalhado de Software\n• Veriﬁcação e Validação\n• Qualidade de Software\n• Gerência de Configuração de Software', 123, 'Software Maintenance Management: Evaluation and Continuous Improvement, Alain April e Alain Abran, Wiley, 2008.\n\nSWEBOK - Guide to Software Engineering Body of Knowledge - 2004 - Version'),
(262, 'A avaliação será realizada mediante de provas e atividades/exercícios/trabalhos. A média do discente resultará da média aritmética das notas obtidas.\nNota 1: 60% prova + 40% atividades/exercicios\nNota 2: 60% prova + 40% atividades/exercicios\n\nObservação:', '11/12/2012\n19/02/2013', '- Apresentar uma visão histórica da evolução de técnicas visando a reutilização de software.\n- Aprender alguns padrões típicos de análise, isto é, modelos conceituais de objetos reutilizáveis.\n- Apresentar uma metodologia de desenvolvimento de frameworks.', '01- Explicar e determinar para que serve a orientação a objetos;\n02- Comparar o paradigma estruturado com o paradigma OO;\n03- Citar linguagens estruturadas e OO usadas no passado e no presente;\n04- Explicar vantagens e desvantagens da POO;\n05- Implementar aplicações em linguagem orientada a objetos.\n06- Explicar e usar os principais conceitos da POO: Classe, Objetos, Instanciação de Objetos, Construtores, Atributos (propriedades / características) e Métodos (comportamentos) de Classe e de Instância, Encapsulamento, Herança e Polimorfismo;\n07- Usar classes para manipulação de coleções de objetos;\n08- Implementar interfaces gráficas com componentes;\n', 'Programacao de Computadores\nEstrutura de Dados\nProgramacao para a Web\n', 82, 'SIERRA, K.; BATES, B. Use a Cabeça! Java. 2. Ed. Rio de Janeiro: Alta Books, 2007.\n'),
(263, 'Primeiro trabalho em grupo (TG1) - Valor: 10,0 pontos\nSegundo trabalho em grupo (TG2) - Valor: 10,0 pontos\nAvaliação escrita individual (A) - Valor: 8,0 pontos\nExercícios individuais ou em grupo (E) - Valor: 2,0 pontos\nNota Final: (((TG1 + TG2)/2) + A + E', 'TG1 - 17/09/2013\nTG2 - 22/10/2013\nA - 10/12/2013\nAvaliação Substitutiva - 13/12/2013', '- Definição do Empreendedor;\n- O Cenário Mundial e Nacional;\n- Movimento Startup;\n- Estruturando e Validando.', '- Definição do Empreendedor;\n- Empreendedor Social;\n- Empreendedorismo no Brasil;\n- O Cenário Mundial;\n- E-growth;\n- Expectativas para 2013;\n- CEBIT 2013;\n- Movimento Startup;\n- O Início e o Modelo;\n- A Validação;\n- O Financiamento;\n- Entrega e apresentação de trabalhos referentes aos temas abordados na disciplina.', 'A disciplina Empreendedorismo está relacionada com todas as disciplinas do curso, pois consiste em como gerar um produto ou serviço com valor agregado e vendê-lo. Para isso é importante compreender requisitos técnicos fornecidos pelas disciplinas de Engen', 94, 'BIRLEY, Sue e MUZYKA, Daniel. Dominando os Desafios do Empreendedor – Financial Times, São Paulo, Ed. Makron Books, 2001'),
(264, 'A avaliação de desempenho dos alunos terá como base as atividade desenvolvidas em sala de aula (AS) e duas avaliações (P1 e P2) que comporão a nota final (NF) da seguinte forma:\n\nNF = (AS + P1 + P2)/3', 'P1 = 07/12/2012\nP2 = 22/02/2013', 'Expor a base teórica para entendimento de representação do conhecimento na visão da inteligência artificial.\nIntroduzir as principais técnicas de representação do conhecimento.\n', '1. Introdução a representação do conhecimento\n1.1 Conceito de conhecimento\n1.2 Conceito de representação\n1.3 Conceito de raciocínio\n1.4 Engenharia do conhecimento\n1.5 Ontologias\n\n2. Lógica de primeira ordem\n2.1 Sintaxe\n2.2 Semântica\n2.3 Pragmática\n2.4 Base de fatos\n2.5 Mecanismo de inferência\n\n3. Lógica Proposicional\n3.1 Fatos e regras\n3.2 Estratégias de busca\n3.3 Algoritmo de Inferência\n3.4 Controle de Backtracking\n3.5 Linguagem Prolog\n\n4. Regras de produção\n4.1 Sintaxe\n4.2 Construindo regras\n4.3 Mecanismo de Inferência\n4.4 Algoritmos de regras de produção\n\n5. Representação orientada à objetos\n5.1 Objetos e frames\n5.2 Usando frames\n\n6. Descrições estruturadas \n6.1 Linguagem de descrição\n6.2 Significado e inferência\n6.3 Taxonomias e classificação\n\n7. Hierarquias\n7.1 Redes Hierárquicas\n7.2 Estratégias para anular hieraquias\n\n8. Imprecisão, Incerteza e Grau de Confiança', 'Esta disciplina se relaciona seja dependendo ou fornecendo base com as seguintes disciplinas: teorias da informação, banco de dados, mineração de dados e planejamento de serviços e produtos de informação.', 85, 'Ronald J. Brachman, Hector J. Levesque Knowledge Representation and Reasoning, Morgan Kaufmann, 2004'),
(265, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\nNF = 0,4*NP1 + 0,4*NP2 + 0,2*NT\nonde:\nNP1 representa a nota da primeira prova escrita (P1);\nNP2 representa a nota da segunda prova escrita (P2);\nNT representa a nota do trabalho.\n', 'Prova 01 (P1): 01/10/2013\nProva 02 (P2): 10/12/2013\n', '- Apresentar os principais tipos de ataques a sistemas corporativos;\n- Estudar as principais técnicas desenvolvimento de código seguro;\n- Enumerar as principais ferramentas de varredura e ataques.\n- Apresentar exemplos de politicas de segurança.', '1. Introdução a Segurança\n2. Ameaças e Ataques\n3. Estratégias de ataques e defesas\n4. Vulnerabilidades em softwares, serviços e protocolos\n5. Segurança nos serviços Internet\n6. Técnicas de varredura  e análise de vulnerabilidade\n7. NAT e PROXY\n8. Relacionamento das Aplicações com os Mecanismos de Segurança\n9. Tipos e Arquitetura de Proteção\n10. Firewalls\n11. Políticas de Segurança\n12. Criptografia\n13. Normas de segurança e Gestão de Riscos de Segurança\n14. Conceitos de auditoria\n15. Auditoria de sistemas', 'Embora a disciplina não possua pré-requisito, conhecimentos relativos a redes de computadores e sistemas operacionais são desejáveis.', 113, '- NOGUEIRA, T. J. “Tudo Sobre Buffer Overflow”, São Paulo: Ciência Moderna, 2006.\n- DHANJANI, Nitesh. “Segurança no Linux e Unix”. Rio de Janeiro: Elsevier, 2003.\n- O’DEA, Michael. “Segurança no Windows”. Rio de Janeiro: Elsevier, 2004.\n- SHEMA, Mike. “Segurança na Web”. Rio de Janeiro: Elsevier, 2003.'),
(266, 'A1 =Avaliação(60%) e Trabalho (40%) \nA2 =Avaliação(40%) e Projeto (60%) \n\nNota final = A1 + A2/2', 'Avaliações\n10/12/2012\n25/02/2013\n\nTrabalhos\n03/12/2012\n04/02/2013\n\n', '1. Acesso a dados distribuídos\n2. Modelo de desenvolvimento web\n3. Segurança de aplicações Web\n4. Tecnologia e servidores de serviços web \n5. APIs \n', 'apresentar os fundamentos da programação web, arquitetura dos sistemas web, introduzir conceitos de desenvolvimento de grandes aplicações web; servidores web;ferramentas e recursos aplicados na web; visão geral das tecnologias de desenvolvimento web; comparação entre linguagens de programação web; banco de dados online; disponibilidade, integridade e acesso a dados online; integração de aplicações, metódos de integração e utilização de apis.', 'Engenharia de software\nBanco de dados\nEstrutura de dados\n', 84, 'MARCONDES, Christian Alfim. Html 4.0 Fundamental - A Base da Programação Para\nWeb. São Paulo, Érica, 2005.\nSILVA, Mauricio Samy. Criando Sites com HTML. Novatec. 2008.\nLisboa, Flávio G. da S. ZEND Framework - Componentes poderosos para PHP. Novatec.São Paulo. 2010.'),
(267, 'P1: Prova 1 – 10 pontos\nP2: Prova 2 – 10 pontos\nTG: Trabalho em grupo – 10 pontos (sendo 2 pontos pela apresentação)\n\nA nota final será obtida por meio da seguinte fórmula:\n\nNF = P1*0.2 + P2*0.3 + TG*0.5', 'P1 - 01/10/2013\nP2 - 29/10/2013\nTG - 03/12/2013', 'Ao final desta disciplina, o discente deverá:\n- compreender as diferenças entre a Web atual e a Web Semântica;\n- compreender as principais questões envolvidas na Engenharia de Software para a Web Semântica;\n- conhecer as principais tecnologias e ferramentas envolvidas na Engenharia de Software para a Web Semântica;\n- conhecer como capacitar uma aplicação para armazenar, consultar e inferir dados semânticos.', '1- Web Semântica: fundamentos, metadados e arquitetura\n2- Padrões I: URI, XML, XMLS e XML namespaces\n3- Padrões II: RDF, SPARQL e ferramentas para RDF e SPARQL\n4- Padrões III: Ontologias, RDFS, OWL e ferramentas para RDFS e OWL\n5- Construção de aplicações: processo de software, metodologia, representação de conhecimento, arcabouços, máquinas de inferência, bases de ontologias e padrões de metadados.', 'Esta disciplina visa a complementar o aprendizado das disciplinas Lógica, Matemática Discreta, Método de Desenvolvimento de Software, Banco de Dados, Engenharia de Software, Algoritmos em Grafos e Desenvolvimento de Software para a Web, além de abordar me', 71, '- Apache Jena framework. Disponível em http://jena.sourceforge.net/\n- Welcome to Protégé. Disponível em http://protege.stanford.edu.\n- Semantic Web tools. Disponível em http://www.w3.org/2001/sw/wiki/Tools.'),
(268, 'Três componentes integram a avaliação:\n\n(A) Atividades em sala de aula, laboratório e extra-classe.\n(P1 e P2) 1a. e 2a. Provas individuais.\n(PA) Projeto de Aplicação\n\nAs notas das Atividades, Provas e do Projeto de Aplicação terão valor de zero a dez.\n\nO', 'P1 (1a. prova): 17/05/2013.\nP2 (2a.prova): 29/07/2013.', 'De forma específica, a disciplina deve possibilitar aos estudantes a capacidade de:\n\na) distinguir o modelo de orientação a objetos do modelo imperativo / estruturado; \nb) explicar os principais conceitos e fundamentos da programação orientada a objetos.\nc) resolver problemas reais utilizando os conceitos da orientação a objetos; \nd) especificar e implementar programas orientados a objeto em linguagem de programação em Java com um ambiente integrado de desenvolvimento, usando recursos como teste de unidade e controle de versão;\ne) elaborar modelos simples em UML;\ne) implementar programas utilizando threads e streams.', 'I – Fundamentos de Java: plataforma, variáveis, tipos, objetos, métodos, sobrecarga, coleções, constantes, estruturas de controle, arrays, operadores, parâmetros, conversão de tipos, operações matemáticas e de strings, ambientes de desenvolvimento.\n\nII – Programação Orientada a Objetos: modelo de objetos, tipos abstratos de dados, classes, métodos, visibilidade, variáveis de instância, métodos, mensagens, construtores, escopo, associação entre classes, composição e delegação, coleções, herança de classes, interfaces, polimorfismo, teste de unidade, manipulação de eventos e interfaces gráficas.\n\nIII – Tópicos: tratamento de exceções, threads, concorrência\n\nIV – Noções de modelagem com UML, padrões de projeto e arquitetura de software.\n', 'O bom aproveitamento da disciplina Programação Orientada a Objetos depende do conhecimento das disciplinas Programação de Computadores 1 (1o. Período) e Programação de Computadores 2 (2o. Período). Esta disciplina possui uma relação de continuidade com as', 37, 'GAMMA E. et al. Design Patterns, Addison-Wesley, 1995. '),
(269, 'NF = (((T1 + T2 + T3)/3) + (P1))/2\nonde:\nT1 – Trabalho 1, seminário sobre Computação Evolucionário. T2 – Trabaho 2, trabalho de implementação 1.\nT3 – Trabalho 3, trabalho de implementação 2.\nP1 – Prova 1.', '-prova 1: 05/12/2013\n', 'Apresentar uma visão abrangente da área de Computação Evolucionária, além de apresentar métodos que podem auxiliar no processo de resolução de problemas complexos.', '1. Introdução à Inteligência Computacional\n2. Introdução à Computação Evolucionária 1. Apresentação da disciplina;\n2. Introdução sobre CE;\n3. Conceitos Biológicos;\n4. Histórico;\n5. Conceitos gerais e dos diferentes AE; 6. O Projeto de um AE;\n7. Um código canônico geral.\n3. Algoritmos Genéticos [slides e livro [2] capítulo 9] 1. Introdução;\n2. Conceitos, Fluxograma, Pseudo-código;\n3. População Inicial;\n4. Operadores (Seleção, Reprodução e Sobrevivência);\n5. Parametrização;\n6. Aplicações;\n7. Trabalho de implementação de um AG para o problema da Mochila\nMultidimensional. [5] – OR-Library.\n4. Algoritmos Evolucionários\n1. Estratégia Evolutiva [12 do livro [3]; 3.4 do livro [2] e 11 do livro [4]] 2. Programação Evolucionária [11 do livro [3]; e 3.3 do livro [2]]\n3. Algoritmos Culturais [14 do livro [3]]', 'O aluno deve aplicar os conhecimentos adquiridos nas disciplinas: Programação de Computadores I, Programação de Computadores II, Estruturas de Dados I, Estruturas de Dados II.', 4, '[1] Russel Eberhart e Yuhui Shi. Computational Intelligence: Concepts to Implementations. Morgan Kaufmann, 2007.\n[2] Andries P. Engelbrecht. Computational Intelligence: An Introduction. New York: Wiley, 2002.\n[3] Kenneth A. De Jong. Evolutionary Computation: A Unified Approach. MIT Press, 2006.\n[4] Ricardo Liden. Algoritmos Genéticos. 2a. Edição. Brasport, 2008. [5] OR-LIBRARY - http://people.brunel.ac.uk/~mastjjb/jeb/info.html'),
(270, 'A avaliação será feita a partir de três componentes: (N1) a assiduidade e participação do aluno em atividades em sala de aula (ou laboratório); (N2) trabalhos e atividades; (N3) provas em sala de aula. As provas serão realizadas a qualquer momento do curs', 'As provas serão realizadas a qualquer momento do curso, sem prévio aviso ou agendamento.', 'O aluno deverá ser capaz de entender as principais características de Agentes Inteligentes e de Sistemas Multi-Agentes. \nO aluno deverá ser capaz de entender as principais técnicas para comunicação entre agentes, as principais arquiteturas de Agentes Inteligentes e aplicações de Sistemas Multi-Agentes. ', 'Introdução à Inteligência Artificial; \nAgentes Inteligentes; \nSistemas Multiagentes; \nAspectos Sociais de Sistemas Multi-Agentes;\nApresentação de Framework(s) para desenvolvimento de Sistemas Multi-Agentes.', 'O aluno deve aplicar os conhecimentos adquiridos por/para as disciplinas: \n1 - Introdução à programação e Programação Orientada a Objetos, haja vista que estas disciplinas ensinam os alunos a arte de programar e o paradigma de orientação a objetos, que po', 110, '- WOOLDRIDGE, M. (2009) An Introduction to Multi-Agent Systems. John Wiley & Sons Ltd. 2nd. Edition.'),
(271, 'A avaliação será feita com base em três avaliações individuais e dois trabalhos em grupo, a serem realizados e entregues nos dias indicados no programa de aulas. O valor de cada avaliação ou trabalho é de dez pontos. Não haverá avaliação substitutiva, exc', 'Datas da avaliações:\nP1 - 25/09/2013\nP2 - 30/10/2013\nP3 - 06/12/2013', '1. Familiarizar o estudante com os termos e as diferentes etapas inerentes ao processo empregado no desenvolvimento de produtos de software\n2. Apresentar ao estudante as tecnologias mais empregadas recentemente em Engenharia de Software', 'Software e Engenharia de Software\n- Características do software\n- Crise do Software\n- Custos e Engenharia de Software\n\nEngenharia de Sistemas\n- Sistemas Baseados em Computador\n- Hierarquia da Engenharia de Sistemas\n- Modelagem de Sistemas\n\nProcesso de Software\n- Produto e Processo\n- Modelos de Processo\n- Processo Unificado\n\nEngenharia de Requisitos\n- Requisitos de software\n- Documento de Especificação de Software\n- Processo de Engenharia de Requisitos\n\nModelagem de Análise\n- Modelos de Contexto e de Dados\n- Modelos de Objetos e de Comportamento\n\nProjeto de Software\n- Conceitos e Modelos\n- Projetos Arquitetural e de Dados\n- Projeto de Interface com o Usuário\n\nGerência de Projetos de Software\n- Espectro de Gestão, Métricas e Planejamento\n- Análise e Gerência de Riscos\n- Acompanhamento de Projetos\n\nControle de Qualidade de Software\n- Inspeções, Revisões e Testes de Software\n\nGerência de Configuração de Software\n- Itens de Configuração de Software\n- Controle de Versão\n\nReengenharia\n- Reengenharia de negócio\n- Reengenharia de software\n', 'Sendo uma disciplina abrangente, sua missão é estabelecer o relacionamento com as demais disciplinas do curso, principalmente aquelas relacionadas à área de Engenharia de Software. Considerando o ciclo de vida de desenvolvimento, esta disciplina se relaci', 124, 'SOMMERVILLE, Ian. Engenharia de Software. Addison-Wesley, Oitava Edição, 2007.\n\nPRESSMAN, Roger S..Engenharia de Software. McGraw-Hill, Sexta Edição, 2006.\n'),
(272, 'N1: Primeira Avaliação  - Valor: 3 pontos  \nN2: Segunda Avaliação - Valor: 6 pontos \nN3:Listas (5 Listas no total) - Valor: 1 ponto\n\nNota Final = N1 + N2 + N3\n', '20/09/2013: Primeira Avaliação\n13/12/2013: Segunda Avaliação', 'Entender as características das principais partes do computador e suas inter-relações. Compreender como os dados são armazenados e manipulados pelo computador. \nApresentar como os computadores interagem com o meio externo. \nCompreender técnicas que melhoram o desempenho do computador e consequentemente das aplicações.', '1. Organização dos computadores\n  1.1. Linguagens, níveis e máquinas virtuais\n  1.2. Evolução das máquinas multinível\n2. Sistema de numeração e representação de dados\n 2.1. Conversão de base: octal, decimal, binário e hexadecimal\n 2.2. Tipos booleanos, caractere, inteiro e decimal\n3. Memória primária\n 3.1. Organização e endereçamento\n 3.2. Ordenação de bytes\n 3.3. Códigos de correção de erro\n 3.4. Memória cache\n4. Barramento\n 4.1. Barramentos síncronos e assíncronos\n 4.2. Árbitragem de barramento\n 4.3. Exemplo de barramentos: ISA, PCI, PCI Express, etc.\n5. Dispositivos de entrada e saída\n 5.1. Técnicas de entrada e saída\n 5.2. Dispositivos de entrada e saída: discos\n6. Processador\n 6.1. Ciclo do processador\n 6.2. Formato de instrução\n 6.3. Modelos de endereçamento\n 6.4. Pipeline\n7. Paralelismo de dados e controle\n 7.1. Speedup, eficiência e escalabilidade\n 7.2. Leis de Amadahl e Gustafson\n', 'A arquitetura dos computadores influencia, por exemplo, a linguagem de programação, a interconexão de computadores e o desempenho de sistemas. O aluno deverá aplicar os conhecimentos adquiridos em várias disciplinas, principalmente: Programação Imperativa', 77, '.'),
(273, 'A avaliação da disciplina considerará duas notas de prova (P1 e P2) e uma nota de exercícios EX, que serão aplicados em sala de aula, e um trabalho prático T. Durante a disciplina deverão ser aplicados 4 (quatro) exercícios.\n\nA nota final será calculada d', 'Prova 1 (P1): 08 de outubro de 2013, terça\nProva 2 (P2): 13 de dezembro de 2013, sexta\n', 'Capacitar o aluno a compreender a arquitetura e o funcionamento das redes de computadores modernas e da Internet e, ainda, oferecer uma visão prática dos ativos de rede e os protocolos utilizados na atualidade.\n', '1. Introdução às Redes de Computadores\n2. Modelos e Arquiteturas de Referência\n3. Camada de Aplicação\n4. Camada de Transporte\n5. Camada de Rede e Roteamento\n6. Camada de Enlace, Redes Locais e sem Fio', 'O aluno deve utilizar os conhecimentos adquiridos em Sistemas Operacionais e Redes de Computadores serve como base para as disciplinas Programação para Web, Projeto de Software, Aplicações Distribuídas e Segurança em Sistemas de Informação.\n', 127, 'FILHO, S. A Linux - Controle de Redes, Visual Books, 2009'),
(274, 'NF = (((T1 + T2 + T3)/3) + (P1))/2\nonde:\nT1 – Trabalho 1, seminário sobre Computação Evolucionário. T2 – Trabaho 2, trabalho de implementação 1.\nT3 – Trabalho 3, trabalho de implementação 2.\nP1 – Prova 1.', '-prova 1: 05/12/2013\n', 'Apresentar uma visão abrangente da área de Computação Evolucionária, além de apresentar métodos que podem auxiliar no processo de resolução de problemas complexos.', '1. Introdução à Inteligência Computacional\n2. Introdução à Computação Evolucionária 1. Apresentação da disciplina;\n2. Introdução sobre CE;\n3. Conceitos Biológicos;\n4. Histórico;\n5. Conceitos gerais e dos diferentes AE; 6. O Projeto de um AE;\n7. Um código canônico geral.\n3. Algoritmos Genéticos [slides e livro [2] capítulo 9] 1. Introdução;\n2. Conceitos, Fluxograma, Pseudo-código;\n3. População Inicial;\n4. Operadores (Seleção, Reprodução e Sobrevivência);\n5. Parametrização;\n6. Aplicações;\n7. Trabalho de implementação de um AG para o problema da Mochila\nMultidimensional. [5] – OR-Library.\n4. Algoritmos Evolucionários\n1. Estratégia Evolutiva [12 do livro [3]; 3.4 do livro [2] e 11 do livro [4]] 2. Programação Evolucionária [11 do livro [3]; e 3.3 do livro [2]]\n3. Algoritmos Culturais [14 do livro [3]]', 'O aluno deve aplicar os conhecimentos adquiridos nas disciplinas: Programação de Computadores I, Programação de Computadores II, Estruturas de Dados I, Estruturas de Dados II.', 5, '[1] Russel Eberhart e Yuhui Shi. Computational Intelligence: Concepts to Implementations. Morgan Kaufmann, 2007.\n[2] Andries P. Engelbrecht. Computational Intelligence: An Introduction. New York: Wiley, 2002.\n[3] Kenneth A. De Jong. Evolutionary Computation: A Unified Approach. MIT Press, 2006.\n[4] Ricardo Liden. Algoritmos Genéticos. 2a. Edição. Brasport, 2008. [5] OR-LIBRARY - http://people.brunel.ac.uk/~mastjjb/jeb/info.html'),
(275, 'A avaliação da disciplina será realizada mediante duas provas escritas (P1e P2), e alguns trabalhos, cuja média é T, podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa ou questões sobre trabalhos realizados em s', 'P1: 16/10/2013\nP2: 11/12/2013', 'Ao final do curso o aluno deve ser capaz de:\nCompreender as estruturas lógicas para o desenvolvimento de algoritmos;\nElaborar algoritmos a partir da descrição textual de pequenos problemas;\nDesenvolver programas em uma linguagem de programação;\nSelecionar estruturas de dados simples para a construção dos programas;\nElaborar algoritmos específicos para a solução de problemas numéricos e não numéricos.', '1.Conceitos Preliminares\n1.1.Noções de Lógica\n1.2.Lógica de Programação\n2.Expressões e Operadores\n2.1.Expressões Aritméticas\n2.2.Expressões Lógicas\n3.Itens Fundamentais de uma Linguagem de Programação\n3.1.Tipo de Dados\n3.2.Formação de Identificadores\n3.3.Constantes\n3.4.Variáveis\n4.Comandos Básicos\n4.1.Comando de Atribuição\n4.2.Comandos de Entrada e Saída\n4.3.Estrutura Sequencial\n5.Estruturas de Seleção\n5.1.Simples\n5.2.Composta\n5.3.Encadeada\n5.3.1.Heterogênea\n5.3.2.Homogênea\n5.4.Múltipla Escolha\n6.Estrutura de Repetição\n6.1.Com Variável de Controle\n6.2.Com Teste no Início\n6.3.Com Teste no Final\n7.Estrutura de Dados\n7.1.Variáveis Compostas Homogêneas Unidimensionais\n7.2.Variáveis Compostas Homogêneas Multidimensionais\n8.Modularização\n9.Programação em uma linguagem de alto nível', 'A disciplina promove o desenvolvimento do raciocínio lógico e estruturado do aluno, que são aplicados diretamente em disciplinas subsequentes do curso, assim como, Cálculo Numérico e Equações Diferenciais, entre outras.', 54, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(276, 'A avaliação será realizada mediante de provas e atividades/exercícios/trabalhos. A média do discente resultará da seguinte fórmula:\nNF: (PT1 + PT2)*0,3 + TP*0,3 + LE* 0,1\nPT1: Prova teórica 1\nPT2: Prova teórica 2\nTP: Trabalho Prático\nLE: Lista de Exercíci', 'PT1: 20/05/2013\nPT2: 27/06/2013\nTP: 18/07/2013\n', 'Possibilitar os discentes a serem capazes de utilizar a programação modular, conhecendo algumas das principais técnicas utilizadas na implementação de estruturas de dados e algoritmos de ordenação em memória principal. Eles ainda deverão ser\ncapazes de efetuar análises simples de complexidade de algoritmos.', 'Introdução a Estrutura de Dados\n	- Conceitos de Programação Estruturada\n	- Tipos primitivos, tipos abstratos de dados\n	- Revisão de comandos, linguagem c\n	- Introdução a vetores e matrizes\n	- Características de Alocação Sequencial e Ligada\nListas lineares\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada\nPilhas\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada\nFilas\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada\nGrafos\n	- Conceitos\n	- Operações\n	- Representação matricial\n	- Operações em alocação sequencial e ligada\nTópicos avançados\n	- Listas Circulares e Duplamente Ligadas\n	- Estrutura em árvore\n', 'Algoritmos e Estruturas de Dados', 42, 'W. Celes, R. Cerqueira, J. L. Rangel. Introdução a Estruturas de Dados - com técnicas de programação em C. Ed. Campus - ISBN 85-352-1228-0.\n'),
(277, 'Neste semestre, desenvolveremos, ao longo do curso, um projeto por grupo de estudantes. Parte do projeto será desenvolvida nas aulas presenciais e parte em encontros e atividades “extraclasse”.\nA média final da disciplina será obtida através da participaç', 'No dia 1 de março ocorrerão a entrega da versão final do projeto e a sua defesa\n(apresentação).', 'Adquirir os conceitos e técnicas básicas necessários à eficiência dos processos de Gerenciamento de Projetos para auxiliar as organizações na elaboração, implementação, avaliação e sucesso dos requisitos de governança corporativa; no entendimento dos processos de gestão de desenvolvimento/aquisição, implementação e fechamento de projetos, assim como das habilidades e capacidades necessárias na coordenação dessas atividades.', '1-Definições Básicas\n2-Ciclo de Vida de um Projeto (Iniciação, Planejamento, Execução, Controle, Fechamento)\n3-Áreas do Gerenciamento de Projetos (Escopo, Prazo, Custo, Qualidade, Recursos Humanos, comunicação, Risco, Suprimento e Integração) \n4-Competências e Habilidades do Gerente de Projeto\n5-Metodologias e Ferramentas de Gerenciamento\n6-Ferramentas Computacionais de Gerenciamento', 'A disciplina Gerenciamento de Projetos I tem relação tanto com disciplinas básicas da formação tecnológica do curso servindo de elemento integrador de diversos conhecimentos desenvolvidos, quanto com disciplinas de formação em conceitos e práticas adminis', 83, 'WARBURTON, R.; KANABAR, V. Gestão de Projetos. Saraiva Editora, 2012.'),
(278, 'Dois componentes integram a avaliação:\n\n(P1 e P2) 1a. e 2a. Provas.\n(TP) Trabalhos e Projetos.\n\nAs notas de P1, P2 e TP terão valor de zero a dez. \n\nA média final MF será assim calculada:\n\nMF = (P1*0.3) + (P2*0.3) + (T*0.4)\n\nObservações:\n\n- Os trabalhos e', 'P1 - 31/10/2013\nP2 - 06/12/2013', 'De forma específica, a disciplina deve possibilitar aos estudantes a capacidade de:\n\n- Entender o papel da área de conhecimento de Métodos e Ferramentas de software no contexto do SWEBOK;\n- Conhecer e compreender métodos heurísticos, formais e de construção de protótipos;\n- Compreender o funcionamento de ferramentas de eliciação de requisitos, modelagem de projeto, construção, realização de testes e manutenção;\n- Conhecer e entender o funcionamento de ferramentas de gerência de configuração, gerência de projeto, processo de software, qualidade e outras.\n', '1. Introdução a Métodos e Ferramentas \n\n1.1. Visão geral das ferramentas de Engenharia de Software\n1.2. Visão geral dos métodos de Engenharia de Software\n\n2. Métodos de Engenharia de Software\n\n2.1. Métodos Heurísticos\n    2.1.1 Métodos Estruturados\n    2.1.2. Métodos Orientados a Dados\n    2.1.3. Métodos Orientados a Objetos\n2.2. Métodos Formais\n    2.2.1. Linguagens de especificação\n    2.2.2. Refinamento\n    2.2.3. Propriedades de verificação\n2.3. Métodos Ágeis\n2.3. Métodos de Prototipação\n\n3. Ferramentas de Engenharia de Software\n3.1. Elicitação e rastreamento de requisitos\n3.2. Construção de projetos\n3.3. Teste de Software\n3.4. Manutenção de Software\n3.5 Gerência de Configuração\n3.6. Gerência de projetos de software\n3.7. Gerência de processos\n3.8. Qualidade de Software\n3.9. Outras\n', 'Na Engenharia de Software e em outras áreas em geral, as ferramentas e métodos são indiscutivelmente importantes, pois permitem o aumento da produtividade por meio da redução da complexidade de tarefas mais complexas e repetitivas. Esta disciplina aborda', 69, 'Sommerville, Ian (2007). Software engineering (8th edition ed.). Harlow: Addison Wesley.'),
(279, 'A avaliação da disciplina será realizada mediante três provas escritas (P1, P2 e P3), e diversos trabalhos, cuja média é T, podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa ou questões sobre trabalhos realizad', '• P1 - 03/10/2013\n• P2 - 04/11/2013\n• P3 - 12/12/2013', '•  Fornecer ao aluno elementos básicos sobre computação, em particular o estudo de algoritmos e\nimplementação de programas. Ao final do curso o aluno deve ser capaz de:\n•  Compreender a estrutura lógica de uma linguagem de programação;\n•  Elaborar algoritmos a partir da descrição textual de pequenos problemas;\n•  Desenvolver programas em uma linguagem de programação de alto nível;\n•  Selecionar estruturas de dados simples para a implementação dos programas;\n•  Elaborar algoritmos específicos para a solução de problemas numéricos e não numéricos;\n•  Utilizar ferramentas para o desenvolvimento de programas.', '1. Introdução: Apresentação da disciplina, objetivos, ementa, conteúdo programático, bibliografia,\navaliações.\n2. Conceitos Básicos da Computação e lógica de programação.\n3. Tipos primitivos, contantes e variáveis.\n4. Expressões aritméticas e lógicas\n5. Comandos: atribuição, entrada e saída.\n6. Estruturas de controle: Sequencial, seleção e repetição.\n7. Estrutura de dados homogêneas Unidimensionais e Multidimensionais.\n8. Estrutura de dados heterogêneas.\n9. Funções', 'A disciplina de Programação de Computadores 1 fornece os elementos básicos sobre computação e implementação de programas, sendo necessária principalmente na disciplina de Programação de Computadores 2. Outras disciplinas como Estruturas de Dados 1 e 2, Pr', 20, 'Herbert, S., C Completo e Total, 3a ed., Makron Books, SP 1996.'),
(280, 'A avaliação da aprendizagem será efetuada considerando duas provas, escritas individuais, e um trabalho em grupo. As provas escritas serão compostas pelo conteúdo ministrado até a data de sua aplicação.\n\nA nota final será calculada da seguinte forma:\n\nNot', 'Data de realização das avaliações:\n•	P1 - 03/12/2012 \n•	Trabalhos – 06/12/2012 a 10/01/2013 \n•	P2 – 25/02/2013\n', 'Apresentar aos alunos:\n • A importância do tratamento adequado dos requisitos para alcançar um nível satisfatório de qualidade nos sistemas de software;\n • Como aplicar os principais processos relacionados com os requisitos dentro do ciclo de vida de um sistema de software;\n • Como aplicar as principais técnicas de levantamento e elicitação de requisitos;\n • O que é gerência de requisitos: processos, métodos, técnicas e ferramentas;\n • As principais normas e padrões relacionadas com requisitos e suas principais características; e\n • A importância da documentação de requisitos e modelos de referência para esta documentação.', '1 - Revisão da Engenharia de Software: visão geral, subáreas e objetivos, caracterização de software (produto e processo), processos do ciclo de vida de um software, relação com Engenharia de Sistemas, papel dos requisitos.\n2 - Fundamentos de Requisitos: definições, taxonomia, fontes de informação, relações com outros artefatos.\n3 - Processos Relacionados a Requisitos: técnicas de levantamento e elicitação, análise, especificação e validação.\n4 - Normas e padrões para modelagem e documentação.\n5 - Gerenciamento de Requisitos: processo, rastreabilidade e controle de mudanças.\n6 - Verificação e Validação de Requisitos.', '• Arquitetura de Software\n• Projeto Detalhado de Software\n• Verificação e Validação\n• Manutenção de Software\n• Gerência de Configuração\n• Gerência de Projeto de Software • Processo de Software\n• Qualidade de Software', 78, 'IEEE. Std 830 – Recommended Practice for Software Requirements Specifications, 1998.\nIEEE. Std 1362 – Guide for Information Technology – System Definition – Concept of Operations (ConOps) Document, 1998.\nIEEE. Guide to the Software Engineering Body of Knowledge. Cap. 2 – Software Requirements, 2004.\nLarman, Craig. Utlizando UML e Padrões - Uma introdução à análise e ao projeto orientados a objetos. Editora Bookman, 3ª Edição, 2007.\n'),
(281, 'A avaliação da disciplina será realizada mediante uma prova escrita (P1), e um trabalho\n(T1), podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa e/ou questões sobre trabalhos realizados em aula.\n\nO trabalho cons', 'Prova 1 : 09/10/2013\nTrabalho 1: 04/12/2013', 'Ao final da disciplina o aluno deverá ser capaz de identificar e trabalhar com os artefatos desenvolvidos no processo de desenvolvimento de software. O aluno deverá ser capaz de planejar, desenvolver, e acompanhar projetos de software de acordo com as necessidades e com os objetivos do mundo real em que o software irá atuar. ', '1. Apresentação da Disciplina\n2. Processos de Software.\n3. Gerenciamento de Projetos\n4. Gerência de Configuração\n5. Ferramentas CASE e Frameworks\n6. Engenharia de Requisitos\n7. Arquitetura de Software\n8. Projeto de Software/Software Orientado a Objetos\n9. Projeto de Interface com o Usuário\n10. Verificação e Validação de Software\n11. Manutenção, Evolução e Reengenharia\n', 'Requisitos de Software, Projeto de Software, Processo de Software, Arquitetura de Software, Qualidade de Software, Verificação e Validação, Gerencia de Configuração de Software, Engenharia de Software, Métodos de Desenvolvimento de Software', 56, 'Guide to the Software Engineering Body of Knowledge (SWEBOK) - 2004 version. Editado pro IEEE Computer Society');
INSERT INTO `plano` (`id`, `criterioavaliacao`, `datarealizacaoprovas`, `objetivosespecificos`, `programa`, `relacaooutrasdisciplinas`, `turma_id`, `bibliografiasugerida`) VALUES
(282, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n        P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova prática individual – Valor: 10,0 pontos\n	TG – Trabalho Geral – Valor: 1', '1a. Prova Teórica - 20/12/2012\n2a. Prova Teórica e Prática - 28/02/2013 e 04/03/2013.', 'Exercitar as principais estruturas de dados homogenias e heterogenias.  \n Estudar e praticar as estruturas de dados do tipo listas sequenciais e listas encadeadas. \n Estudar e praticar as estruturas de dados do tipo árvores binárias, binárias de buscas e AVL e os principais algoritmos de inserção, remoção e buscas.\n Estudar e praticar as estruturas de dados do tipo árvores de Índices (B tree) e algoritmos.\n ', '1. Apresentação do Programa:\n 1.1 Explanação sobre os conteúdos a serem abordados durante o curso\n  1.2  Critério de Avaliação\n  1.3  Bibliografia\n  1.4  Motivação e expectativas para a disciplina.\n2.  Introdução\n  2.1  Estruturas de dados simples\n  2.2  Estruturas de dados vetores e matrizes\n  2.3  Exercícios de estruturas homogenias.  \n3. Matrizes\n   3.1 Tipos especiais de matrizes\n   3.2 Mapeamento de matrizes em vetores,\n   3.3 Aplicação de Matrizes\n   3.4 Matrizes esparsas e algoritmos de atuação\n    3.5 Exercícios práticos.\n4. Listas Lineares Estáticas e seus algoritmos:\n    4.1 Definição de Tipos de listas estáticas\n     4.2 Listas sequenciais\n     4.3 Listas com apontadores de controle\n     4.4 Pilhas estáticas\n     4.5 Filas estáticas\n     4.6 Exercícios práticos.\n5. Recursos de Encadeamentos em listas:\n     5.1 Representação visual.\n     5.2 Representação de inserção e remoção.\n6. Listas Encadeadas Dinamicamente e algoritmos:\n     6.1 Listas lineares encadeadas;\n     6.2 Pilhas encadeadas;\n     6.3 Filas encadeadas;\n     6.4 Listas duplamente encadeadas.\n7. Árvores e seus algoritmos\n    7.1 Introdução à teoria de árvores\n    7.2 Árvore binária e seus algoritmos\n    7.3 Árvores binárias de buscas e seus algoritmos\n8. Árvores binárias Balanceadas e seus algoritmos:\n    8.1 Introdução à Arvores AVL;\n    8.2 Balanceamento de Árvores e seus tipos;\n    8.3 Inserção em árvores balanceadas binárias;\n    8.4 Remoção em árvores balanceadas binárias;\n    8.5 Exemplos e algoritmos de buscas\n9. Árvores Balanceadas B Tree e principais algoritmos:\n    9.1 Árvores 2,3,4;\n    9.2 Árvores B;\n    9.3 Exercícios e trabalhos práticos.', 'A disciplina de Estruturas de dados será trabalhada em conjunto com as disciplinas de programação visando desempenhar mais a teoria e demonstrar algoritmos principais. Na disciplina de programação será praticado exemplos que utilizam as estruturas estudad', 63, 'Dictionary of Algorithms and Data Structures. URL: http://www.nist.gov/dads/.'),
(283, 'Nota Final = Média aritmética simples de três notas: N1 (nota da Prova 1), N2 (nota da Prova 2) e T (nota composta pelos trabalhos realizados ao longo do curso).', 'Prova 1: 31/10/2013\nProva 2: 12/12/2013\n', 'Elaborar algoritmos a partir da descrição textual de pequenos problemas; Selecionar estruturas de dados simples para a implementação dos algoritmos; Desenvolver programas em uma linguagem de programação procedural de alto nível.', 'Apresentação da Disciplina: Identificação; Ementa; Conteúdo Programático; Objetivos; Procedimentos Didáticos; Avaliação da Aprendizagem; Bibliografias.\nVisão sobre algoritmos e linguagens de programação.\nElementos Fundamentais da Construção de Algoritmos:  Tipo de Dados; Formação de Identificadores; Constantes; Variáveis; Comando de Atribuição; Comandos de Entrada e Saída. \nExpressões e Operadores: Expressões Aritméticas; Expressões Lógicas.\nEstrutura Sequencial.\nEstruturas de Seleção: Simples; Compostas; Encadeada Heterogênea; Encadeada Homogênea; Múltipla Escolha.\nEstruturas de Repetição: Com Teste no Início; Com Teste no Final; Com Variável de Controle; Encadeada.\nEstruturas de Dados Simples: Variáveis Compostas Homogêneas (Vetores e Matrizes).\nModularização e Funções.\nRecursividade.\nDesenvolvimento e Implementação de Algoritmos em Linguagem de Programação.', 'Algoritmos e Programação 2; Estrutura de Dados 1; Cálculo Numérico; Pesquisa Operacional 1.\n\n', 52, 'EDMONDS, Jeff, Como pensar sobre algoritmos, Rio de Janeiro: LTC, 2010, 284 p.'),
(284, 'A avaliação será feita a partir de três componentes: (N1) a assiduidade e participação do aluno em atividades em sala de aula (ou laboratório); (N2) trabalhos e atividades; (N3) provas em sala de aula. As provas serão realizadas a qualquer momento do curs', ' As provas serão realizadas a qualquer momento do curso, sem prévio aviso ou agendamento.', 'O aluno deverá ser capaz de explicar o funcionamento de aplicações Web; entender os princípios de programação para Web, as camadas das aplicações para Web e as partes da aplicação que devem ser executadas ou interpretadas seja no servidor, seja no cliente; utilizar plataformas e frameworks atuais para desenvolvimento de aplicações dinâmicas para Web.', 'Como funciona a Web; Introdução aos Servlets; Classes e Interfaces para Servlets; Cookies e Sessões; Introdução a JavaServer Pages; Controle de Erros; Actions; JavaBeans; Trabalho com Banco de Dados; Model-View-Controller e Data Access Object; JavaServer Pages Expression Language; JavaServer Pages Standard Tag Library; Custom Tags; JavaServer Faces; Hibernate; Primefaces.', 'O aluno deve aplicar os conhecimentos adquiridos por/para as disciplinas: \n1 - Introdução à programação e Programação Orientada a Objetos, haja vista que estas disciplinas ensinam os alunos a arte de programar e o paradigma de orientação a objetos, que po', 126, 'SPEEGLE, G. D. JDBC : Practical Guide for Java Programmers. Morgan Kaufmann Publishers, 2002.\nHALL, M. Core Web Programming. Prentice Hall, 1997.'),
(285, 'Neste curso será adotada a avaliação continuada, composta de uma série de avaliações aplicadas ao longo do semestre.\n\nA nota final NF será composta da média aritmética das notas obtidas nas avaliações, desprezando-se, no máximo, 20% do número total de ava', 'De acordo a proposta de avaliação continuada, as avaliações não têm datas marcadas\nantecipadamente.\n', '- Desenvolver o conceito sobre os principais conceitos da lógica proposicional, em particular as noções de sintaxe, semântica e relação de consequência lógica.\n- Introduzir os principais conceitos da lógica de primeira ordem, em particular as noções de sintaxe, semântica e relação de conseqüência lógica.\n- Desenvolver o raciocínio analítico e a habilidade de elaborar sentenças logicamente precisas.\n- Desenvolver a habilidade de distinguir os argumentos válidos dos inválidos.\n- Empregar os conceitos e técnicas da Lógica Matemática na solução de problemas práticos em computação.\n- Iniciar o aluno no paradigma da Programação em Lógica.', '1. Conceitos básicos:\n- Lógica Formal\n- Dedução e Indução\n- Lógica Clássica e Lógica Simbólica\n- Proposições e Predicados\n- Princípios da Lógica\n\n2. Cálculo Proposicional:\n- Proposições simples e compostas\n- Operações lógicas sobre proposições\n- Fórmulas bem formadas\n- Construção de tabelas-verdade\n- Tautologias, contradições e contingências\n- Equivalência e inferência lógica\n- Formas normais\n- Sistemas dedutivos\n\n3. Cálculo de Predicados:\n- Predicados, termos constantes e variáveis\n- Operações lógicas\n- Quantificadores\n- Representação clausal\n- Resolução e Refutação\n\n4. Programação em Lógica:\n- Noções básicas da linguagem Prolog\n', 'A formalização da dedução matemática favorece o aprendizado da disciplina Matemática Discreta. A lógica possui diversas aplicações, como por exemplo: projeto e simplificação de circuitos digitais, verificação de programas, especificação formal de software', 17, 'SILVA, Flávio Soares da. Lógica para Computação. Editora Cengage Learning, 2006.'),
(286, 'A avaliação da disciplina será realizada mediante três provas (P1, P2 e P3). A nota de cada prova será multiplicada pelo fator multiplicativo do aluno até o momento da prova. A média final será obtida pela fórmula:\n\nMédia final = FM*0.3*P1 + FM*0.4*P2 + F', '• P1 - 07/10/2013\n• P2 - 11/11/2013\n• P3 - 16/12/2013', '•  Fornecer ao aluno elementos básicos sobre computação, em particular o estudo de algoritmos e\nimplementação de programas. Ao final do curso o aluno deve ser capaz de:\n•  Compreender a estrutura lógica de uma linguagem de programação;\n•  Elaborar algoritmos a partir da descrição textual de pequenos problemas;\n•  Desenvolver programas em uma linguagem de programação de alto nível;\n•  Selecionar estruturas de dados simples para a implementação dos programas;\n•  Elaborar algoritmos específicos para a solução de problemas numéricos e não numéricos;\n•  Utilizar ferramentas para o desenvolvimento de programas.', '1. Introdução: Apresentação da disciplina, objetivos, ementa, conteúdo programático, bibliografia, avaliações.\n2. Conceitos Básicos da Computação e lógica de programação.\n3. Tipos primitivos, contantes e variáveis.\n4. Expressões aritméticas e lógicas\n5. Comandos: atribuição, entrada e saída.\n6. Estruturas de controle: Sequencial, seleção e repetição.\n7. Estrutura de dados homogêneas Unidimensionais e Multidimensionais.\n8. Estrutura de dados heterogêneas.\n9. Funções', 'A disciplina de Programação de Computadores 1 fornece os elementos básicos sobre computação e implementação de programas, sendo necessária principalmente na disciplina de Programação de Computadores 2. Outras disciplinas como Estruturas de Dados 1 e 2, Pr', 18, 'Herbert, S., C Completo e Total, 3a ed., Makron Books, SP 1996.'),
(287, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n\n	N1 – Apresentações de projetos de pesquisa (Avaliação 1) – Valor: 10,0 pontos\n        N2 - Apresentações de artigos (Avaliação 2)– Valor: 10', 'Data da realização das avaliações (datas podem sofrer alterações):\n\nN1: 11/09/13\nN2: 09/10/13 a 23/10/13\nN3: 11/12/13', 'Capacitar o aluno a aplicar técnicas de leitura, redação e apresentação de trabalhos de pesquisa e técnicos.', '1 Introdução\n2 Introdução a metodologia cientifica \n3 Leitura de documentos\n4 Pesquisa e Desenvolvimento\n5 Linguagem Científica \n6 Técnicas de apresentações\n7 Escrita de artigos \n8 Trabalhos e Comunicação Científica', 'Os conceitos apresentados estão relacionados com toda disciplina que implique na elaboração de documentos técnicos, em especial, com a disciplina de Projeto de Final de Curso.', 104, 'WAZLAWICK, R.S., Metodologia de Pesquisa para Ciência da Computação, Editora Elsevier, 2009.\nBARROS, Aidil de Jesus da Silveira. Fundamentos da Metodologia Científica. 3 ed. 3a. Reimpressão. São Paulo. Pearson Prentice Hall, 2010. \nSEVERINO, Antonio Joaquim. Metodologia do Trabalho Científico. 22 ed. Revisada e ampliada. São Paulo: Cortez, 2002. '),
(288, 'A NF será composta da média ponderada das 2 avaliações escritas individuais, compondo 90% da \nnota e a média aritmética dos trabalhos propostos em sala e ou extra-classe, compondo 10% na \nnota. Assim: \n NF = 0,9*(AV1 + 2AV2)/3 + 0,1*E \nonde E é a média ar', 'Data da realização das provas (datas podem sofrer alterações):\n- AV1: 29/10/2013\n- AV2: 13/12/2013', 'Ao final do curso o aluno deve ser capaz de:\n• Compreender a estrutura lógica de uma linguagem de programação;\n• Elaborar algoritmos a partir da descrição textual de pequenos problemas;\n• Desenvolver programas em uma linguagem de programação;\n• Selecionar estruturas de dados simples para a implementação dos programas;\n• Elaborar algoritmos específicos para a solução de problemas numéricos e não numéricos;', '0 Histórico da Computação\n1 Introdução e Conceitos básicos\n2 Estrutura sequencial e seleção\n3 Estrutura de Repetição\n4 Estrutura de dados\n5 Modularização\n', 'A disciplina de Introdução à computação fornece os elementos básicos sobre computação e implementação de programas, sendo utilizada em disciplinas como Cálculo Numérico, Probabilidade e Estatística, Programação Linear, Teoria dos Grafos entre outras.', 86, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de\nAlgoritmos e Estrutura de Dados. 3a Edição. Prentice Hall. 2005.\n'),
(289, 'Neste semestre, desenvolveremos, ao longo do curso:\n\n- 3 (três) provas escritas individuais (P1, P2 e P3)\n\n- 4 (quatro) trabalhos em grupo (TG)\n\nA Nota Final (NF) é calculada da seguinte maneira:\n           NF = MPI*0.7 + MTG*0.3\nOnde, \nMPI: média aritmét', 'P1: 06/05/2013\nP2: 13/06/2013\nP3: 22/07/2013\n\nOS trabalhos em grupo serão:\n15/04/2013 - Apresentação do TG01. Apresentação de outros exemplos de auditorias em TI\n03/06/2013 - Estudo dirigido e trabalho sobre Tipos de Auditorias\n27/06/2013 - Apresentação d', 'Apresentar os fundamentos básicos de Auditoria de Sistemas de Informação, como conceitos e abordagens, organização do trabalho de auditoria e documentação. \nEnsinar as ferramentas e técnicas de Auditoria de Sistemas de Informação.\nApresentar os diferentes tipos de Auditoria e os padrões e código de ética para auditoria de sistemas de informação, bem como controles internos e avaliações de auditoria. ', 'Fundamentos de Auditoria de Sistemas de Informação (SI)\n- Histórico e conceitos de sistemas\n- Conceitos de auditoria de SI\n- Abordagens de auditoria de SI\n- Organização de trabalho de auditoria \n- Documentação\n\nPadrões e código de ética para Auditoria de SI\n\nDesenvolvimento de equipe de auditoria\n\nControles Internos & Avaliação\n- Fundamentos de controles internos\n- Avaliação dos procedimentos de controles internos\n- Análise de risco na avaliação de sistema de controles internos\n\nFerramentas e Técnicas de Auditoria\n- Ferramentas: software generalista de auditoria, softwares especializados, programas utilitários \n- Técnicas: dados de teste, facilidade de teste integrado, simulação paralela, lógica de auditoria embutida nos sistemas, rastreamento e mapeamento, análise de lógica de programação\n- Aplicação de Técnicas de Auditoria Assistida por Computador (TAAC)\n\nAuditorias de Controles Organizados e Operacionais\n- Políticas organizacionais, descrição de cargos e objetivos de auditoria\n\nAquisição, desenvolvimento, manutenção e documentação de sistemas\n- Controles de desenvolvimento e manutenção de sistemas\n- Controles de documentação de sistemas\n- Objetivos de auditoria\n- Programa de teste de controles\n\nTipos de Auditorias\n- Auditorias de Controles de Hardware\n- Auditorias de Controles de Acesso\n- Auditoria de Operação do Computador\n- Auditoria de Controles de Suporte Técnico\n- Auditoria de Redes de Computadores\n- Procedimentos de auditoria de sistemas aplicativos\n- Auditoria de plano de contingência e de recuperação de desastres\n\nAvaliação de Software de Auditoria de Sistemas\n- Pré-requisitos\n- Metodologia de seleção\n- Pacotes disponíveis no mercado\n- Ferramentas de análise de dados\n\nEmissão de Relatórios de Auditoria de Sistemas\n', 'A disciplina Auditoria de Sistemas tem forte relação com as disciplinas que compõem o processo de desenvolvimento de software, como: Engenharia de Software, Banco de Dados, Redes de Computadores, Segurança em SI e Qualidade de Software. Na disciplina de A', 99, 'FONTES, Joaquim Rubens. Manual de Auditoria de Sistemas, Ed. Ciência Moderna'),
(290, 'Neste curso será adotada a avaliação continuada, composta de uma série de avaliações aplicadas ao longo do semestre.\n\nA nota final NF será composta da média aritmética das notas obtidas nas avaliações, desprezando no máximo 20% do número total de avaliaçõ', 'De acordo a proposta de avaliação continuada, as avaliações não têm datas marcadas\nantecipadamente.\n', 'Desenvolver nos alunos a compreensão e habilidade para programação utilizando:\n- Estruturas de dados homogêneas\n- Modularização de programas\n- Recursividade\n- Aritmética de ponteiros\n- Estruturas de dados heterogêneas\n- Manipulação de arquivos', 'Revisão sobre conceitos básicos de linguagem C. Estruturação de memória ocupada e utilizada. Tipos, Variáveis, Operadores e Expressões. Fluxo de Controle (Comandos de Seleção, Repetição, Desvio). Estruturas de dados homogêneas – Vetores e Matrizes. Funções e estrutura de um programa. Passagem de parâmetro por valor e por referência\nProtótipo de funções. Arquivos de cabeçalho. Escopo de variáveis. Vetores como argumento de funções. Os argumentos argc e argv. Recursividade. Declarando e utilizando ponteiros. Estruturas e dados definidos pelo usuário. Arquivos.\n', 'O aluno deve aplicar e expandir os conhecimentos adquiridos na disciplina Programação de Computado-res I. Os conceitos e habilidades de programação desenvolvidos nesta disciplina são básicos para várias outras disciplinas do curso, tais como: Programação', 33, 'MIZRAHI, V. V. Treinamento em linguagem C++. Módulo I. São Paulo: Makron Books, 2004.'),
(291, 'A avaliação da aprendizagem será realizada através de listas de exercícios e provas. As listas e provas comporão as notas N1, N2 e N3 (listas com peso 2 e provas com peso 8). A média final será a média aritmética das notas N1, N2 e N3.', '- P1: 20/09/2013\n- P2: 01/11/2013\n- P3: 10/12/2013', 'Apresentar e discutir a evolução das arquiteturas de computadores e sua estruturação em níveis de abstração. Revisar os sitemas de númeração e os circuitos lógicos básicos usados em computadores. Discutir como representar dados de diferentes tipos na memória do computador. Estudar sistemas de interconexão, e dispositivos e técnicas de entrada e saída. Apresentar o funcionamento de um processador básico e como programá-lo ao nível de linguagem de máquina e linguagem de montagem. Discutir configurações de memória em forma hierárquica. Estudar arquiteturas de computadores paralelos e como programar e avaliar o desempenho destas máquinas.', 'Máquinas multinível\nEvolução das arquiteturas de computadores\nSistemas de numeração\nMemória e sua organização\nRepresentação de dados: tipos lógico, caractere e inteiro\nRepresentação de dados: tipo real\nBarramentos, Dispositvos de Entrada e Saída (E/S): discos\nTécnicas de Entrada e Saída (E/S)\nRepresentação de instruções, ciclo de busca-decodifica-executa\nProcessador – xComputer\nFormato de instruções, Modos de endereçamento\nArquitetura e Linguagem de Montagem MIPS\nPipeline, Ordem de bytes e introdução a memória cache\nMemória e correção de erros\nClassificação de Computadores: mono, multi e manycore\nSpeedup, eficiência e escalabilidade\nParalelismo de dados e controle, Leis de Amadahl e Gustafson', 'O aluno deverá aplicar os conhecimentos adquiridos nas seguintes disciplinas: \nProgramação Imperativa, Sistemas Operacionais, Redes de Computadores, Aplicações Distribuídas.', 38, '-Organização estruturada de computadores / Andrew S. Tanenbaum'),
(292, 'A avaliação da aprendizagem será feita através de: \n2 Provas escritas e\n4 Trabalhos.\nA nota final da disciplina será calculada conforme a fórmula abaixo:\n\nMédia = (P1  + P2 + T1 + T2 + T3 + T4) / 6\n \nonde P1 e  P2  e são as notas referentes às provas e T1', 'Data da realização da avaliação escrita:\n\n•	P1 - 25/09/2013\n•	P2 - 27/11/2013\n\n', '- Conhecer os conceitos que envolvem os aspectos da interação humano-computador.\n- Aplicar uma metodologia de projeto de interfaces num ambiente real.\n- Elaborar roteiros para avaliação de usabilidade de interfaces.\n- Implementar interfaces que envolvam os aspectos ergonômicos.', '1. Conceitos Preliminares\nConceito de Interação\nConceito de Affordance\nConceito de Metáfora\n2. Elementos de Interação, Modelos Conceituais\n e Dispositivos de Interação\n3. Princípios de Projeto de Interfaces Homem-computador\n4.  Métodos de Projeto de Interfaces Homem-computador\n5. Avaliação de Interfaces Homem-computador\nTestes de Usabilidade\nHeurísticas para Avaliação de Interfaces\nMétodos para Avaliação de Interfaces\n6. Visão geral de ferramentas de desenvolvimento de interfaces homem-computador.\n7. Padrões para Organização do Conteúdo\n8. Padrões para Navegação\n9. Padrões para Layout de Páginas\n10.Padrões para a Exibição de Dados Complexos\n11. Padrões para Dispositivos Móveis\n12. Padrões para o Desenvolvimento de Jogos\n', 'Para desenvolver sistemas de informação que apoiem as atividades cotidianas das pessoas, seja nas empresas, na indústria ou no lar, faz-se necessário o desenvolvimento de design de sistemas que sejam interativos que fornecem suporte à essas atividades. De', 100, '• NBR ISO 9241-11 – Requisitos Ergonômicos para Trabalho de Escritórios com Computadores - Parte 11 – Orientações sobre Usabilidade, 2002. \n• NBR ISO/IEC 9126-1 – Software Engineering—Product quality - Part 1: Quality model, 2001.'),
(293, 'A avaliação da aprendizagem será feita através de prova (peso 0,5) e trabalho de implementação individual (peso 0,5).', 'Prova 1: 22/04/2013\nProva 2: 01/07/2013', 'O curso apresenta os fundamentos da programação paralela e distribuída, descrevendo as principais arquiteturas e paradigmas de programação. Além do embasamento teórico, o curso permitirá ao aluno desenvolver aplicações práticas nessas plataformas.\n', 'Introdução à Programação Paralela e Distribuída (definições, taxonomias, tendências). Arquiteturas Paralelas (arquiteturas, topologias, organizações). Programação Paralela (desempenho, paradigmas de programação, aplicações). Programação Paralela usando memória compartilhada (conceitos básicos, coerência de memória, condições de corrida, detecção de impasse, sincronização, programação multithread, OpenMP, OpenCL, CUDA). Programação Paralela usando Passagem de Mensagem (noções básicas, mensagem síncrona/assíncrona, particionamento e balanceamento de carga, MPI). Introdução à programação distribuída (arquiteturas e modelos de programação). Programação Distribuída: (problemas e conceitos fundamentais - sincronização, exclusão mútua, detecção de término, relógios, ordem de eventos, travas). Ferramentas de computação distribuída (CORBA, JavaRMI, Web Services, Map-Reduce, Hadoop). Computação Paralela e Distribuída - Tendências e Visões (Cloud e Grid Computing, Computação P2P)\n', '-projeto de Análise de Algoritmos\n-arquitetura de computadores\n-sistemas distribuídos', 93, '-Programming Massively Parallel Processors: A Hands-on Approach, David B. Kirk , Wen-mei W. Hwu, Morgan Kaufmann.\n-Kay Hwang, Jack Dongarra, Geoffrey C. Fox, Distributed and Cloud Computing, Morgan Kaufmann, 2011\n'),
(294, 'P1	– Prova escrita individual	– Valor: 10,0 pontos\nTG	– Trabalho Geral		        – Valor: 10,0 pontos\nLt 	– Listas de Exercícios		– Valor: 10,0 pontos\n', 'Média Final = (Lt * 0,1) + (P1 * 0,4) + (TG * 0,5)', 'Transmitir ao estudante os conceitos de imagens e manipulação das mesmas. Desenvolver algoritmos e aplicações para manipulação de dados de mídia.', 'Tecnologias e representação digital. Hardware e software necessáriios e específicos para manipulação de imagens. Formatos de arquivos, bitmap, resolução de imagens, compressão e manipulação. O modelo de cores, vídeo e digitalização.\n', 'O aluno deve aplicar os conhecimentos adquiridos através das disciplinas: algoritmos e estrutura de dados.', 32, 'PINTO, Marcos José. Flash 4. São Paulo, 1999'),
(295, 'A nota final (NF) será calculada da seguinte forma:\nNF = 0,3*P1+0,3*P2+0,3*P3.\n\nOnde P1 é a nota da Prova 1, P2 é a nota da Prova 2 e P3 é a nota da Prova 3.', 'P1: 01/10/2013\nP2: 05/11/2013\nP3: 13/12/2013', 'Capacitar o aluno a representar problemas reais através de Grafos; Capacitar o aluno a escolher a melhor estrutura de dados para representar o Grafo, de acordo com as características do problema e o algoritmo a ser aplicado. Contribuir para a formação científica do aluno na área de Computação.', '1. Noções básicas de grafos.\n2. Representação de grafos.\n3. Ciclos Eulerianos e Hamiltonianos\n4. Algoritmos de caminho mais curto\n5. Árvores\n6. Conectividade\n7. Planaridade.\n8. Coloração de vértices\n9. Conjunto independentes de vértices\n10. Matching.\n11. Fluxo em redes.', 'Esta disciplina se relaciona fortemente com as disciplinas: Pesquisa Operacional e Redes de\nComputadores. Muitos problemas de redes podem ser modelados em um grafo, com isso, os algoritmos estudados neste curso (Teoria dos Grafos) são aplicados para resol', 12, 'Feofiloff, P., Kohayakawa, Y., Wakabayashi, Uma Introdução Sucinta à Teoria dos Grafos,\nhttp://www.ime.usp.br/~pf/teoriadosgrafos/'),
(296, 'Apresentação de seminário em grupo (40%)\nEntrega de artigo sobre o tema apresentado (40%).\nPresença e participação em sala de aula (20%).\n\nA apresentação de seminário será avaliada considerando os seguintes critérios:\n\nDO GRUPO\n1. Inicio da apresentação n', 'Não haverá prova.', 'Analisar e compreender ética e comportamento ético.\nAnalisar a influência e a aplicação da computação na sociedade.\nCompreender os aspectos relacionados à computação social e inclusão digital.\nAnalisar, discutir e compreender as questões sociais, econômicas, éticas e profissionais relacionadas à área de TI.\nAnalisar, discutir e compreender os seguintes conceitos: Propriedade intelectual, Software Proprietário, Software Livre, Segurança e privacidade, Acesso não-autorizado, Erros e ameaças à segurança, Privacidade e uso de dados pessoais, Saúde ocupacional, Regulamentação da profissão, Códigos de ética profissional. \nCompreender o funcionamento das Redes Sociais e como eles influenciam a vida das pessoas.', 'Ética e comportamento ético.\nTecnologia da Informação e Sociedade.\nAplicações Sociais da Computação: Educação, Medicina, Governo, etc.\nComputação Social e Inclusão Digital.\nAspectos sociais, éticos, legais e profissionais da área de TI.\nPropriedade intelectual.\nSoftware Proprietário x Software Livre.\nSegurança e privacidade.\nAcesso não-autorizado.\nErros e ameaças à segurança.\nPrivacidade e uso de dados pessoais.\nSaúde ocupacional.\nRegulamentação da profissão.\nCódigos de ética profissional.\nRedes Sociais.', 'Não possui relação direta com nenhuma disciplina específica, entretanto pode ser complemento para todas as disciplinas do curso, uma vez que demonstra os aspectos éticos e sociais relacionadas à área de computação.', 14, 'DRUMMOND, V. Internet Privacidade e Dados Pessoais. Editora Lumen Juris, 2003.\n\nLUCCA, N., FILHO, A. S. Direito & Internet. Editora Edipro, 2001.\n\nPAESANI, L. M. Direito de Informática. Editora Atlas, 2005.'),
(297, 'Serão realizadas duas provas individuais (P1 e P2), cada uma valendo 10 pontos e trabalhos em grupos e/ou individuais ao longo do curso (NT), totalizando 10 pontos. \nCada trabalho ser entregue escrito ou feito uma apresentação oral do mesmo segundo orient', 'P1: 11/10/2013\nP2: 10/12/2013', '• Apresentar conceitos básicos sobre hardware.\n• Apresentar conceitos básicos sobre software.\n• Apresentar conceitos básicos sobre comunicação de dados e assuntos correlatos.\n• Motivar a escrita de documentos técnico-científicos\n• Exercitar a apresentação em público', '1. Histórico da Computação, Visão Geral do Computador, Software e Hardware \n2. Visão Geral do INF e do Curso de Ciências da Computação\n3. Profissionalismo e ética\n4. Metodologia cientifica e elaboração de documentos técnico-científicos\n5. Representação de dados\n6. Modelagem e resolução de problemas\n', 'Essa disciplina é ministrada no primeiro semestre e apresenta uma visão geral do que será\napresentado ao longo do curso de Ciência da Computação.', 13, 's/n'),
(298, 'Prova 1 : 30% \nProva 2 : 50%\nProva 3:  20%\n\nNota final = P1 * 0,3 + P2 * 0,5 + P3 * 0,2', 'P1 = 30/09/2013\nP2 = 22/10/2013\nP3 = 03/12/2013\n', 'Despertar nos alunos a capacidade de resolução de problemas.', 'Entrega do conteúdo da disciplina e apresentação.\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; Desenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; Desenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação\nExpressões aritméticas e lógicas; estruturas de decisão\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação\nEstruturas de controle; estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação', '￼￼O aluno deve aplicar os conhecimentos de lógica de programação em outras disciplinas, como programação imperativa.', 114, '.'),
(299, 'A avaliação será feita a partir de trabalhos feitos fora do horário de aulas, e de dois exames escritos, a serem realizados nos dias indicados neste plano de aula. \n\nCada trabalho será previamente definido pelo docente em sala de aula. A definição inclui', '29/11/2012 (quinta-feira)\n21/02/2013 (quinta-feira)', 'Compreender os princípios científicos da Engenharia de Software. Conhecer e aplicar estudos experimentais como etnografia, surveys (levantamento de campo, entrevistas e questionários), e experimentos controlados. Correlacionar estudos primários e secundários na Engenharia de Software. Entender os tipos de experimentos que se aplicam na Engenharia de Software.', '- O Contexto da Experimentação na Engenharia de Software;\n- Metodologia Científica aplicada à Engenharia de Software;\n- Engenharia de Software Experimental;\n- Definição de Experimentos com Software;\n- O Estado da Arte em Experimentação com Software;\n- Realização de Experimentos em Software.', 'Todas as disciplinas da Engenharia de Software podem ser objeto de experimentação. Dessa forma, o conhecimento adquirido nesta disciplina pode ser aplicado juntamente com qualquer outra disciplina para a realização de experimentos.', 59, 'Basics of Software Engineering Experimentation, Natalia Juristo e Ana M. Moreno, Springer, 2001. Disponível on-line: http://www.grise.upm.es/miembros/natalia/books.php. Acesso em: 10/10/2012.\n\nExperimentation in Software Engineering, Claes Wohlin, Per Runeson, Martin Höst and Magnus C. Ohlsson, 2a ed. Springer, 2012.'),
(300, 'A avaliação será baseada em um projeto de desenvolvimento de software realizado na Fábrica de Software do Inf. A nota final do projeto será dada pela média ponderada dos resultados de três avaliações feitas sobre o projeto. \nCada avaliação terá como base:', 'Data da Realização das Avaliações: \n•	Avaliação 1: 19/09/2013 – Peso 2\n•	Avaliação 2: 17/10/2013 – Peso 3\n•	Avaliação 3: 05/12/2013 – Peso 5\n', 'Integrar todo o conhecimento das disciplinas do curso de forma que os alunos compreendam as relações entre elas, a sua importância para a Engenharia de Software, e os produtos e atividades pertinentes a cada uma delas.\nFornecer e elucidar uma visão coesa e integrada da Engenharia de Software de tal forma que o estudante desenvolva uma sólida percepção de como fazer uso do conhecimento desta área em toda a sua extensão.\nAo final da disciplina o aluno deverá ser capaz de planejar e executar projetos de desenvolvimento de software. O aluno deverá ter a experiência de participar de uma equipe de desenvolvimento de software, exercendo papéis técnicos, gerenciais e de apoio.\n', 'Processo de Engenharia de Software \nGerência de Engenharia de Software \nRequisitos de Software\nArquitetura e Design de Software\nGerência de Configuração de Software \nConstrução de Software \nTeste de Software \nManutenção de Software \nMétodos e Ferramentas de Engenharia de Software \nQualidade de Software', 'Todas as disciplinas do curso de Engenharia de Software serão abordadas, em maior ou menor grau, dentro dos tópicos dessa disciplina, pois o objetivo dela é justamente integrar o conhecimento de todas essas disciplinas.', 67, '•	Alain Abran, James W. Moore, Pierre Bourque, Robert Dupuis (Eds). Guide to the Software Engineering Body of Knowledge (SWEBOK). Versão Eletrônica Disponível em http://www.swebok.org/. IEEE Computer Society, 2004.\n•	Ian Sommerville. Engenharia de Software. Pearson, Nona Edição, 2011. \n•	Roger S. Pressman. Engenharia de Software. McGraw-Hill, Sétima Edição, 2009.\n'),
(301, 'Critério de avaliação \n•	A avaliação da aprendizagem será efetuada considerando:\no	Participação em sala de aula\no	Exercícios\no	Provas\no	Trabalhos práticos\n•	Os trabalho/exercícios poderão ser individuais ou em grupos\nA avaliação será realizada de acordo c', '\nAVAL1  30/09/2013\nAVAL2  18/11/2013', '- Definir políticas de processo\n- Definir ambiente de processos \n- Definir processos padrão \n- Avaliar a execução de processos\n', 'Apresentação do Programa da disciplina:\nConteúdo programático, metodologia de trabalho, critério de avaliação, referências bibliográficas\nMPS.BR\nDefinição de Processos\nAvaliação de Processos\n', 'Essa disciplina tem relacionamento direto com a disciplina Engenharia de Software, cujos conceitos são necessários para entender o contexto da disciplina de Processo de Software. Também está diretamente relacionada com as disciplinas de Requisitos, Design', 55, 'CMMI Product Team, SEI - Carnegie Mellon University. CMMI for Development, Version 1.3 (CMU/SEI-2010-TR-033). Versão Eletrônica Disponível em http://www.sei.cmu.edu/library/abstracts/reports/10tr033.cfm.'),
(302, 'A avaliação será baseada na participação do aluno em um projeto de desenvolvimento de software realizado na Fábrica de Software do Inf. A nota final do aluno será dada pela média aritmética dos resultados das avaliações de relatórios individuais elaborado', 'Todas as segundas-feiras, iniciando no dia 02/09/2013 e encerrando no dia 09/12/2013.', 'Aplicar, em um projeto real, as práticas recomendadas pela Engenharia de Software, gerando produtos de qualidade.\nDesenvolver no estudante uma sólida percepção de como fazer uso do corpo de conhecimento da Engenharia de Software.\nPropiciar ao aluno a experiência de participar de uma equipe de desenvolvimento de software, exercendo papéis técnicos, gerenciais e de apoio, no contexto de um projeto real.\n', 'Aplicação prática de atividades técnicas, gerenciais e de apoio em Engenharia de Software, dentro do contexto de um projeto real de desenvolvimento de software. ', 'Todas as disciplinas do curso de Engenharia de Software serão abordadas, em maior ou menor grau, dentro das práticas previstas nessa disciplina, pois o objetivo dela é justamente colocar em prática o conhecimento obtido pelo estudante em todas essas disci', 68, '•	CMMI Product Team, SEI - Carnegie Mellon University. CMMI for Development, Version 1.3 (CMU/SEI-2010-TR-033). Versão Eletrônica Disponível em http://www.sei.cmu.edu/library/abstracts/reports/10tr033.cfm.'),
(303, 'Nota Final = Média aritmética simples de três provas.', '03/10/2013, 21/11/2013 e 19/12/2013.\n', 'Capacitar o aluno a modelar problemas de otimização do mundo real; Contribuir para a formação científica do aluno na área de Computação.', '1. Apresentação do Plano; Contextualização histórica da Pesquisa Operacional.\n2. Breve revisão de Álgebra Linear.\n3. Modelagem em Programação Linear (PL).\n4. Resolução gráfica de Problemas de PL (PPL).\n5. Formato padrão; Definições: Conjunto viável, Solução Básica Viável, Solução ótima.\n6. Redução de um PPL para o formato padrão.\n7. Caracterização do conjunto viável.\n8. Fundamentação teórica do Simplex\n9. Algoritmo Simplex Fase 2\n10. Algoritmo Simplex Fases 1 e 2.\n11. Dualidade: O algoritmo Simplex Dual.', 'Os conhecimentos adquiridos através das disciplinas Álgebra Linear e Programação de\nComputadores 1 são bastante utilizados no decorrer deste curso. Esta disciplina também se\nrelaciona com Teoria dos Grafos e Redes de Computadores, pois diversos problemas', 25, 'BREGALDA, PF, OLIVEIRA, AAF, BORNSTEIN, CT, Introdução à Programação Linear, Campus, 1988.\nGOLDBARG, Marco Cesar e LUNA, Henrique Pacca L. Otimização Combinatória e Programação Linear: Modelos e Algoritmos. Editora Campus. Seg. Edição 2005.\nMACULAN, N, FAMPA, M. H. C., Otimização linear. Editora UnB, 2006.\nPINTO, LL, BORNSTEIN, CT, SimPLex INTerativo - SPLINT. Em: http://www.cos.ufrj.br/splint.'),
(304, 'Três componentes integram a avaliação:\n\n(A) Atividades/participação em sala de aula e laboratório.\n(P1 e P2) 1a. e 2a. Provas escritas individuais.\n(T) Trabalhos: desenvolvimento, pesquisa e projeto.\n\nAs notas das Provas e dos Trabalhos terão valor de zer', '1a. prova individual: 10/10/2013\n2a. prova individual: 05/12/2013', 'De forma específica, a disciplina deve possibilitar aos estudantes a capacidade de:\n\n-Explicar, descrever e discutir os principais conceitos e modelos de Sistemas Distribuídos;\n- Explicar, descrever e discutir os principais mecanismos de transparência na comunicação distribuída;\n- Explicar e descrever os principais conceitos e requisitos para sincronização e coordenação de eventos;\n- Explicar e descrever como funciona a chamada remota a procedimentos e a invocação   a objetos distribuídos, utilizando Java RMI;\n- Explicar os fundamentos quanto à linguagem de definição de interfaces Implementar aplicações distribuídas utilizando a linguagem Java para instanciar objetos distribuídos e invocar seus métodos;\n- Implementar aplicações distribuídas por meio da comunicação inter-processo envolvendo as APIs Java UDP e TCP;\n- Explicar e descrever o funcionamento dos serviços de nomes e diretórios.\n- Explicar e descrever as técnicas de replicação, transações distribuídas e comunicação de grupo;\n- Implementar aplicações distribuídas em Java utilizando técnicas e algoritmos discutidos na disciplina.\n', 'I - Caracterização de sistemas distribuídos: compartilhamento de recursos; transparências de distribuição; serviços; principais problemas e desafios; exemplos de sistemas distribuídos; aplicações distribuídas.\n\nII - Modelos de sistema: arquitetura geral de sistemas distribuídos (middleware, cliente-servidor, peer-to-peer, agentes móveis); requisitos de projeto (desempenho, qualidade de serviço, confiabilidade, transparência); modelos de interação; modelos de falha; modelos de segurança.\n\nIII - Processos em sistemas distribuídos: comunicação interprocessos (API de sockets, representação de dados); processos clientes e processos servidores; uso de threads; código móvel e agentes, protocolo requisição-resposta, comunicação em grupo.\n\nIV - Objetos distribuídos: chamada de procedimentos remotos (RPC); modelo de objetos distribuídos (interfaces, referência de objeto, operações, exceções, chamada de métodos remotos); uso e implementação de RMI; plataformas de middleware e processamento distribuído aberto; Java RMI; CORBA; eventos e notificações.\n\nV - Serviços de nomes e serviços de diretórios: publicação e descoberta de serviços, principais tecnologias disponíveis.\n\nVI - Segurança em sistemas distribuídos: principais aspectos de segurança (confidencialidade, integridade, autenticação, não-repúdio); uso de criptografia; assinaturas e certificados digitais.\n\nVII - Novos modelos de sistemas distribuídos: sistemas peer-to-peer; web services; computação em grade; computação móvel e ubíqua.\n\nVIII - Replicação e tolerância a falhas:  comunicação confiável; replicação e manutenção de consistência entre réplicas; transações distribuídas; comunicação de grupo.', 'O bom desempenho do aluno nesta disciplina depende do embasamento teórico e prático do aluno adquirido nas disciplinas relacionadas a Sistemas de Computação, incluindo: Arquitetura de Computadores, Sistemas Operacionais 1 e 2, Redes de Computadores 1 e 2.', 36, 'COULOURIS, G. F.; DOLLIMORE, J.; KINDBERG, T. - Sistemas Distribuídos: Conceitos e Projeto, 4a. Edição. Pearson Education, 2007.\n\nTANENBAUM, A.S.; STEEN, M. – Sistemas Distribuídos: Princípios e Paradigmas, 2a. Edição. Pearson Education, 2007.'),
(305, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual\nserá composta por:\nP1 – Prova escrita individual – Valor: 10,0 pontos\nP2 – Prova escrita individual – Valor: 10,0 pontos\nTG – Trabalho em grupo 1 – Valor: 10,0 p', '26 de Setembro de 2013 e 14 de Novembro de 2013.', 'Fazer com que o aluno entenda o papel do projeto detalhado de software no ciclo de vida de software e no contexto de vários modelos de ciclo de vida;\nFazer com que o aluno entenda a distinção e a relação existente entre arquitetura de software e projeto de software;\nFazer como que o aluno entenda os princípios básicos de projeto de software (encapsulamento, coesão e acoplamento) e os padrões de projeto que permitem aplicá-los durante o desenvolvimento de software;\nFazer com que o aluno entenda os principais aspectos notáveis de projetos (concorrência, controle de eventos, distribuição de exceções, tolerância a falhas, interfaces e persistência de informação, componentização e reutização) e as abordagens que permitem tratá-los;\nFazer com que o aluno entenda as diferentes abordagens para projeto de software (projeto funcional, projeto funcional, projeto orientado a objetos, projeto orientado por responsabilidades e por contratos);\nFazer com que o aluno compreenda os componentes de modelagem estrutural (estática) e modelagem comportamental (dinâmica) que fazem parte do processo de projeto de software;\nFazer com que o aluno conheça as principais métricas e avaliações da qualidade de projetos de software;\nFazer com que o aluno aplique na prática de laboratório um método de projeto de software orientado a objetos que utilize a linguagem de modelagem UML e padrões de projeto.\nFazer com que o aluno aplique na prática de laboratório ferramenta CASE para suportar a documentação dos artefatos de projeto obtidos;', 'Definição de projeto.\nQuestões fundamentais do projeto:\n-persistência dos dados;\n-concorrência;\n-exceções e outras.\nContexto de projeto em vários modelos de desenvolvimento de software.\nPrincípios de projeto:\n- encapsulamento de informações,\n- alta coesão e\n- baixo acoplamento.\nInteração entre projeto e requisitos.\nAtributos qualitativos em um projeto:\n- confiabilidade,\n- usabilidade,\n- manutenibilidade,\n- testabilidade,\n- desempenho,\n- segurança,\n- tolerância a falhas e outros.\nRelação entre arquitetura de software e projeto de software.\nProjeto orientado a objetos.\nOutras abordagens:\n- projeto baseado em estrutura de dados\n- projeto orientado a aspectos.\n- projeto orientado por responsabilidade.\n- projeto por contratos.\nPadrões de projeto:\n- padrões GRASP e\n- Padrões Gang of Four\nProjeto de componentes.\nProjeto de interfaces entre componentes e sistemas.\nNotações de projeto.\nFerramentas de suporte a projeto (análise estática, avaliação dinâmica e outras).\nMedidas de atributos de projeto e Métricas de projeto.', 'A disciplina de Projeto Detalhado Software está intimamente ligada com as demais disciplinas ligadas à área de Engenharia de Software (Engenharia de Software, Engenharia de Requisitos, Banco de dados, Arquitetura de Software).\nOs conceitos de ciclo de vid', 60, 'Padrões de Projeto, Editora: Bookman - Autor: ERICH GAMMA & RICHARD HELM & RALPH\nJOHNSON & ET AL. Ano: 2000 - Edição: 1'),
(306, 'A avaliação será realizada por meio de 2 provas (P1 e P2) e um trabalho prático (T) individual. A partir dessas avaliações serão calculadas duas notas parciais NP1 e NP2, atribuindo diferentes pesos às avaliações, assim calculadas:\n\nNP1 = 0.3*P1 + 0.3*P2', 'P1 - 29/10/2013\nP2 - 10/12/2013\n', 'Ao final do curso, o aluno deverá:\n- Saber identificar as principais ameaças e técnicas que comprometem a segurança em uma rede de computadores ou sistema computacional.\n- Saber identificar, contextualizar e aplicar dos mecanismos de criptografia, autenticação e garantia de integridade de mensagens.\n- Conhecer e identificar a aplicabilidade dos principais protocolos de segurança para redes de computadores.\n- Ter noções do gerenciamento de segurança em uma empresa e entender todos os aspectos  que envolvam o desenvolvedor de software, o gerente de projetos de software e o administrador de redes.', '1. Introdução à Segurança Computacional e de Sistemas.\n2. Ameaças e Ataques: Principais Técnicas de Ataques; Vulnerabilidades e Ciclo de vida de correção; Virus, Worms, Trojans e equivalentes; Spoofing; DoS; Ataques a Sistemas;\nEngenharia Social; Contra-medidas.\n3.   Criptografia: Principios da Criptografia; Criptografia de Chave-simétrica; Criptografia de Chave-pública.\n4. Integridade: Assinaturas Digitais; Hashing.\n5.   Distribuição de Chaves e Certificação: Infra-estrutura de distribuição de chaves.\nCertificação de chaves-públicas\n6. Autenticação\n7. Protocolos de Segurança: PGP e SSL\n8.   Gerenciamento de Segurança e Noções de Auditoria: Metodologia de Desenvolvimento Seguro, Planejamento e Administração de Segurança; Controle de Riscos.', 'Os conteúdos das disciplinas Redes de Computadores 1 e 2 são fundamentais para melhor\ncompreensão dos contextos de ameaças e protocolos de segurança discutidos ao longo do curso.', 35, 'ISO/IEC. Norma 17799 - Tecnologia da Informação – Código de Prática para Gestão da Segurança de Informações, 2000.'),
(307, 'A avaliação da aprendizagem será efetuada considerando exercícios resolvidos em aula,\nexercícios extra-classe e trabalhos. Será realizado trabalho em grupo e/ou individual, cuja\navaliação será parte da nota. Cada prova será realizada considerando todo o c', 'Prova 1: 18/10\nProva 2: 06/12', '1. Saber caracterizar criticamente um sistema distribuído em relação às propriedades de\ntransparência, abertura, escalabilidade e flexibilidade, assim como identificar fatores de projeto dos sistemas que influenciam cada uma dessas propriedades.\n2. Compreender e saber aplicar os modelos de programação de objetos distribuídos e de web services a problemas práticos.', '1. Programação com sockets: Modelo de Comunicação por Sockets; Sockets TCP; Sockets UDP\n2. Introdução aos sistemas distribuídos: caracterização de de sistemas distribuídos (transparência, abertura,\nescalabilidade e outros); modelo de sistema; arquitetura de aplicações distribuídas; comunicação interprocessos.\n3. Sistemas de Objetos Distribuídos: RPC; modelo de objetos distribuídos (interface X implementação); invocação remota de objetos; Java RMI; coleta de lixo em objetos distribuídos; serviços de nome;\nplataforma de middleware para objetos distribuídos.\n4. Arquiteturas orientadas a serviços: modelo de arquiteturas orientadas a serviços; Web services; SOAP; WSDL; UDDI\n5. Comunicação assíncrona: eventos e notificações; serviços de comunicação publish/subscribe.\n6. Arquiteturas Peer-to-Peer.\n7. Arquiteturas Avançadas para Aplicações Distribuídas: arquiteturas de servidores de aplicação; estudo de caso de alguns middlewares para computação distribuída', 'A disciplina é fortemente dependente dos conteúdos apresentados na disciplina de Redes de Computadores. Os problemas discutidos da disciplina só podem ser adequadamente\ncompreendidos se feitos à luz da compreensão da complexidade de uma rede de computador', 118, 'Coulouris, G. F. et al., Distributed Systems: Concepts and Design, 4th edition, Addison-Wesley, 2005.\nCay S. Horstmann; Gary Cornell. Core Java Volume II – Advanced Features, Eighth Edition.\nPrentice Hall\n');
INSERT INTO `plano` (`id`, `criterioavaliacao`, `datarealizacaoprovas`, `objetivosespecificos`, `programa`, `relacaooutrasdisciplinas`, `turma_id`, `bibliografiasugerida`) VALUES
(308, 'Cada avaliação (N1, N2, N3, N4) valerá no máximo 10 pontos.\n\nPara formar a nota dos trabalhos (N2, N4), poderá ser cobrado mais de um trabalho e ser realizada a média das notas das atividades para compor a nota do trabalho (N2, N4).\n\nN1: Primeira avaliaçã', 'Primeira avaliação escrita: 11/10/2013.\nSegunda avaliação escrita 03/12/2013.', '1. Entendimento do conceito de orientação a objetos.\n2. Entendimento do conceito de Tipos Abstratos de Dados.\n3. Estudo de herança, composição e polimorfismo.\n4. Boas práticas de programação.\n5. Desenvolvimento de programas em Java orientados a objetos.\n6. Familiarização com IDEs.', 'Paradigma de orientação a objetos. Linguagens orientadas a objetos. Abstração e tipos abstratos. Classes, métodos, encapsulamento, interface. Mensagens, instâncias e inicialização. Herança e composição. A combinação de herança e composição. Polimorfismo: variáveis polimórficas, sobrecarga, construtores. Ambiente integrado de desenvolvimento (IDE): conceituação e utilização. Implementação de programas em Java. Introdução a objetos em Java: encapsulamento, classes, métodos, objetos, mensagens, construtores, composição, herança, polimorfismo. Estudos de caso de aplicações desenvolvidas com a linguagem de programação Java.', 'As disciplinas Introdução à Programação e Programação Imperativa são pré-requisito para o aluno cursar esta disciplina, portanto, este já está familiarizado com o desenvolvimento de algoritmos estruturados e modularizados. A disciplina é pré-requisito par', 98, 'SIERRA, K. Head First Java, 2005.'),
(309, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\nP1 – Prova escrita individual – Valor: 10,0 pontos\nP2 – Prova escrita individual – Valor: 10,0 pontos\nTG – Trabalho em grupo 1 – Valor: 10,0 p', '26 de Setembro de 2013 e 14 de Novembro de 2013.\n\n\n', 'Fazer com que o aluno entenda o papel do projeto detalhado de software no ciclo de vida de software e no contexto de vários modelos de ciclo de vida;\nFazer com que o aluno entenda a distinção e a relação existente entre arquitetura de software e projeto de software;\nFazer como que o aluno entenda os princípios básicos de projeto de software (encapsulamento, coesão e acoplamento) e os padrões de projeto que permitem aplicá-los durante o desenvolvimento de software;\nFazer com que o aluno entenda os principais aspectos notáveis de projetos (concorrência, controle de eventos, distribuição de exceções, tolerância a falhas, interfaces e persistência de informação, componentização e reutização) e as abordagens que permitem tratá-los;\nFazer com que o aluno entenda as diferentes abordagens para projeto de software (projeto funcional, projeto funcional, projeto orientado a objetos, projeto orientado por responsabilidades e por contratos);\nFazer com que o aluno compreenda os componentes de modelagem estrutural (estática) e modelagem comportamental (dinâmica) que fazem parte do processo de projeto de software;\nFazer com que o aluno conheça as principais métricas e avaliações da qualidade de projetos de software;\nFazer com que o aluno aplique na prática de laboratório um método de projeto de software orientado a objetos que utilize a linguagem de modelagem UML e padrões de projeto.\nFazer com que o aluno aplique na prática de laboratório ferramenta CASE para suportar a documentação dos artefatos de projeto obtidos;', 'Definição de projeto.\nQuestões fundamentais do projeto:\n-persistência dos dados;\n-concorrência;\n-exceções e outras.\nContexto de projeto em vários modelos de desenvolvimento de software.\nPrincípios de projeto:\n- encapsulamento de informações,\n- alta coesão e\n- baixo acoplamento.\nInteração entre projeto e requisitos.\nAtributos qualitativos em um projeto:\n- confiabilidade,\n- usabilidade,\n- manutenibilidade,\n- testabilidade,\n- desempenho,\n- segurança,\n- tolerância a falhas e outros.\nRelação entre arquitetura de software e projeto de software.\nProjeto orientado a objetos.\nOutras abordagens:\n- projeto baseado em estrutura de dados\n- projeto orientado a aspectos.\n- projeto orientado por responsabilidade.\n- projeto por contratos.\nPadrões de projeto:\n- padrões GRASP e\n- Padrões Gang of Four\nProjeto de componentes.\nProjeto de interfaces entre componentes e sistemas.\nNotações de projeto.\nFerramentas de suporte a projeto (análise estática, avaliação dinâmica e outras).\nMedidas de atributos de projeto e Métricas de projeto.', 'A disciplina de Projeto Detalhado Software está intimamente ligada com as demais disciplinas ligadas à área de Engenharia de Software (Engenharia de Software, Engenharia de Requisitos, Banco de dados, Arquitetura de Software).\nOs conceitos de ciclo de vid', 97, 'Padrões de Projeto, Editora: Bookman - Autor: ERICH GAMMA & RICHARD HELM & RALPH\nJOHNSON & ET AL. Ano: 2000 - Edição: 1'),
(310, 'O critério de avaliação será composto de 3 notas com os seguintes pesos:\n\n20% (EX) exercícios feitos em aula e laboratórios\n40% (PROJ) projeto de implementação de software seguro\n40% (PROVA) média das 2 provas', 'P1:  2 de outubro (quarta)\nP2: 4 de dezembro (quarta)', 'Ao final do curso, o aluno deverá:\n1. Saber identificar as principais ameaças e técnicas que comprometem a segurança em uma rede de computadores ou sistema computacional.\n2. Saber identificar, contextualizar e aplicar dos mecanismos de criptografia, autenticação e garantia de integridade de mensagens.\n3. Conhecer e identificar a aplicabilidade dos principais protocolos de segurança para redes de computadores.\n4. Entender a necessidade e os aspectos que envolvem o gerenciamento de segurança em uma empresa e entender todos os aspectos que envolvam o desenvolvedor de software, o gerente de projetos de software e o administrador de redes.', '1. Introdução à Segurança Computacional\n2. Criptografia: Principios da Criptografia; Criptografia de Chave-simétrica; Criptografia de Chave-pública\n3. Integridade: Assinaturas Digitais; Hashing\n4. Distribuição de Chaves e Certificação: Infra-estrutura de distribuição de chaves; Certificação de chaves-públicas\n5. Autenticação: Requisitos para Protocolos de Autenticação; Single Signon; Outros mecanismos de autenticação\n6. Protocolos de Segurança: PGP; SSL; IPSec; Redes virtuais privadas\n7. Gerenciamento de Segurança: Modelagem de Ameaças, Metodologia de Desenvolvimento de Software Seguro; Planejamento e Administração de Segurança; NBR ISO/IEC 27001; Controle de Riscos\n8. Ameaças e Ataques: Principais Técnicas de Ataques; Vulnerabilidades e Ciclo de vida de correção; Spoofing; DoS; Ataques a Sistemas, Principais vulnerabilidades em aplicações, Injeção de Comandos, Buffer Overflow; Contra-medidas.', 'Os conteúdos da disciplina Redes e Sistemas Distribuídos são fundamentais para melhor compreensão dos contextos de ameaças a segurança discutidos ao longo do curso.', 72, '+ Nakamura, Emilio. Segurança de Redes em Ambientes Cooperativos. Editora Novatec. 2007.\n+ ABNT. Norma NBR ISO/IEC 27001. 2006\n+ Stuttard, Dafydd e Pinto, Marcus. The Web Application Hacker''s Handbook. Wiley Publishing Co. 2008.\n+ Li Gong, Gary Ellison e Mary Dageforde. Inside Java 2 Platform Security: Architecture, API Design, and Implementation, Addison- Wesley, 2003.\n+ Harold Tipton; Micki Krause. Information Security Management Handbook, 5th edition, CRC Press, 2004.\n'),
(311, '2 Provas (P1 e P2)\n1 Seminário (SEM)\nExercícios de laboratório (EXL)\n\nNF =0,25 * P1 + 0,3 * P2 + 0,3 *  EXL + 0,15 * SEM', '19/10/13 (Sábado) P1\n07/12/13 (Sábado) P2\nData do Seminário: 14/12/13', '-Aplicar teoria dos grafos para análise de redes sociais;\n-Estudar complexidade de algoritmos tendo problemas de grafos como exemplos;\n-Desenvolvimento de algoritmos para caminhos mínimos e árvores geradoras mínimas.', '1) Conceitos básicos: \nAlguns exemplos de grafos\nIsomorfismo\nVizinhanças, cortes e graus\nCaminhos e circuitos\nSubgrafos\nGrafos conexos e componentes \nRedes sociais como grafos\n\n2) Revisão das linguagens C/C++\n\n3)Representações de grafos:\nMatriz de incidência\nMatriz de Adjacência \n\n4)Grafos dirigidos: \nAlgumas propriedades e Aplicações\n\n5) Pesquisa em grafos:\nBusca em Largura\nBusca em Profundidade\nAlgoritmos de busca\n\n6)Árvores geradoras mínimas:\nAlgoritmos e Aplicações\n\n7)Caminhos mínimos:\nAlgoritmos e Aplicações', '-Relação com estrutura de dados;\n-complexidade de algoritmos;\n-Pesquisa Operacional', 73, '-MATEMATICA DISCRETA E SUAS APLICAÇOES\nAutor: ROSEN, KENNETH H.\nEditora: MCGRAW HILL - ARTMED\n\n-Bundle of Algorithms in Java, Parts 1-5: Fundamentals, Data Structures, Sorting, Searching, and Graph Algorithms, Robert Sedgewick, Addison-Wesley, 3rd edition, 2003\n'),
(312, 'Neste semestre, desenvolveremos, ao longo do curso, um projeto por grupo de estudantes. Parte do projeto será desenvolvida nas aulas presenciais e parte em encontros e atividades “extraclasse”.\nA média final da disciplina será obtida através da participaç', 'No dia 18 de dezembro ocorrerão a entrega da versão final do projeto e sua defesa\n(apresentação).', 'Adquirir os conceitos e técnicas básicas necessários à eficiência dos processos de Gerenciamento de Projetos para auxiliar as organizações na elaboração, implementação, avaliação e sucesso dos requisitos de governança corporativa; no entendimento dos processos de gestão de desenvolvimento/aquisição, implementação e fechamento de projetos, assim como das habilidades e capacidades necessárias na coordenação dessas atividades.', '1-Definições Básicas\n2-Ciclo de Vida de um Projeto (Iniciação, Planejamento, Execução, Controle, Fechamento)\n3-Áreas do Gerenciamento de Projetos (Escopo, Prazo, Custo, Qualidade, Recursos Humanos, comunicação, Risco, Suprimento e Integração) \n4-Competências e Habilidades do Gerente de Projeto\n5-Metodologias e Ferramentas de Gerenciamento\n6-Ferramentas Computacionais de Gerenciamento', 'A disciplina Gerenciamento de Projetos I tem relação tanto com disciplinas básicas da formação tecnológica do curso servindo de elemento integrador de diversos conhecimentos desenvolvidos, quanto com disciplinas de formação em conceitos e práticas adminis', 106, 'WARBURTON, R.; KANABAR, V. Gestão de Projetos. Saraiva Editora, 2012.'),
(313, 'Nota Final =[ P1*0.2 + P2*0.2 + P3*0.4 + TRF * 0.2 ]\n\nP4  = Prova do dia 05/12/2013 substitutiva\n\nLegenda: P1 - P4 provas práticas.\n\nA nota da prova P4 substituirá sempre a menor nota entre P1 ou P2 ou P3.', '24/09/2013\n29/10/2013\n28/11/2013\n05/12/2013\n10/12/2013 Entrega do Trabalho Final\n12/12/2013 Entrega do Trabalho Final', 'Capacitar o desenvolvimento de  programas modulares e de programas recursivos. Capacitar aos alunos quanto à compreensão e utilização  dos tipos mais comuns de passagens de parâmetros e de mecanismos de alocação de memória. Capacitar o aluno a utilizar ferramentas de apoio a programação como depuradores de código, gerenciadores de compilação, otimizadores de código. Ensinar os tipos básicos de acesso a arquivos e os comandos de uma linguagem de programação que possibilitam ler, gravar, e adicionar dados em arquivos, segundo as formas de acesso sequencial e indexada. Desenvolver a capacidade de utilizar sintaxe própria de linguagens de programação que permitam a criação de novos tipos de dados.', '	Modularização\n	Funções;\n	Escopo;\n	Passagens de parâmetros;\n	Retorno de função;\n	Recursividade\n	Cadeias de caracteres – implementação e funções para manipulação  de cadeias de   caracteres;\n	Pesquisa binária\n	O Tipo ponteiro\n	Alocação e liberação dinâmica de memória;\n	Estruturas de dados heterogêneas: registros (structs) e registros variantes (union)\n	Arquivos\n	Sequenciais;\n	Arquivos de texto;\n	Arquivos binários;\n	Ferramentas de Programação\n	Depuradores', 'O aluno deve aplicar e expandir os conhecimentos adquiridos na disciplina Introdução à Programação. Os conceitos e habilidades de programação desenvolvidos nesta disciplina são básicos para várias outras disciplinas do curso, tais como: Estruturas de Dado', 121, 'FEOFILOFF, Paulo. Algoritmos em Linguagem C,  Ed. Elsevier, 2009.'),
(314, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n	P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova escrita individual – Valor: 10,0 pontos\n	P3 – Prova escrita individual – Valor', 'P1: 19/11/2012\nP2: 19/12/2012\nP3: 18/02/2013', 'Exercitar a prática de projeto, implementação e utilização de aplicações de Bancos de Dados;\nHabilitar o aluno a propor soluções computacionais para problemas de relativa complexidade na área de Banco de Dados;\nExercitar a capacidade de raciocínio lógico;\nExercitar a capacidade de expressão oral e escrita.', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n1.1. Bancos de Dados e usuários de BD\n1.2.  Sistemas de Bancos de Dados\n1.3. Modelos de Dados e Esquemas de BD\n1.4. Arquiteturas de Sistemas de Bancos de Dados\n2. O Modelo Relacional\n2.1. Conceitos, fundamentos, restrições de integridade\n2.2. Esquemas de BD relacionais\n2.3. Linguagens para BD relacionais (álgebra relacional e cálculo relacional)\n2.4. SQL\n3. Modelagem de Dados usando o Modelo E/R\n3.1. O Modelo de Entidades e Relacionamentos\n3.2. Diagrama de Entidades e Relacionamentos\n3.3. Dicionário de Dados\n3.4. Modelo ER estendido e diagrama de classe UML\n4. Projeto de Banco de Dados Relacional\n4.1. Mapeamento a partir do modelo ER e EER\n4.2. Dependências funcionais\n4.3. Formas normais e normalização\n', 'Lógica Matemática (lógica de primeira ordem)\nSistemas Gerenciadores de Banco de Dados', 57, 'SETZER, V.W. Projeto Lógico e Projeto Físico de Bancos de Dados. Belo Horizonte: V Escola de Computação, 1986.'),
(315, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n	P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova escrita individual – Valor: 10,0 pontos\n	P3 – Prova escrita individual – Valor', 'P1: 03/10/2013\nP2: 14/11/2013\nP3: 16/12/2013', 'Exercitar a prática de projeto, implementação e utilização de aplicações de Bancos de Dados;\nHabilitar o aluno a propor soluções computacionais para problemas de relativa complexidade na área de Banco de Dados;\nExercitar a capacidade de raciocínio lógico;\nExercitar a capacidade de expressão oral e escrita.', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n1.1. Bancos de Dados e usuários de BD\n1.2.  Sistemas de Bancos de Dados\n1.3. Modelos de Dados e Esquemas de BD\n1.4. Arquiteturas de Sistemas de Bancos de Dados\n2. O Modelo Relacional\n2.1. Conceitos, fundamentos, restrições de integridade\n2.2. Esquemas de BD relacionais\n2.3. Linguagens para BD relacionais (álgebra relacional e cálculo relacional)\n2.4. SQL\n3. Modelagem de Dados usando o Modelo E/R\n3.1. O Modelo de Entidades e Relacionamentos\n3.2. Diagrama de Entidades e Relacionamentos\n3.3. Dicionário de Dados\n3.4. Modelo ER estendido e diagrama de classe UML\n4. Projeto de Banco de Dados Relacional\n4.1. Mapeamento a partir do modelo ER e EER\n4.2. Dependências funcionais\n4.3. Formas normais e normalização\n\n', 'Lógica Matemática (lógica de primeira ordem)\nSistemas Gerenciadores de Banco de Dados', 58, 'SETZER, V.W. Projeto Lógico e Projeto Físico de Bancos de Dados. Belo Horizonte: V Escola de Computação, 1986.\nHead First SQL: Your Brain on SQL - A Leaner’s Guide, Lynn Beighley, O’Reilly, 2007.\n'),
(316, 'A avaliação da aprendizagem será feita através de listas de exercícios, provas e trabalhos. As listas de exercícios terão peso de 20%, enquanto as provas terão peso de 80%. Cada conjunto de lista de exercícios e prova originará uma nota. Os trabalhos terã', 'Prova 1: 12/09/2013\nTrabalho 1: 03 a 17/10/2013\nProva 2: 21/11/2013\nTrabalho 2: 12 a 23/12/2013', 'Fornecer ao aluno elementos que lhe permitam identificar diferentes estruturas de representação de informações em computadores e algoritmos básicos para manipulação das mesmas. Neste contexto, ao final do curso o aluno deve ser capaz de escolher a estrutura mais apropriada ao tipo de problema a ser resolvido e convertê-la para linguagens de programação procedurais ou orientadas a objetos.\n\nMais especificamente, \n\n- Apresentar os fundamentos das seguintes estruturas de dados: tabelas de espalhamento, árvores B, estruturas de dados em memória auxiliar.\n- Discutir e exercitar aplicações das estruturas de dados estudadas.\n- Apresentar e analisar algoritmos fundamentais para manipulação de dados: ordenação e busca; casamento de padrões; e compressão.\n- Discutir e exercitar aplicações dos algoritmos estudados.\n- Apresentar técnicas para manipulação de dados em memória secundária, incluindo: organização de dados e acesso em memória auxiliar; arquivos e sua implementação; busca e ordenação em memória auxiliar; aplicações de tabelas de espalhamento (hashing) e ávores B em memória auxiliar.', '-Técnicas de análise de algoritmos;\n\n-Métodos de ordenação interna. Seleção, Inserção, Shellsort, Quicksort e Heapsort;\n\n-Busca: seqüencial, binária e com árvores de pesquisa;\n\n-Espalhamento (hashing). Funções de hashing. Gestão de colisões;\n\n-Arquivos: acesso sequencial indexado e usando árvore B;\n\n-Casamento de padrões. Casamento perfeito e aproximado;\n\n-Compressão de dados.\n', 'O aluno necessitará dos conhecimentos adquiridos nas disciplinas de Estruturas de Dados I e Programação de Computadores (1 e 2). Ao final desta disciplina, o aluno deve aplicar os conhecimentos adquiridos em diversas disciplinas, notadamente: Compiladores', 19, 'KNUTH, D. The Art of Computer Programming, VOLS I, II. III, 2nd ed. 1997.'),
(317, 'As avaliações serão compostas por duas provas (P1 e P2) e um trabalho de implementação de um pequeno compilador (TI). A nota final (NF) é obtida pelo cálculo: \nNF = MP * 0,6 + TI * 0,4,\nonde  MP corresponde a média das 2 provas e é dada por:\nMP = (P1+ P2)', 'Prova 1 - 30/09/2013\nProva 2 - 18/11/2013\nTrabalho T1 - 26/09/2013\nTrabalho T2 - 21/10/2013\nTrabalho T3 - 9/12/2013\n\n \n\n', 'Estudar as técnicas envolvidas na análise léxica de uma linguagem de programação: modelagem de análise léxica por autômatos finitos, especificação de tokens por  expressões regulares, obtenção automática de analisadores léxicos a partir de expressões regulares. Estudar gramáticas livres de contextos apropriadas para a análise sintática. Estudar o processo de geração automática de um analisador sintático a partir de uma gramática livre de contexto. Estudar análise semântica dirigida por sintaxe através dos formalismos de tradução dirigida por sintaxe e esquemas de tradução. Estudar os tipos de tradução dirigidas por sintaxes apropriados para ao tipo de análise sintática utilizado. Estudar implementações de tabelas de símbolos, geração de árvores sintáticas abstratas. Implementar os analisadores léxico, sintático e semântico e a geração de código para uma linguagem de programação.', ' \nVisão  geral  do  processo  de  compilação:  análise  léxica,  sintática,  semântica,  geração  de  código,  otimização  de  código. \nAnálise  léxica  –  o  papel  do  analisador  léxico,  tokens,  lexemas,  expressões  regulares.  O  analisador  léxico  como  um  autômato  finito. \nGerador de analisador léxico – Lex. Especificação do analisador léxico \nImplementação de analisadores léxicos, introdução à geração automática de analisadores léxicos: conversão de expressões regulares em AFNDs\n\nConversão de AFNDs e AFDs e Minimização de AFDs.\n\nIntrodução à análise sintática, gramáticas livres de contexto, derivações, árvores gramáticas\n\nConjuntos  Primeiro  e  Seguinte\nAnálise ascendente - método SLR\n\nAnálise  ascendente  -  método  LR(1)\nMétodo  LALR\nDefinições  dirigidas  por  sintaxe,  atributos  sintetizados,  atributos  herdados,  grafos  de  dependência\n\nÁrvores  de  sintaxe  –  esquemas  de  tradução  para  criação  de  árvores  de  sintaxe.\nTabelas  de  símbolos \n\nGeração de código -  Arquitetura MIPs\n\nAnálise descendente – adaptações de gramáticas: fatoração à esquerda, eliminação da recursividade à esquerda. \n\n', 'O aluno deve aplicar os conhecimentos adquiridos nas disciplinas: Linguagens de Programação, Linguagens Formais e  Autômatos, Arquitetura de Computadores (linguagens de montagem), Programação de Computadores I, Programação de Computadores II, Estruturas d', 34, 'Márcio Eduardo Delamaro - Como Construir um Compilador Utilizando Ferramentas Java-Novatec- 2004\n'),
(318, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n        P1 – Prova escrita individual – Valor: 5,0 pontos\n	P2 – Prova prática individual – Valor: 5,0 pontos\n        M1 = P1 + P2   primeira a', '1a. Prova Prática - 28/10/2013 e Entrega de Trabalhos.\n1a. Prova Teórica - 31/10/2013.\n2a. Prova Prática e Entrega de Trabalhos - 09/12/2013.\n2a. Prova Teórica - 12/12/2013.', 'Capacitar o desenvolvimento de programas para realizar operações em estruturas de dados básicas, como listas filas, pilhas, filas de prioridade, árvores binárias, árvores binárias de pesquisa e tabelas de dispersão. Capacitar os alunos a aplicarem estruturas de dados apropriadas para a solução de problemas computacionais, tais como alguns problemas de grafos, problemas compressão e problemas de buscas em grandes coleções de dados', 'Listas lineares:\n	Implementação de listas lineares em matrizes\n	Implementação de listas lineares por alocação dinâmica (listas encadeadas)\n	Tipos especiais de listas lineares:\n	Pilhas. \n	Filas.\n        Listas duplamente encadeadas.\n	Listas com nó descritor.\n	Listas circulares.\n	Aplicações de listas lineares.\nÁrvores:\n	Árvores binárias.\n	Operações básicas.\nÁrvores binárias de pesquisa:\n	Operações básicas.\n	Árvores binárias balanceadas (Árvores Rubro-Negras, árvores AVL).\nÁrvores B:\n	Tipos.\n	Operações básicas. \nAplicações de árvores.\nFilas de prioridade:\n	Implementações utilizando vetores.\n	Implementação utilizando árvores binárias de pesquisa.\n	Aplicações de listas de prioridade.\nTabelas de dispersão (Tabelsa Hash).\n	Funções de  dispersão.\n	Tratamento de colisões: \n	por encadeamento. \n	por endereçamento aberto.\n	Aplicações de tabelas de dispersão\n', 'O aluno deve aplicar e expandir os conhecimentos adquiridos na disciplina Programação de Computadores I e Programação Imperativa. Os conceitos e habilidades de programação desenvolvidos nesta disciplina são básicos para várias outras disciplinas do curso,', 107, 'PREISS, Bruno R. Estruturas de Dados e Algoritmos – Padrões de Projetos Orientados a Objetos com Java. Campus, 2000.'),
(319, 'Neste semestre, desenvolveremos, ao longo do curso, um projeto por grupo de estudantes. Parte do projeto será desenvolvida nas aulas presenciais e parte em encontros e atividades “extraclasse”.\nA média final da disciplina será obtida através da participaç', 'No dia 20 de dezembro ocorrerão a entrega da versão final do projeto e sua defesa\n(apresentação).', 'Familiarizar o estudante com o que é “bom” por meio do estudo de projetos de desenvolvimento de software (ou seja, com o correspondente código, documentação, dados, ferramentas, processos utilizados e outros elementos empregados no desenvolvimento). A ambientação deve auxiliar a reconhecer o que é “bom” e, adicionalmente, a exercitar o que possivelmente mais fará em sua vida profissional: ler código (talvez mais que escrever).', 'O termo leitura deve ser interpretado no sentido de “arte ou modo de interpretar e fixar um texto de autor, segundo determinado critério”. O professor pode selecionar produtos open source, de reputação reconhecida, sobre os quais a análise do código disponível é realizada, por exemplo, por meio do acesso ao código fonte e de outros artefatos publicamente disponíveis. Nestes casos, a estrutura, a empregada, as ferramentas, o processo e outros deverão ser identificados e analisados. Esta análise deverá ser coletiva e de tal forma que o estudante possa se envolver com as opiniões dos colegas (todas moderadas pelo professor). O estudante deverá ser estimulado a confrontar o produto investigado com o que ele próprio produz, faria ou conhece.', 'A disciplina de Leitura de Software está intimamente relacionada e depende de conhecimentos ligados às áreas de Engenharia de Software e de Computação desenvolvidos em muitas disciplinas do curso: Construção de Software, Projeto de Software, Engenharia de', 66, 'Fowler, M., Refatoração: Aperfeiçoando o projeto de código existente, Bookman, 2004. '),
(320, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n\n	P1– Prova escrita individual – Valor: 10,0 pontos\n	P2– Prova escrita individual – Valor: 10,0 pontos\n	SE – Seminário sobre ferramentas para', '18/10/2013; 23/12/2013', 'Conscientizar o aluno sobre a importância do tratamento adequado dos requisitos para alcançar um nível satisfatório de qualidade nos sistemas de software.\n\nFazer com que o aluno entenda e saiba aplicar os principais processos relacionados com os requisitos dentro ciclo de vida de um sistema de software.\n\nFazer com que o aluno entenda e saiba aplicar as principais técnicas de levantamento e elicitação de requisitos.\n\nFazer com que o aluno entenda o que é gerência de requisitos: processos, métodos, técnicas e ferramentas.\n\nMostrar ao aluno a importância da documentação de requisitos e modelos de referência para esta documentação.\n', 'Sistemas de Informação (SI) e Ciclo de Vida de SI\nProcesso de Desenvolvimento de Software\nQualidade de software e o papel dos requisitos\nTipos de requisitos\nFontes de requisitos\nEngenharia de requisitos e seus processos\nTécnicas de Levantamento e elicitação de Requisitos\nCasos de uso e a especificação de requisitos\nDocumentação dos Requisitos\nGerenciamento de Requisitos\nRastreabilidade de requisitos\nControle de Mudanças\nVerificação e validação de requisito\nFerramentas CASE para requisitos', 'O aluno deve aplicar os conhecimentos adquiridos na disciplina Introdução aos Sistemas de Informação para entender o contexto em que a Engenharia de Requisitos é aplicada nas organizações e os conhecimentos obtidos na disciplina Engenharia de Software par', 111, 'KOTONYA, Gerald e SOMMERVILLE Ian, Requirements Engineering: Process and Techniques 2 ed. John Wiley & Sons 1998.'),
(321, 'Neste semestre, desenvolveremos, ao longo do curso, um projeto por grupo de estudantes. Parte do projeto será desenvolvida nas aulas presenciais e parte em encontros e atividades “extraclasse”.\nA média final da disciplina será obtida através da participaç', 'No dia 18 de dezembro ocorrerão a entrega da versão final do projeto e sua defesa\n(apresentação).', 'Permitir ao estudante aplicar os conceitos e técnicas básicas do Gerenciamento de Projetos para o desenvolvimento das habilidades de planejar, implementar, monitorar e avaliar projetos evidenciando as diferenças entre trabalhar em um projeto e gerenciar um projeto. Particularmente em relação à gerência, o estudante deve ser capaz de iniciar, planejar, executar, monitorar e concluir a gerência de pequenos projetos de software.  ', '- Gerência de escopo.\n- Gerência de tempo. \n- Gerência de custos \n- Gerência de qualidade\n- Gerência de recursos humanos\n- Gerência de comunicação\n- Gerência de riscos\n- Gerência de aquisições\n- Gerência de integração\n- Estabelecer relações com o MPS.BR.', 'A disciplina Gerenciamento de Projetos II tem relação tanto com disciplinas básicas da formação tecnológica do curso servindo de elemento integrador de diversos conhecimentos desenvolvidos, quanto com disciplinas de formação em conceitos e práticas admini', 112, 'Project Management: A Systems Approach to Planning, Scheduling, and Controlling, Harold Kerzner, 10th edition, Wiley, 2009'),
(322, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\n\nNF = (4 * NP1 + 5 * NP2 + 1 * NT)/10;\nonde:\nNP1 representa a nota da primeira prova escrita, com peso 4; \nNP2, a nota da segunda prova escrita, com peso 5; \nNT, a média das notas dos trab', 'Prova 1: 21/10/13\nProva 2: 19/12/13\n\nCada prova será realizada considerando todo o conteúdo desenvolvido até a data de sua aplicação.\n', 'Apresentar o estudo da lógica de programação e a construção e implementação de algoritmos coerentes e válidos.\nHabilitar o estudante para o desenvolvimento de algoritmos a partir da descrição textual de problemas.\nCapacitar o estudante a desenvolver algoritmos específicos para a manipulação de problemas numéricos e não-numéricos.\nHabilitar o estudante para a implementação de algoritmos em uma linguagem de programação de alto nível. ', 'Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas e relacionamento com outras disciplinas do curso. \nConceitos Básicos: Noções de Lógica, Lógica de Programação, Algoritmo, Tipos primitivos, Constantes, Variáveis (Formação de Identificadores e Declaração de Variáveis), Expressões (Aritméticas, Lógicas, Relacionais). \nComandos (Atribuição, Entrada e Saída, Blocos). \nEstruturas de Controle \n- Seqüencial\n- Seleção (Simples, Composta, Encadeada, Múltipla Escolha)\n- Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)\nEstruturas de Dados\n- Homogêneas  (Vetores e Matrizes)\nModularização', 'A disciplina Introdução à Computação permite que o aluno se capacite para o  desenvolvimento de algoritmos e sua implementação em uma linguagem de programação de alto nível, visando aplicações futuras em diversos ramos da Agronomia. No curso de Agronomia', 1, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(323, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\nNF = (4 * NP1 + 5 * NP2 + 1 * NT)/10;\nonde:\nNP1 representa a nota da primeira prova escrita, com peso 4;\nNP2, a nota da segunda prova escrita, com peso 5;\nNT, a média das notas dos trabalh', 'Prova 1: 21/10/13\nProva 2: 19/12/13\nCada prova será realizada considerando todo o conteúdo desenvolvido até a data de sua aplicação.\n', 'Apresentar o estudo da lógica de programação e a construção e implementação de algoritmos coerentes e válidos.\nHabilitar o estudante para o desenvolvimento de algoritmos a partir da descrição textual de problemas.\nCapacitar o estudante a desenvolver algoritmos específicos para a manipulação de problemas numéricos e não-numéricos.\nHabilitar o estudante para a implementação de algoritmos em uma linguagem de programação de alto nível.', 'Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas e relacionamento com outras disciplinas do curso.\nConceitos Básicos: Noções de Lógica, Lógica de Programação, Algoritmo, Tipos primitivos. Constantes, Variáveis (Formação de Identificadores e Declaração de Variáveis), Expressões (Aritméticas, Lógicas, Relacionais).\nComandos (Atribuição, Entrada e Saída, Blocos).\nEstruturas de Controle\n- Seqüencial\n- Seleção (Simples, Composta, Encadeada, Múltipla Escolha)\n- Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)\nEstruturas de Dados\n- Homogêneas  (Vetores e Matrizes)\nModularização', 'A disciplina Introdução à Computação permite que o aluno se capacite para o desenvolvimento de algoritmos e sua implementação em uma linguagem de programação de alto nível, visando aplicações futuras em diversos ramos da Agronomia. No curso de Agronomia d', 2, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(324, 'A avaliação da disciplina será realizada mediante duas provas escritas (E1 e E2), duas provas práticas (P1 e P2), e dois trabalhos (T1 e T2) podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa e/ou questões sobre', 'Avaliação teórica 1: 12/12/2012\nAvaliação Prática 1: 13/12/2012\nAvaliação Prática 2: 19/02/2013\nAvaliação Teórica 2: 20/02/2013', 'Capacitar o aluno a respeito dos conceitos do paradigma de orientação a objetos;\nCapacitar o estudante a desenvolver programas utilizando linguagem de programação Orientada a Objeto;\nCapacitar para a utilização de ferramentas para o desenvolvimento de programas.\n', '1. Paradigma de orientação a objetos.\n2. Abstração\n3. Classe\n4. Objeto\n5. Método\n6. Mensagem\n7. Construtor\n8. Pacote\n9. Encapsulamento\n10. Tratamento básico de exceções\n11. Herança e composição\n12. Interface\n13. Polimorfismo\n14. Ambiente integrado de desenvolvimento (IDE): conceituação e utilização.\n', 'Os conceitos e habilidades de programação desenvolvidos nesta disciplina são úteis para as disciplinas  de  Computação  Gráfica,  Estrutura  de  Dados,  Inteligência  Computacional, Programação  de Sistemas  em  Tempo Real, Paradigmas de Linguagem de Prog', 108, 'DEITEL, H. M., Java Como Programar, Pearson Prentice Hall Brasil, 6a. edição, 2005.'),
(325, '3,0 – Trabalho Prático – avaliação da qualidade do produto computacional gerados e capacidade de argumentação do aluno durante a exposição do produto.\n4,0 – Provas – avaliação do entendimento de conceitos, em duas partes.\n3,0 – Trabalho Teórico – avaliaçã', '28/09/2013\n22/11/2013', ' Apresentar os seguintes métodos e técnicas de interatividade e para a visualização de dados, bem como os algoritmos e fundamentação matemática envolvidos:\n\n   - Transformações Geométricas 2D e 3D\n   - Rasterização bidimensional\n   - Visualização 3D:  Modelagem Geométrica e Síntese de Imagens\n   - Padrões e diretrizes para o design efetivo da interação', 'Motivação para a Disciplina: Visão Geral, Exemplos e Aplicações\nTransformação Geométrica 2D\nTransformação Geométrica 2D (Continuação)\nComposição de Transformações\nTraçado de Curvas\nTraçado de Retas\nTraçado da Circunferência \nRecorte 2D\nPreenchimento de Polígonos \nTraçado de Retas Otimizado\nTransformações Geométricas 3D Projeção Geométrica\nModelagem Geométrica\nModelos de Iluminação\nTécnicas  de Visualização Z-buffer Otimizado e de Visualização Ray-Casting\nTécnica de Visualização Ordenação por Profundidade\nTécnica de Visualização Ray Tracing \nIntrodução à interação homem-computador e conceitos de interatividade e affordance \n Usabilidade e diretrizes para um bom projeto da interação homem-computador \n Padrões de interação para dispositivos móveis\n Padrões  de interação para organização do conteúdo\n Padrões  de interação para navegação\n Padrões  de interação para transições\n Padrões  de interação para estética visual\n Exploração de anti-padrões de interação para Design Efetivo da Interação \n', 'Esta diciplina e correlata com a disciplina multimidia.', 11, '3)Procedural Elements for Computer Graphics. 1997. David Rogers. McGraw-Hill.\n'),
(326, 'A avaliação da aprendizagem será feita através de: \n2 Provas escritas e 4 Trabalhos.\nA nota final da disciplina será calculada conforme a fórmula abaixo:\n\nMédia = (P1  + P2 + T1 + T2 + T3 + T4) / 6\n \nonde P1 e  P2  e são as notas referentes às provas e T1', 'Data da realização das avaliações:\n\n•	P1 - 25/09/2013\n•	P2 - 27/11/2013\n\n\n', 'Apresentar diretrizes de usabilidade e padrões do projeto da interação conjuntamente com técnicas de criatividade com o objetivo de desenvolver o raciocínio crítico e criativo dos alunos de forma contextualizada na interação homem-computador.', '1. Apresentação da Disciplina\nIdentificação Professor e Aluno\nPrograma do Curso\nProvas (critérios de avaliação)\n2. Conceitos Preliminares\nConceito de Interação\nConceito de Affordance\nConceito de Metáfora\nElementos de Interação\nModelos Conceituais\nDispositivos de Interação\n3. Princípios de Projeto de Interfaces Homem-computador\n4.  Métodos de Projeto de Interfaces Homem-computador\n5. Avaliação de Interfaces Homem-computador\nTestes de Usabilidade\nHeurísticas para Avaliação de Interfaces\nMétodos para Avaliação de Interfaces\n6. Visão geral de ferramentas de desenvolvimento de interfaces homem-computador.\n7. Padrões para Organização do Conteúdo\n8. Padrões para Navegação\n9. Padrões para Layout de Páginas\n10.Padrões para a Exibição de Dados Complexos\n11. Padrões para Dispositivos Móveis\n12. Padrões para o Desenvolvimento de Jogos\n', 'Esta disciplina é essencial para toda disciplina que envolva o desenvolvimento de aplicações, pois a grande maioria dos sistemas computacionais atuais possuem interface com o usuário.', 61, 'Barbosa, Simone Diniz Junqueira; Silva, Bruno Santana da. Interação\nHumano-computador. Ed. Campus, 1ª ed. 2010.'),
(327, 'A avaliação da disciplina será realizada mediante duas provas escritas (P1, P2) e trabalho, podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa e/ou questões sobre trabalhos realizados em aula.\nO trabalho consist', 'P1 – 19/09/2013\nP2 – 25/11/2013\nT1 – 06/12/2013\n', 'Capacitar o aluno a respeito dos conceitos do paradigma de orientação a objetos;\nCapacitar o estudante a desenvolver programas utilizando linguagem de programação orientada a objeto;\nCapacitar para a utilização de ferramentas de desenvolvimento de programas.', '1. Introdução à disciplina e metodologia de ensino\n2. Conceitos básicos de Programação Orientada a Objetos\n3. Ferramentas de desenvolvimento\n4. Modelagem e especificação de aplicações orientadas a objetos\n5. AWT e Swing\n6. Interface Gráfica\n7. Tratamento de eventos em interface gráfica\n8. Tratamento de Exceções\n9. Concorrência (Threads)\n10. Teste de software\n11. Projeto orientado a objeto', 'Algoritmos de Programação 1, Computação Gráfica, Estrutura de Dados, Inteligência Computacional, Programação de Sistemas em Tempo Real, Paradigmas de Linguagem de Programação, Sistemas Distribuídos, Sistemas Operacionais e Tópicos em Engenharia de Sistema', 53, '1.Ziviani, Nivio. Projeto de Algoritmos, com implementações em Java e C++. São Paulo: Thomson Learning, 2007.'),
(328, 'A avaliação da aprendizagem é integrada por dois componentes: \n\n(i) 1a. e 2a. Avaliações Escritas (AE1 e AE2); \n(ii) Atividades em laboratório e Trabalhos (LT).\n\nAs notas das Avaliações Escritas e das Atividades em laboratório e Trabalhos terão valor de z', 'Data prevista para a realização das avaliações escritas:\nAT1 – 04/10/2013\nAT2 – 06/12/2013', 'De forma específica, a disciplina deve possibilitar aos estudantes a capacidade de:\n\nExplicar, descrever e discutir os principais conceitos relacionados aos métodos de ordenação e busca;\nExplicar, descrever e discutir como construir soluções usando os métodos de ordenação e busca;\nImplementar os algoritmos de busca e ordenação;\nCompreender a aplicação de funções de transformação na busca de dados;\nImplementar soluções para o tratamento de colisões em mecanismos de hashing;\nImplementar soluções envolvendo estruturas de árvores e várias de suas construções.\nImplementar algoritmos de busca e ordenação em arquivos.', 'I. Noções de complexidade de algoritmos.\nII. Métodos de ordenação: seleção, troca, distribuição, inserção, intercalação e cálculo de endereços.\nIII. Pesquisa de dados: sequencial, binária, hashing, Árvores de pesquisa, árvores binárias de pesquisa, árvores AVL, árvores Patrícia, B- Trees.\nIV. Organização de arquivos.\n', 'O bom desempenho do aluno nesta disciplina depende do embasamento teórico e prático do aluno adquirido nas disciplinas de Programação de Computadores (AP1 e AP2) e de Estruturas de Dados 1.  ED2 forma a base para a compreensão de disciplinas relacionadas', 129, 'N. ZIVIANI, Projeto de Algoritmos com Implementações em JAVA e C++, Thomsom, 2007.'),
(329, 'A Avaliação do desempenho discente é regida pelo RGCG. Será obtida a partir da média aritmética de três notas:\n\nN1 = Prova 1\nN2 = Prova 2\nN3 = Trabalho final\n \nSerá considerado aprovado na disciplina o aluno que obtiver a frequência mínima legal e Nota Fi', 'A definir', 'Desenvolver capacidades crítica e analítica dos alunos para que possam compreender a utilidade e aplicabilidade do Planejamento Estratégico\n\nIdentificar e analisar questões gerais e específicas sobre a estratégia e seus desdobramentos nos níveis estratégico, tático e operacional da organização\n\nDiscutir as fontes de vantagem competitiva sustentável em organizações inseridas em contextos competitivos\n\nRelacionar teoria e prática sobre a realidade temática estudada, identificar gargalos existentes, necessidades e perspectivas futuras\n\nIdentificar elementos cruciais na formação profissional do aluno', '1.	Princípios fundamentais da administração estratégica.\n\n2.	O processo estratégico: análise.\n\n3.	O processo estratégico: formulação.\n\n4.	O processo estratégico: implantação.\n\n5.	Balanced Scorecard.\n', 'Esta disciplina reúne temas abordados em disciplinas básicas do campo do conhecimento da Administração, tais como Teoria Geral da Administração e Matemática Financeira. Adicionalmente, incorpora conhecimentos relativos à formulação, implementação e contro', 131, 'KAPLAN, R. S. Alinhamento: utilizando o BSC para criar sinergias corporativas. Rio de Janeiro: Elsevier, 2006.\nKAPLAN, R. S.; NORTON, D. P. A estratégia em ação: balanced scorecard. Rio de Janeiro: Elsevier, 1997.'),
(330, 'A NF será composta da média ponderada das 2 Avaliações individuais, compondo 90% da nota e a média aritmética das atividades propostas em sala e ou extra-classe, compondo 10% na nota. Assim:\n \n NF = 0,9*(AV1 + 2AV2)/3 + 0,1*E \n\nonde E é a média aritmética', 'AVI:  28/05/2013\nAVII: 18/07/2013', 'Introduzir um sistema formal, apresentando os fundamentos para o conceito de prova em \nmatemática. \n\nCompreender os fundamentos da lógica proposicional clássica, da lógica de predicados e os \ndiferentes métodos de validação de teoremas.', '1. Noções Básicas \n(a) Linguagem Natural vs Linguagens Formais; \n(b) Verdade, Validade, Satisfatibilidade; \n(c) Lógica Proposicional: Sintaxe e Semântica; Propriedades e Relações Semânticas; \nConsequência Lógica; Simplificação de Fórmulas; \n(d) Lógica de Primeira Ordem: Sintaxe e Semântica; Propriedades e Relações Semânticas; \n(e) Formas Normais. \n\n2. Métodos de Validação \n(a) Métodos Diretos de Prova; \n(b) Métodos de Prova por Contradição; \n(c) Indução. \n\n3. Linguagem para experimentação \nAplicações Básicas.', 'sem pré-requisitos', 133, 'HUTH, Michael; RYAN, Mark. Lógica em Ciência da Computação: modelagem e argumentação sobre sistemas. Segunda edição. Editora LTC: 2008. \n\nSILVA, F.C.; FINGER, M.; de MELO, A.C.V. . Lógica para Computação. \nThomson Learning, 2006. \n\nR. Nederpelt and F. Kamareddine. Logical Reasoning: A First Course, volume 3 of Texts in \nComputing. King''s College London, 2004. \n'),
(331, 'A NF será composta da média ponderada das 2 Avaliações individuais, compondo 90% da nota e a média aritmética das atividades propostas em sala e ou extra-classe, compondo 10% na nota. Assim:\n \n NF = 0,9*(AV1 + 2AV2)/3 + 0,1*E \n\nonde E é a média aritmética', 'AVI:  28/05/2013\nAVII: 18/07/2013', 'Introduzir um sistema formal, apresentando os fundamentos para o conceito de prova em \nmatemática. \n\nCompreender os fundamentos da lógica proposicional clássica, da lógica de predicados e os \ndiferentes métodos de validação de teoremas.', '1. Noções Básicas \n(a) Linguagem Natural vs Linguagens Formais; \n(b) Verdade, Validade, Satisfatibilidade; \n(c) Lógica Proposicional: Sintaxe e Semântica; Propriedades e Relações Semânticas; \nConsequência Lógica; Simplificação de Fórmulas; \n(d) Lógica de Primeira Ordem: Sintaxe e Semântica; Propriedades e Relações Semânticas; \n(e) Formas Normais. \n\n2. Métodos de Validação \n(a) Métodos Diretos de Prova; \n(b) Métodos de Prova por Contradição; \n(c) Indução. \n\n3. Linguagem para experimentação \nAplicações Básicas.', 'sem pré-requisitos', 134, 'HUTH, Michael; RYAN, Mark. Lógica em Ciência da Computação: modelagem e argumentação sobre sistemas. Segunda edição. Editora LTC: 2008. \n\nSILVA, F.C.; FINGER, M.; de MELO, A.C.V. . Lógica para Computação. \nThomson Learning, 2006. \n\nR. Nederpelt and F. Kamareddine. Logical Reasoning: A First Course, volume 3 of Texts in \nComputing. King''s College London, 2004. '),
(332, '\\N', '\\N', 'Propiciar ao aluno a oportunidade de adiquirir conhecimentos básicos indispensáveis para o desenvolvimento de pesquisa na área de Inteligência Computacional.', '- Conceitos iniciais;\n- Agentes inteligentes e sistemas multiagentes;\n- Incerteza;\n- Redes bayesianas;\n- Árvores de decisão;\n- Redes Neurais;\n- Algoritmos genéticos;\n- Lógica fuzzy;\n- Computação semântica.', 'Esta disciplina apresenta aspectos introdutórios que poderão ser mais aprofundados em outras disciplinas oferecidas no mestrado/doutorado do INF:\n\n- Aprendizado de Máquina;\n- Computação evolucionária;\n- Lógica Fuzzy;\n- Sistemas Multiagentes;\n- Mineração d', 174, '\\N'),
(333, 'A NF será composta da média ponderada das 2 avaliações escritas individuais, compondo 90% da nota e a média aritmética dos trabalhos propostos em sala e ou extra-classe, compondo 10% na nota. Assim:\n \n NF = 0,9*(AV1 + 2AV2)/3 + 0,1*E \n\nonde E é a média ar', 'AVI:  13/05/2013\nAVII: 22/07/2013', 'Ao final do curso, o aluno deve ser capaz de:\n\n - Compreender a estrutura lógica de uma linguagem de programação;\n - Elaborar algoritmos a partir da descrição textual de pequenos problemas;\n - Desenvolver programas em uma linguagem de programação;\n - Selecionar estruturas de dados simples na implementação dos programas;\n - Elaborar algoritmos específicos para a solução de problemas numéricos e não numéricos.', 'Histórico da Computação\nNoções de Lógica.\nLógica de Programação\nConstrução de Algoritmos: Elementos Fundamentais\nEstrutura Sequencial\nEstruturas de Seleção\nEstruturas de Repetição\nEstruturas de Dados (Vetores e Matrizes)\nModularização.', 'pré-requisito para a disciplina Física Computacional', 163, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.');
INSERT INTO `plano` (`id`, `criterioavaliacao`, `datarealizacaoprovas`, `objetivosespecificos`, `programa`, `relacaooutrasdisciplinas`, `turma_id`, `bibliografiasugerida`) VALUES
(334, 'A1 – Primeira avaliação escrita individual – Valor: 10,0 pontos\nA2 – Segunda avaliação escrita individual – Valor: 10,0 pontos\nA3 – Terceira avaliação escrita individual – Valor: 10,0 pontos\nTG – Trabalho em Grupo (Apresentação) – Valor: 10,0 pontos\nNota', 'A1 - 04/05/2013\nA2 - 15/06/2013\nA3 - 13/07/2013\nTG - 20/07/13 A 27/07/13\nAvaliação Substitutiva - 27/07/13', 'Descrever o conceito de qualidade num contexto geral.\nApresentar as principais normas de qualidade e sua aplicabilidade (Série ISO 9000).\nDescrever o conceito de qualidade no contexto de software (ISO 9000-3).\nApresentar as principais normas de qualidade de produto de software e sua aplicabilidade (ISSO 9126).\nApresentar os principais conceitos relacionados a qualidade de Processo de Software.\nApresentar as principais normas de qualidade de processo de software e sua aplicabilidade (ISSO 12207, ISO 15504).\nApresentar os principais modelos maturidade de processo de software e sua aplicabilidade (CMM, MPS.BR).\nApresentar outros modelos que definem padrões de qualidade (IEEE Std 1028-2008, IEEE Std 1465-2004, IEEE Std 12207-2008, ITIL).\nApresentar pelo menos um estudo de caso em Qualidade de Software.', 'Conceitos básicos sobre qualidade; Série ISO 9000: ISO 9000, ISO 9001, ISO 9004; Qualidade no contexto de software: ISO 9000-3; Qualidade de produto de software: ISO 9126; Qualidade de processo de software: ISO 12207, ISO 15504; Modelos de maturidade de processo: CMMi, MPS.BR; Outros padrões de qualidade: IEEE Std 1028-2008; IEEE Std 1465-2004; IEEE Std 12207-2008; Entrega e apresentação de artigos sobre: RUP, Metodologia Ágeis de Desenvolvimento de Software, Teste de software, Verificação e validação de software, Auditoria de Sistemas, ITIL, COBIT. Estudo de caso.', 'A disciplina qualidade de software serve como referência para a melhoria da qualidade dos processos vistos na disciplina Engenharia de Software e Engenharia de Requisitos, pois sugere normas para definição dos processos e medição de seu nível de maturidad', 154, 'SOFTEX. MPS.BR – Guia de Avaliação: 2012, Maio/2012. Disponível em: www.softex.br.\n\nSOFTEX. MPS.BR – Guia de Aquisição, Outubro/2011. Disponível em: www.softex.br.\n\nSOFTEX. MPS.BR – Guia de Implementação - Parte 1 a 12, Julho/2011. Disponível em: www.softex.br.'),
(335, 'A avaliação da aprendizagem será feita através de: \n-Provas escritas\n-Trabalhos\nA nota final da disciplina será calculada conforme a fórmula abaixo:\n\nMédia = ( ( ( P1 + P2 ) / 2 ) * 6 + 4 * T ) / 10\n \nonde P1 e  P2  e são as notas referentes às provas e T', 'P1 - 07/05/2013\nP2 - 23/07/2013', 'Fornecer ao aluno conceitos básicos de computação: Hardware e software, noções de sistemas operacionais, lógica de programação: algoritmos e sua implementação em uma linguagem de programação.', '1. Apresentação da Disciplina\nIdentificação Professor e Aluno\nPrograma do Curso\nProvas (critérios de avaliações)\n2. Conceitos Preliminares\nHistórico da Computação\nVisão Geral do Computador: Hardware e Software\nNoções de lógica, lógica de programação e algoritmo\nNoções de Sistemas Operacionais e Arquivos, Utilitários, Compiladores e Interpretadores\n3. Itens Fundamentais de uma Linguagem de Programação\nTipo de Dados \nConstantes \nVariáveis\n4. Expressões, Operadores e Funções\nExpressões Aritméticas\nExpressões Lógicas\nExpressões Literais\n5. Comandos Básicos\nAtribuição\nEntrada/Saída \nEstrutura Seqüencial\nComandos de Manipulação do Sistema Operacional\n6. Estruturas Condicionais\nSimples\nCompostas\nEscolha Múltipla\n7. Estruturas de Repetição\nCom Variável de Controle\nCom Teste no Início\nCom Teste no Final\n8. Estruturas de Dados \nVariáveis Compostas Homogêneas\nUnidimensionais (Vetores)\nMultidimensionais (Matrizes)\n9.Modularização\n', 'O curso de estatística utiliza diversas ferramentas computacionais. Esta disciplina provê embasamento para o uso destas ferramentas', 164, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(336, 'Todas valendo 10 pontos:\n\nSE: Seminário em grupo\nP1: Prova escrita individual\nP2: Prova escrita individual\nP3: Prova escrita individual\n\nNF = [ P1 + (2 * P2) + (2 * P3) + SE] / 6', 'P1: 10/05/2013\nP2: 07/06/2013\nP3: 08/07/2013\nSE: 19/07/2013', '- Conhecer diferentes paradigmas de programação.\n- Identificar e compreender as características mais importantes de cada paradigma.\n- Compreender a aplicabilidade dos paradigmas e das linguagens que os representam.\n', '1.Introdução\n1.1. Motivação e aplicações de linguagens de programação\n1.2. Critérios de avaliação da linguagem\n1.3. Categorias de linguagem\n1.4. Métodos de implementação\n1.5. Ambientes de programação\n1.6. Evolução das principais linguagens de programação\n2.Sintaxe e semântica\n2.1. O problema geral de descrever a sintaxe\n2.2. Métodos formais para descrever a sintaxe\n2.3. Gramáticas de atributos\n2.4. Semântica dinâmica\n3.Nomes, vinculações, verificação de tipos e escopos\n3.1. Nomes, variáveis e constantes nomeadas\n3.2. Vinculação\n3.3. Verificação, tipificação e compatibilidade de tipos\n3.4. Escopo, tempo de vida e ambientes de referenciamento\n4.Tipos de dados\n4.1. Tipos de dados primitivos\n4.2. Tipo arranjo (array), registro e união\n4.3. Tipo ponteiro e tipo referência\n5.Expressões e atribuições\n5.1. Expressões aritméticas\n5.2. Operadores sobrecarregados\n5.3. Conversões de tipos\n5.4. Expressões relacionais e booleanas\n5.5. Avaliação curto-circuito\n5.6. Instruções de atribuição\n6.Estruturas de Controle\n6.1. Instruções de seleção\n6.2. Instruções iterativas\n6.3. Desvio incondicional\n7.Subprogramas\n7.1. Ambientes de referência locais\n7.2. Métodos de passagem de parâmetros\n7.3. Implementação de funções\n8.Programação Orientada a Objeto\n8.1. Questões de projeto referentes às linguagens orientadas a objeto\n8.2. Suporte para programação orientada a objeto em C++ e Java\n8.3. Implementação de construções orientadas a objeto\n9.Tratamento de exceções e manipulação de eventos\n9.1. Introdução à manipulação de exceções\n9.2. Manipulação de exceções em C++ e Java\n10.Linguagens de programação funcionais\n10.1. Introdução e fundamentos\n10.2. Algumas linguagens funcionais: Lisp, Scheme, Haskell\n10.3. Aplicações das linguagens funcionais\n11.Linguagens de programação lógica\n11.1. Introdução e fundamentos\n11.2. Visão geral da programação lógica e linguagem Prolog\n11.3. Aplicações da programação lógica\n', 'Linguagens de programação muitas vezes são fortemente baseadas no funcionamento do\ncomputador, por isso a importância da disciplina de Arquitetura de Computadores. O entendimento dos recursos da linguagem influenciam nas decisões de projeto de software, a', 145, 'SCOTT, M. - Programming Language Pragmatics, 3a. ed., Morgan Kaufmann, 2009'),
(337, 'Todas valendo 10 pontos:\n\nSE: Seminário em grupo\nP1: Prova escrita individual\nP2: Prova escrita individual\nP3: Prova escrita individual\n\nNF = [ P1 + (2 * P2) + (2 * P3) + SE] / 6', 'P1: 10/05/2013\nP2: 07/06/2013\nP3: 08/07/2013\nSE: 19/07/2013', '- Conhecer diferentes paradigmas de programação.\n- Identificar e compreender as características mais importantes de cada paradigma.\n- Compreender a aplicabilidade dos paradigmas e das linguagens que os representam.\n', '1.Introdução\n1.1. Motivação e aplicações de linguagens de programação\n1.2. Critérios de avaliação da linguagem\n1.3. Categorias de linguagem\n1.4. Métodos de implementação\n1.5. Ambientes de programação\n1.6. Evolução das principais linguagens de programação\n2.Sintaxe e semântica\n2.1. O problema geral de descrever a sintaxe\n2.2. Métodos formais para descrever a sintaxe\n2.3. Gramáticas de atributos\n2.4. Semântica dinâmica\n3.Nomes, vinculações, verificação de tipos e escopos\n3.1. Nomes, variáveis e constantes nomeadas\n3.2. Vinculação\n3.3. Verificação, tipificação e compatibilidade de tipos\n3.4. Escopo, tempo de vida e ambientes de referenciamento\n4.Tipos de dados\n4.1. Tipos de dados primitivos\n4.2. Tipo arranjo (array), registro e união\n4.3. Tipo ponteiro e tipo referência\n5.Expressões e atribuições\n5.1. Expressões aritméticas\n5.2. Operadores sobrecarregados\n5.3. Conversões de tipos\n5.4. Expressões relacionais e booleanas\n5.5. Avaliação curto-circuito\n5.6. Instruções de atribuição\n6.Estruturas de Controle\n6.1. Instruções de seleção\n6.2. Instruções iterativas\n6.3. Desvio incondicional\n7.Subprogramas\n7.1. Ambientes de referência locais\n7.2. Métodos de passagem de parâmetros\n7.3. Implementação de funções\n8.Programação Orientada a Objeto\n8.1. Questões de projeto referentes às linguagens orientadas a objeto\n8.2. Suporte para programação orientada a objeto em C++ e Java\n8.3. Implementação de construções orientadas a objeto\n9.Tratamento de exceções e manipulação de eventos\n9.1. Introdução à manipulação de exceções\n9.2. Manipulação de exceções em C++ e Java\n10.Linguagens de programação funcionais\n10.1. Introdução e fundamentos\n10.2. Algumas linguagens funcionais: Lisp, Scheme, Haskell\n10.3. Aplicações das linguagens funcionais\n11.Linguagens de programação lógica\n11.1. Introdução e fundamentos\n11.2. Visão geral da programação lógica e linguagem Prolog\n11.3. Aplicações da programação lógica', 'Linguagens de programação muitas vezes são fortemente baseadas no funcionamento do\ncomputador, por isso a importância da disciplina de Arquitetura de Computadores. O entendimento dos recursos da linguagem influenciam nas decisões de projeto de software, a', 146, 'SCOTT, M. - Programming Language Pragmatics, 3a. ed., Morgan Kaufmann, 2009'),
(338, 'A avaliação da disciplina ocorrerá mediante a aplicação de 3 avaliações (P1, P2 e P3). A média final será obtida pela fórmula:\nMédia final = 0,3*P1+0,3*P2+0,4*P3.\n\nObservações:\n- Para as avaliações será considerado todo o conteúdo ministrado até a sua apl', 'P1 - 16/04/2013\nP2 - 28/05/2013\nP3 - 09/07/2013', 'Capacitar a utilização um ambiente de desenvolvimento didático, compilando e executando\naplicações em uma linguagem de programação; saber utilizar as estruturas de repetição e controle para controlar o fluxo de programas; utilizar estruturas de dados simples; escrever\nprogramas em uma linguagem de programação, visando a solução de problemas simples;', '1. Conceitos Preliminares\n1.1. Noções de Lógica\n1.2. Lógica de Programação\n2. Itens Fundamentais de uma Linguagem de Programação\n2.1. Tipo de Dados\n2.2. Formação de Identificadores\n2.3. Constantes\n2.4. Variáveis\n3. Comandos Básicos\n3.1. Comando de Atribuição\n3.2. Comandos de Entrada e Saída\n4. Expressões e Operadores\n4.1. Expressões Aritméticas\n4.2. Expressões Lógicas\n4.3. Estrutura Seqüencial\n5. Estrutura de Repetição\n5.1. Com Variável de Controle\n5.2. Com Teste no Início\n5.3. Com Teste no Final\n6. Estruturas de Seleção (desvio)\n6.1. Simples\n6.2. Aninhadas\n6.3. Encadeada\n6.4. Múltipla Escolha\n7. Estrutura de Dados\n7.1. Variáveis Compostas Homogêneas Unidimensionais (vetor)\n7.2. Variáveis Compostas Homogêneas Multidimensionais (matriz)\n8. Modularização (funções)', 'Esta disciplina fornece a base preliminar para o desenvolvimento de software, fornecendo a\nambientação e primeira experiência com uma linguagem de programação.', 168, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(339, 'As avaliações serão compostas por duas provas (P1 e P2) e um trabalho de implementação de um pequeno compilador (TI). A nota final (NF) é obtida pelo cálculo: \nNF = MP * 0,6 + TI * 0,4,\nonde  MP corresponde a média das 2 provas e é dada por:\nMP = (P1+ P2)', 'Prova 1 - 27/09/2013\nProva 2 - 18/11/2013\nTrabalho T1 - 25/09/2013\nTrabalho T2 - 23/10/2013\nTrabalho T3 - 06/12/2013\n', 'Estudar as técnicas envolvidas na análise léxica de uma linguagem de programação: modelagem de análise léxica por autômatos finitos, especificação de tokens por  expressões regulares, obtenção automática de analisadores léxicos a partir de expressões regulares. Estudar gramáticas livres de contextos apropriadas para a análise sintática. Estudar o processo de geração  automática de um analisador sintático a partir de uma gramática livre de contexto. Estudar análise semântica dirigida por sintaxe através dos formalismos de tradução dirigida por sintaxe e esquemas de tradução. Estudar os tipos de tradução dirigidas por sintaxes apropriados para ao tipo de análise\nsintática utilizado. Estudar implementações de tabelas de símbolos, geração de árvores sintáticas abstratas. Implementar os analisadores léxico, sintático e semântico e a geração de código para uma linguagem de programação.', 'Introdução à compilação.\nFases da compilação.\nAmbigüidade.\nRelações sobre gramáticas.\nAnálise léxica.\nTabelas de símbolos.\nAnálise sintática ascendente e descendente.\nAnálise semântica e geração de código para uma máquina virtual.\nIntrodução à otimização de código.', 'O aluno deve aplicar os conhecimentos adquiridos nas disciplinas: Linguagens de Programação, Linguagens Formais e  Autômatos, Arquitetura de Computadores (linguagens de montagem), Programação de Computadores I, Programação de Computadores II, Estruturas d', 171, 'PATTERSON, D. A. - Organização e Projeto de Computadores A Interface Hardware/Software – 3º Ed, 2005.'),
(340, 'Prova 1 : 30%\nProva 2 : 70%\nNota final = P1 * 0,3 + P2 * 0,7\n', 'Primeira Avaliação: 16/05/2013\nSegunda Avaliação: 11/07/2013', 'Despertar nos alunos a capacidade de resolução de problemas.\n', 'Entrega do conteúdo da disciplina e apresentação.\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; Desenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação;\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; Desenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação;\nExpressões aritméticas e lógicas; estruturas de decisão;\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação;\nEstruturas de controle; estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes;\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação.', 'O aluno deve aplicar os conhecimentos de lógica de programação em outras disciplinas como Lógica e Fundamentos de Programação.', 135, 'C A M A R Ã O , C . e F I G U E I R E D O , L . , Programação de Computadores em Java, LTC Editora, Rio de Janeiro, 2003.\n\nSALVETTI, D.D. e BARBOSA, L.M., Algoritmos, Makron Books, São Paulo, 1998.\n\nF A R R E R , H . e o u t r o s , Programação Estruturada de Computadores - Algoritmos\nEstruturados, 3a ed., LTC, RJ, 1989.\n\nAscenio, A. F. G. e Campos, E.A. V. Fundamentos da Programação de Computadores, 3a Ed. Ed. Pearson, 2010.'),
(341, 'Prova 1 : 30%\nProva 2 : 70%\nNota final = P1 * 0,3 + P2 * 0,7\n', 'Primeira Avaliação: 16/05/2013\nSegunda Avaliação: 11/07/2013\n', 'Despertar nos alunos a capacidade de resolução de problemas.\nExpandir o conceito de programação e algoritmos.', 'Entrega do conteúdo da disciplina e apresentação.\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição;\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação;\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição;\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação;\nExpressões aritméticas e lógicas; estruturas de decisão;\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação;\nEstruturas de controle; estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes; \nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação.', 'O aluno deve aplicar os conhecimentos de lógica de programação em outras disciplinas como Lógica e Fundamentos de Programação.\n', 136, 'C A M A R Ã O , C . e F I G U E I R E D O , L . , Programação de Computadores em Java, LTC\nEditora, Rio de Janeiro, 2003.\nSALVETTI, D.D. e BARBOSA, L.M., Algoritmos, Makron Books, São Paulo, 1998.\nF A R R E R , H . e o u t r o s , Programação Estruturada de Computadores - Algoritmos\nEstruturados, 3a ed., LTC, RJ, 1989.\nAscenio, A. F. G. e Campos, E.A. V. Fundamentos da Programação de Computadores, 3a Ed. Ed. Pearson, 2010.'),
(342, '\\N', '\\N', '\\N', '\\N', '\\N', 177, '\\N'),
(343, 'Não haverá provas. Reunidos em grupos pequenos, de 2 a 3 membros, os alunos receberão uma lista de softwares dos quais deverão escolher um. Para o software escolhido, os alunos deverão realizar atividades de Engenharia de Sistemas, de Requisitos e de Proj', '1o trabalho: 07/05/13\n\n2o trabalho: 13/06/13\n\n3o trabalho: 02/07/13\n\nArtigo: 16/07/13', '1. Familiarizar o aluno com as visões de software como produto e processo\n\n2. Apresentar ferramentas de apoio ao desenvolvimento de produtos de software\n\n3. Trabalhar, do ponto de vista prático, diferentes etapas do processo de desenvolvimento de um software', '1. Modelagem e especificação de software\n2. Processo e Engenharia de requisitos\n3. Projeto de software\n4. Qualidade de software', 'Sendo uma disciplina abrangente, sua missão é estabelecer o relacionamento com as demais disciplinas do PPGCC-INF, principalmente aquelas relacionadas à área de Engenharia de Software, como Estrutura de Dados e Projeto de Algoritmos, Banco de Dados, Recup', 179, '1. SOMMERVILLE, Ian. Engenharia de Software. Addison-Wesley, Nona Edição, 2010. \n2. PRESSMAN, Roger S..Engenharia de Software. McGraw-Hill, Sétima Edição, 2011.\n3. SWEBOK. Guide to the Software Engineering Body of Knowledge. Editado por IEEE Computer Society. Disponível em http://www.computer.org/portal/web/swebok'),
(344, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n\n	P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova escrita individual – Valor: 10,0 pontos\n        P3 – Prova escrita individual', '08/05/2013\n17/06/2013\n24/07/2013', 'Desenvolver o raciocínio formal e abstrato \nFamiliarizar-se com a escrita matemática formal e a linguagem computacional', '1 Introdução: apresentação da disciplina e do plano de ensino\n2 Noções de lógica matemática\n3 Técnicas de demonstração\n4 Conjuntos\n5 Relações: Propriedades, relações de equivalência e ordem parcial.\n6 Funções\n7 Indução matemática e recursão\n8 Combinatória\n', 'Esta disciplina deve fornecer embasamento para a disciplina Algoritmos em grafos. Serão utilizados conhecimentos adquiridos em Lógica.', 132, 'Rosen, McGraw-Hill, 6th edition, 2006'),
(345, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\n\nNF = (4 * NP1 + 5 * NP2 + 1 * NT)/10;\nonde:\nNP1 representa a nota da primeira prova escrita, com peso 4;\nNP2, a nota da segunda prova escrita, com peso 5;\nNT, a média das notas dos trabal', 'Prova 1: 27/05/13 \nProva 2: 26/07/13\nCada prova será realizada considerando todo o conteúdo desenvolvido até a data de sua aplicação.', 'Apresentar o estudo da lógica de programação e a construção e implementação de algoritmos coerentes e válidos.\nHabilitar o estudante para o desenvolvimento de algoritmos a partir da descrição textual de problemas.\nCapacitar o estudante a desenvolver algoritmos específicos para a manipulação de problemas numéricos e não-numéricos.\nHabilitar o estudante para a implementação de algoritmos em uma linguagem de programação de alto nível.', 'Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas, e relacionamento com outras disciplinas do curso.\nConceitos Básicos: Noções de Lógica, Lógica de Programação, Algoritmo, Tipos primitivos, Constantes, Variáveis (Formação de Identificadores e Declaração de Variáveis), Expressões (Aritméticas, Lógicas, Relacionais).\nComandos (Atribuição, Entrada e Saída, Blocos).\nEstruturas de Controle:\n- Seqüencial\n- Seleção (Simples, Composta, Encadeada, Múltipla Escolha)\n- Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)\nEstruturas de Dados\n- Homogêneas (Vetores e Matrizes)\nModularização', 'A disciplina Introdução à Computação permite que o aluno se capacite para o desenvolvimento de algoritmos e sua implementação em uma linguagem de programação de alto nível, visando aplicações futuras em diversos ramos da Física.', 162, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(346, 'Três componentes integram a avaliação:\n\n(A) Atividades em sala de aula, laboratório e extra-classe.\n(P1 e P2) 1a. e 2a. Provas individuais.\n(PA) Projeto de Aplicação\n\nAs notas das Atividades, Provas e do Projeto de Aplicação terão valor de zero a dez.\n\nO', 'P1 (1a. prova): 17/05/2013.\nP2 (2a.prova): 02/08/2013.\n', 'De forma específica, a disciplina deve possibilitar aos estudantes a capacidade de:\n\n- Discutir os principais desafios diante da atividade de desenvolvimento de software concorrente;\n- Explicar e descrever os conceitos básicos relacionados à concorrência em software;\n- Identificar as principais ferramentas disponíveis para o desenvolvimento de software concorrente;\n- Explicar e descrever as características que são desejáveis em uma ferramenta de desenvolvimento de software concorrente; \n- Explicar e descrever os principais algoritmos concorrentes;\n- Explicar e descrever as propriedades de liveness e safety e o conceito de deadlock;\n- Implementar programas concorrentes em Java usando threads com foco em propriedades de liveness e safety; \n- Implementar programas concorrentes em Java usando threads com a técnica de semáforos para lidar com deadlocks.\n', 'I - Caracterização de software concorrente: conceitos, desafios, ferramentas.\n\nII - Programação concorrente orientada a objetos: programação concorrente, processos e threads, modelo de objetos e concorrência, safety, liveness, execução de construções concorrentes, reusabilidade, adaptadores, padrões de projeto.\n\nIII - Exclusão mútua: aplicações, construção, sincronização, deadlock, modelo de memória do Java, exclusão em métodos e threads, mutexes, read-write locks. \n\nIV - Dependência: exceções, guardas e variáveis de condição, monitores, espera ocupada, semáforos, criando transações, protocolos acquire-release. \n\nV - Criando programas concorrentes baseados em threads: modelagem, threads trabalhadoras, polling e eventos, callbacks, fork/join.\n', 'O bom desempenho do aluno nesta disciplina depende do embasamento teórico e prático do aluno adquirido nas disciplinas relacionadas a Sistemas de Computação, incluindo: Sistema Operacional, Redes e Sistemas Distribuídos. Além disto, é essencial que o alun', 156, 'Java Concurrency in Practice, Brian Goetz et al., Addison-Wesley, 2006.'),
(347, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\nNF = 0,4*NP1 + 0,4*NP2 + 0,2*NT\nonde:\nNP1 representa a nota da primeira prova escrita (P1);\nNP2 representa a nota da segunda prova escrita (P2);\nNT representa a nota do trabalho.\n', 'Prova 1 (P1): 13/05/2013\nProva 2 (P2): 15/07/2013', '- Capacitar o aluno a compreender a arquitetura e o funcionamento dos sistemas operacionais\nmodernos;\n- Apresentar aplicações práticas das tecnologias apresentadas na disciplina.\n', '1. Conceito de Sistemas Operacionais\n2. Histórico\n3. Fundamentos de Hardware e Software\n4. Tipos de Sistemas Operacionais\n5. Gerência de Processos\n6. Gerência de Memória\n6.1. Mono-programação\n6.2. Memória Virtual\n6.2.1 Segmentação\n6.2.2 Paginação\n7. Gerência do Sistema de Arquivos\n7.1. FAT16 e FAT32\n7.2. NTFS\n7.3. EXT\n7.4. ReiserFS\n8. Gerência de Entrada e Saída \n8.1. DMA\n8.2. RAID\n', 'A disciplina não apresenta pré-requisitos. Contudo, conhecimento sobre arquitetura de computadores e redes de computadores são importantes.', 139, '- FERREIRA, Rubem E. “Linux – Guia do Administrador do Sistema ”, São Paulo: Novatec, 2003.\n- HUNT, Craig, “Linux: Servidores de Rede”, São Paulo: Editora Moderna, 2004.'),
(348, 'A avaliação da aprendizagem será efetuada através da nota final (NF) da disciplina, a avaliação será efetuada considerando exercícios/trabalhos extra-classe, assim\ncomo trabalho em grupos com a parte prática e a parte oral, onde a parte prática consiste d', 'ET1 = 30/04/2013\nET2 = 16/05/2013\nN2 = 25/06/2013 e 27/06/2013', 'Os estudantes deverão:\nEstudar os principais métodos de Buscas em listas ordenadas ou não;\nEstudar e praticar os algoritmos de buscas binárias;\nEstudar os conceitos de tabelas de hashing;\nEstudar os principais algoritmos de classificação visando estudar as técnicas de classificação em\narquivos e tabelas.\nEstudar as principais estruturas de árvores de pesquisa.', '1. Pesquisa em memória Primária\n    1.1. Pesquisa Sequencial e Binária;\n    1.2. Árvore de Pesquisa;\n          1.2.1. Árvores Binárias de Pesquisas sem balanceamento;\n          1.2.2. Árvores Binárias de Pesquisa com Balanceamento (AVL);\n    1.3. Pesquisa Digital (Trie).\n\n2. Tabela de Hashing\n    2.1. Função de Transformação;\n    2.2. Tabelas ordenadas e não ordenadas;\n    2.3. Tabelas de Endereçamento Aberto.', 'Estruturas de Dados;\nProgamação de Computadores;\nBanco de Dados;\nProgramação Orientada a Objetos.', 147, 'Algoritmos: Teoria e Prática, Thomas H. Cormen, Charles E. Leiserson e Ronald L. Rivest, 2002, Campus Editora'),
(349, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\n\nNF = (2 * NP1 + 3 * NP2 + 4 * NP3 + 1 * NT)/10;\n\nonde:\nNP1 representa a nota da primeira prova escrita ou prática, com peso 2;\nNP2, a nota da segunda prova escrita ou prática, com peso 3;', '- P1: 16/05/2013\n- P2: 13/06/2013\n- P3: 18/07/2013', 'Apresentar o estudo da lógica de programação e a construção e implementação de algoritmos coerentes e válidos.\n· Habilitar o estudante para o desenvolvimento de algoritmos a partir da descrição textual de problemas.\n· Capacitar o estudante a desenvolver algoritmos específicos para a manipulação de problemas numéricos e não-numéricos.\n· Habilitar o estudante para a implementação de algoritmos em uma linguagem de programação de alto nível.', '\n• Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas e\nrelacionamento com outras disciplinas do curso.\n• Conceitos Básicos de Computação. Histórico da Computação. Hardware. Software. Sistemas Operacionais, Linguagens de Programação.\n• Noções de Lógica, Lógica de Programação, Algoritmo.\n• Tipos primitivos. Constantes, Variáveis (Formação de Identificadores e Declaração de Variáveis).\n• Expressões (Aritméticas, Lógicas, Relacionais).\n• Comandos (Atribuição, Entrada e Saída, Blocos).\n• Estruturas de Controle Sequencial\n• Seleção (Simples, Composta, Encadeada, Múltipla Escolha)\n• Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)\n• Estruturas de Dados Homogêneas (Vetores e Matrizes)\n• Modularização', 'A disciplina Introdução à Computação permite que o aluno se capacite para o desenvolvimento de algoritmos e sua implementação em uma linguagem de programação de alto nível, visando aplicações futuras em diversos ramos da Física.', 165, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(350, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\nNF = 0,35*P1 + 0,35*P2 + 0,3*E\nonde:\nP1 representa a nota da primeira prova escrita;\nP2 representa a nota da segunda prova escrita;\nE representa a nota de exercícios e atividades extras;\n', 'P1: 14 de outubro de 2013 (segunda)\nP2: 2 de dezembro de 2013 (segunda)\n', 'Ao final do curso, o aluno deverá ser capaz de compreender e implementar os principais algoritmos utilizados para gerência de processos e páginas em sistemas operacionais, assim como compreender a interrelação e interdependência dos componentes necessários para construção de um sistema operacional.', '1. Introdução aos Sistemas Operacionais\n2. Gerência de Processos\n3. Gerência de Memória\n4. Entrada/Saída\n5. Sistemas de Arquivos', 'O aluno deve aplicar os conhecimentos adquiridos através das disciplinas: Algoritmos e Programação 1 e 2.', 167, '.SILBERSCHATZ, Avi & GALVIN, Peter. Sistemas Operacionais Conceitos. Prentice-Hall. 2005'),
(351, '2 Provas (P1 e P2)\n2 Exercícios (EX1 e EX2)\n\nNF = 0.6 x MP + 0.4 x ME, onde MP é a média das provas e ME é a média dos exercícios.', '18/05/2013 (Sáb) P1\n18/07/2013 (Qui) P2', 'Ao final do curso, o aluno deverá:\n1. Saber caracterizar criticamente um sistema distribuído em relação às propriedades de\ntransparência, abertura, escalabilidade e flexibilidade, assim como identificar fatores de projeto dos sistemas que influenciam cada uma dessas propriedades.\n2. Compreender e saber aplicar os modelos de programação de objetos distribuídos e de web services a problemas práticos.\n3. Compreender os detalhes de funcionamento, projeto e implementação, dos sistemas de objetos distribuídos, serviços web, serviços e paradigmas para comunicação indireta.\n4. Compreender em detalhes os problemas de manutenção de estado global e tempo, coordenação e acordo e gerenciamento de transações em sistemas distribuídos. Compreender os principais algoritmos aplicados às soluções desses problemas.', '1. Caracterização e Modelos de Sistema para SD\n2. Comunicação Interprocessos\n3. Invocação Remota e Sistemas de Objetos Distribuídos\n4. Serviços Web\n5. Comunicação Indireta\n6. Serviços de Nomes\n7. Tempo e Estado Global\n8. Coordenação e Acordo\n9. Transações e Controle de Concorrência', 'A disciplina é fortemente dependente dos conteúdos apresentados na disciplina de Redes de Computadores. Os problemas discutidos da disciplina só podem ser adequadamente\ncompreendidos se feitos à luz da compreensão da complexidade de uma rede de computador', 166, '.'),
(352, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\nNF = 0,4*NP1 + 0,4*NP2 + 0,2*NT\nonde:\nNP1 representa a nota da primeira prova escrita (P1);\nNP2 representa a nota da segunda prova escrita (P2);\nNT representa a nota do trabalho.\n', 'Prova 1 (P1): 13/05/2013\nProva 2 (P2): 15/07/2013\n', '- Capacitar o aluno a compreender a arquitetura e o funcionamento dos sistemas operacionais\nmodernos;\n- Apresentar aplicações práticas das tecnologias apresentadas na disciplina.', '1. Conceito de Sistemas Operacionais\n2. Histórico\n3. Fundamentos de Hardware e Software\n4. Tipos de Sistemas Operacionais\n5. Gerência de Processos\n6. Gerência de Memória\n6.1. Mono-programação\n6.2. Memória Virtual\n6.2.1 Segmentação\n6.2.2 Paginação\n7. Gerência do Sistema de Arquivos\n7.1. FAT16 e FAT32\n7.2. NTFS\n7.3. EXT\n7.4. ReiserFS\n8. Gerência de Entrada e Saída\n8.1. DMA\n8.2. RAID\n', 'A disciplina não apresenta pré-requisitos. Contudo, conhecimento sobre arquitetura de\ncomputadores e redes de computadores são importantes.\n', 140, '- FERREIRA, Rubem E. “Linux – Guia do Administrador do Sistema ”, São Paulo: Novatec, 2003.\n- HUNT, Craig, “Linux: Servidores de Rede”, São Paulo: Editora Moderna, 2004.\n'),
(353, 'Nota Final = (Seminário + Trabalho + Artigo)/3', 'Seminário = sorteado\nTrabalho = 02/07/2013\nArtigo = 09/07/2013\n', '- Introdução sobre Heurísticas e Metaheurísticas\n- Busca Local\n- Busca Populacional\n- Algoritmos\n- Aplicações', '- Introdução sobre Heurísticas e Metaheurísticas\n- Busca Local\n- Busca Populacional\n- Busca Tabu\n- Simulated Annealing\n- Algoritmos Evolucionários\n- GRASP\n- Iterated Local Search\n- Algoritmos Meméticos\n- Particle Swarm Optimization (PSO)', '.', 92, '05 Tabu Search. Annals of Operations Research, v.41, J.C.Baltzer,1993\nGlover, F., Laguna, M. & Taillard, E.'),
(354, 'Critério de avaliação \n•	A avaliação da aprendizagem será efetuada considerando:\no	Participação em sala de aula\no	Exercícios\no	Provas\no	Seminários \no	Trabalhos extra-classe \n•	Os trabalho/exercícios poderão ser individuais ou em grupos\n•	As provas possuem', '* 26/04\n* 17/05\n* 21/06', '* Trazer à discussão questões éticas, sociais e legais do profissional ligado à área de Engenharia de Software.\n* Estudo de normas.\n* Liderança.\n* Gestão de Conflitos\n* Postura profissional\n* Empreendedorismo.', '1.	Apresentação da Disciplina\n2.	Ética em Computação\n3.	Código de Ética da ACM\n4.     Norma ISO/IEC 12207 \n5.     Norma ISO/IEC 9126\n6.	Legislação Brasileira e Crimes de Informática\n7.	Aspectos Sóciotécnicos\n8.     Liderança.\n9.     Gestão de Conflitos\n10.    Postura profissional\n11.    Empreendedorismo\n12.	Projeto/Pesquisa de Campo\n\n', 'Embora a disciplina não possua pré-requisito, nem co-requisito dentro da matriz curricular, seu conteúdo programático permite fornecer um norte para a conduta profissional do egresso.', 138, 'Padrões internacionais pertinentes à Engenharia de Software (http://standards.ieee.org/software/).\nTecnologia da Informação — Legislação Brasileira, Ministério da Ciência e Tecnologia, Secretaria de\nPolítica de Informática, 6a. edição, 2008.\n'),
(355, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\nNF = (4 * NP1 + 5 * NP2 + 1 * NT)/10;\nonde:\nNP1 representa a nota da primeira prova escrita, com peso 4;\nNP2, a nota da segunda prova escrita, com peso 5;\nNT, a média das notas dos trabalh', '1ª avaliação - 30/05/13\n2ª avaliação - 27/06/13', 'Elaborar algoritmos a partir da descrição textual de pequenos problemas;\nDesenvolver programas em uma linguagem de programação procedural de alto nível;\nSelecionar estruturas de dados simples para a implementação dos programas;\nElaborar algoritmos específicos para a solução de problemas numéricos e não numéricos;\nDesenvolver programas, na linguagem de programação C, dentro de suas atividades acadêmicas e profissionais;\nUtilizar ferramentas para o desenvolvimento de programas.\n', 'Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas e\nrelacionamento com outras disciplinas do curso.\nConceitos Básicos: Noções de Lógica, Lógica de Programação, Algoritmo, Tipos primitivos,\nConstantes, Variáveis (Formação de Identificadores e Declaração de Variáveis), Expressões\n(Aritméticas, Lógicas, Relacionais).\nComandos (Atribuição, Entrada e Saída, Blocos).\nEstruturas de Controle\n- Seqüencial\n- Seleção (Simples, Composta, Encadeada, Múltipla Escolha)\n- Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)\nEstruturas de Dados\n- Homogêneas (Vetores e Matrizes)\nModularização\n', 'Verificar grade curricular do curso.\n\n', 172, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall, 2005. '),
(356, 'A avaliação da disciplina será realizada mediante três provas escritas (P1, P2 e P3), podendo conter questões discursivas, objetivas de simples e múltipla escolha, com justificativa e/ou questões sobre trabalhos realizados em sala de aula.\n\nA média final', 'P1: 03/05/13\nP2: 12/06/13\nP3: 24/07/13', '1. Apresentar o estudo da lógica de programação e a construção e implementação de algoritmos coerentes e válidos.\n2. Habilitar o estudante para o desenvolvimento de algoritmos a partir de descrição textual dos problemas.\n3. Capacitar o estudante a desenvolver algoritmos específicos para a manipulação de problemas numéricos e não-numéricos.', '1. Conceitos básicos da computação (Histórico, Hardware e Software, Sistemas Operacionais, Linguagens de Programação)\n2. Noções de Lógica, Lógica de Programação, Algoritmo\n3. Tipos primitivos, constantes, variáveis\n4. Expressões aritméticas, lógicas, relacionais\n5. Comandos de atribuição, entrada e saída\n6. Estruturas de Controle: Sequencial, Seleção e Múltipla-Escolha\n7. Estruturas de Repetição: Com teste no início, no final, com variável de controle\n8. Estruturas de Dados: homogêneas unidimensionais e multidimensionais.', 'Introdução à Programação, Linguagens de Programação, Matemática Discreta, Lógica, dentre outras relacionadas à programação de computadores.', 137, '1. FARRER, H. et al. Algoritmos Estruturados. LTC. 1999.\n2. SOUZA, M. A. F. et al. Algoritmos e Lógica de Programação. C. Learning. 2008.'),
(357, '\nA avaliação da disciplina será realizada mediante três provas escritas (P1, P2 e P3), e diversos trabalhos, cuja média é T, podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa ou questões sobre trabalhos realiza', 'P1: 15/05/2013\nP2: 19/06/2013\nP3: 10/07/2013', 'Ao final do curso o aluno deve ser capaz de:\n-Compreender as estruturas lógicas para o desenvolvimento de algoritmos;\n-Elaborar algoritmos a partir da descrição textual de pequenos problemas;\n-Desenvolver programas em uma linguagem de programação;\n-Selecionar estruturas de dados simples para a construção dos programas;\n-Elaborar algoritmos específicos para a solução de problemas numéricos e não numéricos;', '1.Conceitos Preliminares\n1.1.Histórico da Computação\n1.2.Visão Geral do Computador: Hardware, Software\n1.3.Noções sobre o Armazenamento de Dados\n1.4. Noções de Lógica\n1.5.Lógica de Programação\n2.Expressões e Operadores\n2.1.Expressões Aritméticas\n2.2.Expressões Lógicas\n3.Itens Fundamentais de uma Linguagem de Programação\n3.1.Tipo de Dados\n3.2.Formação de Identificadores\n3.3.Constantes\n3.4.Variáveis\n4.Comandos Básicos\n4.1.Comando de Atribuição\n4.2.Comandos de Entrada e Saída\n4.3.Estrutura Sequencial\n5.Estruturas de Seleção\n5.1.Simples\n5.2.Composta\n5.3.Encadeada\n5.3.1.Heterogênea\n5.3.2.Homogênea\n5.4.Múltipla Escolha\n6.Estrutura de Repetição\n6.1.Com Variável de Controle\n6.2.Com Teste no Início\n6.3.Com Teste no Final\n7.Estrutura de Dados\n7.1.Variáveis Compostas Homogêneas Unidimensionais\n7.2.Variáveis Compostas Homogêneas Multidimensionais\n8.Modularização\n9.Programação (em paralelo com os algoritmos)', 'A disciplina  permite que o aluno se capacite para o desenvolvimento de algoritmos, visando aplicações futuras.', 161, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(358, 'A avaliação da disciplina será realizada mediante três provas escritas (P1, P2 e P3), e diversos trabalhos, cuja média é T, podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa ou questões sobre trabalhos realizad', 'P1: 16/05/2013\nP2: 13/06/2013\nP3: 11/07/2013', 'Ao final do curso o aluno deve ser capaz de:\nCompreender as estruturas lógicas para o desenvolvimento de algoritmos;\nElaborar algoritmos a partir da descrição textual de pequenos problemas;\nDesenvolver programas em uma linguagem de programação;\nSelecionar estruturas de dados simples para a construção dos programas;\nElaborar algoritmos específicos para a solução de problemas numéricos e não numéricos;', '1.Conceitos Preliminares\n1.1.Histórico da Computação\n1.2.Visão Geral do Computador: Hardware, Software\n1.3.Noções sobre o Armazenamento de Dados\n1.4. Noções de Lógica\n1.5.Lógica de Programação\n2.Expressões e Operadores\n2.1.Expressões Aritméticas\n2.2.Expressões Lógicas\n3.Itens Fundamentais de uma Linguagem de Programação\n3.1.Tipo de Dados\n3.2.Formação de Identificadores\n3.3.Constantes\n3.4.Variáveis\n4.Comandos Básicos\n4.1.Comando de Atribuição\n4.2.Comandos de Entrada e Saída\n4.3.Estrutura Sequencial\n5.Estruturas de Seleção\n5.1.Simples\n5.2.Composta\n5.3.Encadeada\n5.3.1.Heterogênea\n5.3.2.Homogênea\n5.4.Múltipla Escolha\n6.Estrutura de Repetição\n6.1.Com Variável de Controle\n6.2.Com Teste no Início\n6.3.Com Teste no Final\n7.Estrutura de Dados\n7.1.Variáveis Compostas Homogêneas Unidimensionais\n7.2.Variáveis Compostas Homogêneas Multidimensionais\n8.Recursividade', 'A disciplina  permite que o aluno se capacite para o desenvolvimento de algoritmos, visando aplicações futuras em análises numéricas na Matemática, aplicando nas Equações Diferenciais, no Cálculo Numérico, na Geometria e no Cálculo Diferencial, entre outr', 160, 'FORBELLONE, A. L. V. Lógica de Programação: A construção de algoritmos e estrutura de dados. 3ª edição. Makron Books, 2005.\nDEITEL, H. M., Java: Como Programar. São Paulo: Pearson, 6 ed. 2007.'),
(359, 'A avaliação será feita a partir de dois trabalhos em grupo, feitos fora do horário de aulas, e de um exame individual escrito, a serem realizados e entregues nos dias indicados neste plano de aula. Cada avaliação vale dez pontos. Não haverá avaliação subs', 'Entrega do Trabalho1: 16/04/2013\nEntrega do Trabalho2: 23/05/2013\nExame escrito individual: 18/07/2013', '1-Oferecer ao aluno a oportunidade de exercitar a prática da gerência de projeto de software, usando ferramentas para planejamento e acompanhamento de projetos.\n2-Capacitar o aluno com experiência prática na aplicação de técnicas e ferramentas para gerência de projetos que envolvam a Gestão de Software. \n3-Exercitar o planejamento e o acompanhamento de projetos, bem como a avaliação da qualidade e dos riscos de projetos, de acordo com as características do mundo real em que o projeto é desenvolvido.\n4-Vivenciar a realização de trabalho em equipes, aplicando técnicas para motivação e gestão de pessoas em projetos.\n', 'Definição de escopo; Estimativa de tamanho e complexidade do projeto; Seleção de processos e ciclo de vida; Estimativa de esforço e custo; Manutenção de orçamento e cronograma do projeto; Planejamento de riscos do projeto; Gestão de equipes do projeto; Gestão de recursos do projeto; Gestão de comunicações e dados do projeto; Elaboração de plano de projeto; Análise de viabilidade de projeto; Comprometimento das equipes com o plano de projeto; Monitoramento de escopo, orçamento, cronograma, recursos, pessoas, comunicações e dados do projeto; Gestão de riscos; Monitoramento de marcos; Monitoramento de problemas e ações corretivas; Gestão de requisitos do projeto; Garantia e Controle da Qualidade; Medição do projeto; Gerência de configuração; Métodos Ágeis de gestão de projetos.', 'O gerenciamento de projetos exige habilidades humanísticas (liderança, comunicação, e organização, entre outras). A base teórica para a prática prevista para a disciplina vem, principalmente, da disciplina Processos de Software. No entanto, a gerência efe', 150, 'SOFTEX - Associação para Promoção da Excelência do Software Brasileiro. MPS.BR - Melhoria de Processo do Software Brasileiro, Guia de Implementação - Parte 1, Versão 2011.\nOGC - Office of Government Commerce. Managing Successful Projects with PRINCE2. TSO (The Stationery Office), 2009 Edition.\nMCCONNELL, Steve C. Rapid Development: Taming Wild Software Schedules. Microsoft Press, 1996.\n'),
(360, 'A avaliação será feita com base em dois trabalhos em grupo, feitos fora do horário de aulas e também durante as aulas práticas de Integração de Aplicações em Projeto de Software, e de um exame individual escrito. As datas em que serão realizados os exames', 'Exame individual escrito: 30/04/2013\nEntrega do Trabalho 1: 28/05/2013\nEntrega do Trabalho 2: 18/07/2013', '1-Oferecer ao aluno a oportunidade de exercitar a prática de integração de aplicações através do desenvolvimento de um projeto de software que envolve necessidades de integração.\n2-Capacitar o aluno com experiência prática na aplicação de métodos, técnicas e ferramentas para integração de aplicações. \n3-Exercitar o planejamento de integração de aplicações através da avaliação de diferentes abordagens de integração, e do uso de padrões de integração.\n', 'Conceitos Fundamentais de Integração de Aplicações; Necessidades e desafios de integração; Acoplamento em Arquitetura de Software; Padrões de Integração.\nEstilos ou abordagens de integração: Transferência de Arquivos, Base de Dados compartilhada; RPC; Mensagens Assíncronas; Vantagens e limitações de cada abordagem.\nDefinição de Mensagem; Propriedades de uma Mensagem; Etapas para comunicação de mensagens; Canais de Mensagem.\nTratamento de mensagens inválidas; Controle de múltiplos consumidores de mensagens; Roteamento de mensagens; Construção de mensagens; conversão de formato de mensagens.\nConexão entre aplicações e sistemas de mensagem; confiabilidade da conexão; garantia de entrega de mensagem; Tipos de Sistemas Gerenciadores de Mensagens: SO, SGBD, Servidor de Aplicação, Toolkit, Framework, Middleware.\n', 'A integração de aplicações ocorre no contexto de projetos de desenvolvimento ou manutenção de software. A prática da disciplina será aplicada em um projeto que deve ser gerenciado de acordo com a disciplina de Gerência de Projeto de Software. Os requisito', 159, 'Enterprise Integration: An Architecture for Enterprise Application and Systems Integration. Fred A. Cummins. Wiley, 2002.\nIntegration Patterns. Trowbridge, Roxburgh, Hohpe, Manolescu, and Nadhan. Microsoft, 2004.\nPatterns of enterprise application architecture. Martin Fowler. Addison-Wesley, 2003.\nEnterprise Application Integration. David Linthicum. Addison-Wesley, 2003.\n'),
(361, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n\n	A1 – Resumo e Resenha – Valor: 10,0 pontos\n	A2 – Escrita de um Artigo – Valor: 10,0 pontos\n        A3 – Apresentação do artigo – Valor: 10,0', '04/10/2013 - entrega do artigo avaliado\n25/10/2013 - entrega do artigo escrito\n01 e 08/11/2013 - apresentação dos artigos', 'Capacitar o aluno a aplicar técnicas de leitura, redação e apresentação de trabalhos de pesquisa.\n\n1. Fazer com que o aluno seja capaz de desenvolver capacidade de leitura e compreensão de textos. \n2. Fazer com que o aluno desenvolva a capacidade de fazer uma leitura crítica de textos. \n3. Fazer com que o aluno seja capaz de aprender, metodologicamente, a elaboração de \ntrabalhos científicos escritos, assim como sua apresentação. ', 'Introdução – Tema, Objetivo, Hipótese, Validação\nLeitura de Documentos – Tipos de Documentos, Levantamento Bibliográfico, Resumo E Resenha\nEscrita de Documentos – Referências Bibliogáficas, Plágio, Latex\nApresentação de Artigos - Técnicas\n', 'Os conceitos apresentados estão relacionados com toda disciplina que implique na elaboração de documentos técnicos, em especial, a dissertação de mestrado.', 175, 'FURASTÉ, PEDRO AUGUSTO. NORMAS TÉCNICAS PARA O TRABALHO CIENTÍFICO. ART LER LTDA, RS, 2004. \nGIL, ANTONIO CARLOS. COMO ELABORAR PROJETOS DE PESQUISA. 5A. EDIÇÃO. EDITORA ATLAS. SÃO PAULO. 2010. ');
INSERT INTO `plano` (`id`, `criterioavaliacao`, `datarealizacaoprovas`, `objetivosespecificos`, `programa`, `relacaooutrasdisciplinas`, `turma_id`, `bibliografiasugerida`) VALUES
(362, 'A avaliação da aprendizagem será efetuada através da nota final (NF) da disciplina, a avaliação será efetuada considerando exercícios/trabalhos extra-classe, assim como trabalho em grupos com a parte prática e a parte oral, onde a parte prática consiste d', 'ET1 = 30/04/2013\nET2 = 16/05/2013\nN2 = 25/06/2013 e 27/06/2013', 'Os estudantes deverão:\nEstudar os principais métodos de Buscas em listas ordenadas ou não;\nEstudar e praticar os algoritmos de buscas binárias;\nEstudar os conceitos de tabelas de hashing;\nEstudar os principais algoritmos de classificação visando estudar as técnicas de classificação em arquivos e tabelas;\nEstudar as principais estruturas de árvores de pesquisa.', '1. Pesquisa em memória Primária\n   1.1. Pesquisa Sequencial e Binária;\n   1.2. Árvore de Pesquisa;\n      1.2.1. Árvores Binárias de Pesquisas sem balanceamento;\n      1.2.2. Árvores Binárias de Pesquisa com Balanceamento (AVL);\n1.3. Pesquisa Digital (Trie).\n\n2. Tabela de Hashing\n    2.1. Função de Transformação;\n    2.2. Tabelas ordenadas e não ordenadas;\n    2.3. Tabelas de Endereçamento Aberto.', 'Estruturas de Dados;\nProgamação de Computadores;\nBanco de Dados;\nProgramação Orientada a Objetos', 148, 'Algoritmos: Teoria e Prática, Thomas H. Cormen, Charles E. Leiserson e Ronald L. Rivest, 2002, Campus Editora'),
(363, 'A avaliação será feita a partir de três componentes: (N1) a assiduidade e participação do aluno em atividades em sala de aula (ou laboratório); (N2) trabalhos e atividades; (N3) provas em sala de aula. As provas serão realizadas a qualquer momento do curs', '\\N', 'O aluno deverá ser capaz de explicar o funcionamento de aplicações Web; entender os princípios de programação para Web, as camadas das aplicações para Web e as partes da aplicação que devem ser executadas ou interpretadas seja no servidor, seja no cliente; utilizar plataformas e frameworks atuais para desenvolvimento de aplicações dinâmicas para Web.\n', '\\N', 'O aluno deve aplicar os conhecimentos adquiridos por/para as disciplinas:\n1 - Introdução à programação e Programação Orientada a Objetos, haja vista que estas disciplinas ensinam os alunos a arte de programar e o paradigma de orientação a objetos, que por', 158, '\\N'),
(364, 'Neste semestre, desenvolveremos, ao longo do curso, um projeto por grupo de estudantes. Parte do projeto será desenvolvida nas aulas presenciais e parte em encontros e atividades “extraclasse”.\nA média final da disciplina será obtida através da participaç', 'No dia 23 de julho ocorrerão a entrega da versão final do projeto e sua defesa\n(apresentação).\n', 'Permitir ao estudante compreender a necessidade do conhecimento dos conceitos e técnicas básicas utilizadas nas Tecnologias da Informação e Comunicação (TIC) como elementos fundamentais para o desenvolvimento e a manutenção da governança das organizações.', '1- Conceitos básicos\n2- Infraestrutura: Hardware\n3- Infraestrutura: Software\n4- Infraestrutura: Gerenciamento de Dados\n5- Infraestrutura: Telecomunicações e Redes\n6- Infraestrutura: Segurança\n7- Aplicações: Sistemas e-Business \n8- Aplicações: Sistemas e-Commerce\n9- Aplicações: Sistemas de Apoio às Decisões\n10- Processos de Desenvolvimento', 'A disciplina Introdução a Sistemas de Informação tem relação tanto com disciplinas básicas da formação tecnológica (Introdução à Computação, por exemplo) do curso, servindo de elemento integrador de diversos conhecimentos desenvolvidos, quanto com discipl', 182, 'REZENDE, D. A.; ABREU, A. F., Tecnologia da Informação Aplicada a Sistemas de Informação Empresariais: Editora Atlas, 2009.'),
(365, 'A avaliação será feita com base em dois (2) trabalhos em grupo, feitos fora do horário de aulas e também durante as aulas práticas da disciplina. As datas em que serão realizadas as entregas dos trabalhos estão indicadas neste plano de aula. Dada a nature', '01/05/2013 - primeira avaliação\n03/06/2013 - segunda avaliação\n26/06/2013 - terceira avaliação\n', '* Identificar recursos de hardware de dispositivos móveis e o impacto no código que faz uso de tais dispositivos.\n* Identificar o impacto do uso de dispositivos móveis na arquitetura de um sistema do qual faz parte. \n* Habilitar o estudante a produzir código para dispositivos móveis em cenários reais.', '* Características de hardware de dispositivos móveis (celulares, PDAs e sensores).\n\n* Ambientes de desenvolvimento. \n\n* Tecnologias e ferramentas para desenvolvimento de software para dispositivos móveis.\n\n* Desenvolvimento de uma aplicação cuja interface é executada em um tablet.\n\n* Embora o cronograma estabeleça datas para tópicos específicos, espera-se que todos estejam trabalhando em vários tópicos simultaneamente.', 'Trata-se de disciplina de cunho prático onde questões específicas de dispositivos móveis são consideradas no desenvolvimento de um software. Há integração com praticamente todas as demais disciplinas, cujos conteúdos contribuem com conhecimento que é reut', 157, '* Ambiente de desenvolvimento (developer.android.com)'),
(366, 'A avaliação será realiza por meio de duas provas escritas: P1 e P2.  A nota final, NF, será\ncalculada segundo a seguinte fórmula: NF = 0,45*P1 + 0,55*P2.', 'P1: 29/05\nP2: 24/07', 'Fazer com o aluno compreenda a relação entre as áreas de conhecimento da engenharia software. Propiciar ao aluno situações em que ele tenha contato com artefatos reais produzidos na industria de software.', 'Requisito de Software:\n- Processos da Engenharia de Requisitos\n- Norma IEEE 830\nProjeto de Software:\n- Projeto Arquitetural\n- Projeto de Interface\n- Projeto de baixo nível\nDesenvolvimento:\n- Desenvolvimento Orientado a Objetos\n- Desenvolvimento Baseado em Componentes\n- Desenvolvimento Orientado a Aspectos\nDesenvolvimento Ágil\nGerência de Configuração\nValidação e Verificação\nDesenvolvimento de Sistemas Críticos\nManutenção de Software\nGerenciamento:\n-Gerenciamento de Pessoal\n-Estimativa de custo\n-Gerenciamento da Qualidade\n-Modelos de Maturidade de Processo', 'Por abordar as diversas áreas de conhecimento da Engenharia de Software, esta disciplina está relacionada com todas as demais disciplinas.', 143, 'Engenharia de Software. SOMMERVILLE, Ian. Pearson - Addison Wesley. 2009'),
(367, 'A avaliação será realiza por meio de duas provas escritas: P1 e P2. A nota final, NF, será\ncalculada segundo a seguinte fórmula: NF = 0,45*P1 + 0,55*P2.', 'P1: 29/05\nP2: 24/07', 'Propiciar ao aluno situações em que ele tenha contato com artefatos reais produzidos na industria de software.\n', 'Requisito de Software:\n- Processos da Engenharia de Requisitos\n- Norma IEEE 830\nProjeto de Software:\n- Projeto Arquitetural\n- Projeto de Interface\n- Projeto de baixo nível\nDesenvolvimento:\n- Desenvolvimento Orientado a Objetos\n- Desenvolvimento Baseado em Componentes\n- Desenvolvimento Orientado a Aspectos\nDesenvolvimento Ágil\nGerência de Configuração\nValidação e Verificação\nDesenvolvimento de Sistemas Críticos\nManutenção de Software\nGerenciamento:\n-Gerenciamento de Pessoal\n-Estimativa de custo\n-Gerenciamento da Qualidade\n-Modelos de Maturidade de Processo', 'Por abordar as diversas áreas de conhecimento da Engenharia de Software, esta disciplina está relacionada com todas as demais disciplinas.', 144, 'Engenharia de Software. SOMMERVILLE, Ian. Pearson - Addison Wesley. 2009'),
(368, 'Para cada seminário ministrado será cobrado um resumo e juízo de valor sobre o seminário emitido pelo aluno. Além disso será atribuida uma nota ao aluno pela participação no JOPINF. A nota final será a média aritmética entre a nota obtida nos seminários e', 'Avaliação contínua', 'Fazer com a aluno crie conexões entre o seu trabalho de pesquisa e os demais trabalhos de pesquisa em Ciência da Computação.\nSocializar a Pesquisa realizada na UFG no âmbito da Ciência da Computação', 'Pesquisadores serão convidados a ministrar seminários sobre os diversos tópicos em Ciência da Computação. No fechamento da disciplina, os alunos apresentarão seminários relacionados aos seus trabalhos de pesquisa na Jornada de Pesquisa do Instituto de Informática.', 'Está disciplina tem o potencial de se relacionar com todas as disciplinas do Mestrado em Ciência da Computação.', 176, 'A depender do tema do seminário.'),
(369, 'A avaliação será feita com base em dois (2) trabalhos em grupo, feitos fora do horário de aulas e também durante as aulas práticas da disciplina. As datas em que serão realizadas as entregas dos trabalhos estão indicadas neste plano de aula. Dada a nature', '01/05/2013 - primeira avaliação\n03/06/2013 - segunda avaliação\n26/06/2013 - terceira avaliação', '* Apresentar alternativas de persistência de software.', '* Definição de persistência. \n* Alternativas de persistência empregando arquivos binários, documentos XML, objetos serializáveis, SGBDs. \n* Tecnologias para persistência de informações. Persistência de objetos usando base relacional. ', 'Sistemas de informação dependem de informações consultadas após o instante em que foram produzidas, o que torna a persistência um elemento essencial em qualquer sistema. Desta perspectiva, todas as disciplinas diretamente relacionadas com a construção de', 155, 'Portais na internet serão indicados durante as aulas onde todo o conteúdo do curso poderá ser obtido.'),
(370, 'A avaliação da aprendizagem será efetuada considerando exercícios resolvidos em aula,\nexercícios extra-classe e trabalhos. Será realizado trabalho em grupo e/ou individual, cuja\navaliação será parte da nota. Cada prova será realizada considerando todo o c', 'Prova 1: 30/9/2013\nProva 2: 02/12/2013', 'Discutir os principais modelos de Sistemas Distribuídos;\nInvestigar os principais mecanismos de transparência na comunicação distribuída;\nDiscutir os principais conceitos e requisitos para sincronização e coordenação de eventos distribuídos;\nEstudar os conceitos de objetos distribuídos;\nEstudar ferramentas para o desenvolvimento de aplicações distribuídas.', '1. Caracterização de sistemas distribuídos: compartilhamento de recursos; transparências de\ndistribuição; serviços; principais problemas e desafios; exemplos de sistemas distribuídos;\naplicações distribuídas.\n2. Modelos de sistema: arquitetura geral de sistemas distribuídos (middleware, cliente-servidor,\npeer-to-peer, agentes móveis); requisitos de projeto (desempenho, qualidade de serviço,\nconfiabilidade, transparência); modelos de interação; modelos de falha; modelos de segurança.\n3. Processos em sistemas distribuídos: comunicação interprocessos (API de sockets,\nrepresentação de dados, protocolo de requisição/resposta); processos clientes e processos\nservidores; uso de threads; código móvel e agentes.\n4. Objetos distribuídos: chamada de procedimentos remotos (RPC); modelo de objetos\ndistribuídos (interfaces, referência de objeto, operações, exceções, chamada de métodos\nremotos); uso e implementação de RMI; plataformas de middleware e processamento\ndistribuído aberto; Java RMI; CORBA; eventos e notificações.\n5. Serviços de nomes e serviços de diretórios: publicação e descoberta de serviços, principais\ntecnologias disponíveis.\n6. Replicação, transações e tolerância a falhas: comunicação confiável; replicação e\nmanutenção de consistência entre réplicas; transações distribuídas; comunicação de grupo.', 'Esta disciplina utiliza conceitos adquiridos nas disciplinas de Arquitetura de Computadores, Sistemas Operacionais e Redes de Computadores. A comunicação entre processos e as arquiteturas distribuídas são soluções para os problemas de disparidades nas arq', 169, 'TANENBAUM, A.S.; STEEN, M. – Sistemas Distribuídos: Princípios e Paradigmas, 2a. Edição. Pearson Education, 2007.'),
(371, 'Média será calculada da seguinte maneira:\nMédia = 10% Seminários + 40% Trabalhos + 50% Provas\n', 'Prova 1: 21/05/2013\nProva 2: 9/07/2013\n', '1. Compreender o funcionamento básico de redes de comunicação e de computadores.\n2. Compreender e saber os serviços suportados por redes de computadores, bem como o\nfuncionamento de protocolos de comunicação.\n3. Adquirir senso crítico com relação à influência dos protocolos e arquiteturas de redes de computadores no desenvolvimento de sistemas distribuídos.\n4. Saber caracterizar criticamente um sistema distribuído em relação às propriedades de\ntransparência, abertura, escalabilidade e flexibilidade, assim como identificar fatores de projeto dos sistemas que influenciam cada uma dessas propriedades.\n5. Compreender e saber aplicar os modelos de programação de objetos distribuídos e de web services a problemas práticos.', '1 Introdução a redes de comunicação e computadores\n1.1 Conceitos básicos\n1.2 Roteamento de Pacotes\n1.3 Atrasos na Comunicação\n2 Modelos de Camadas e Arquiteturas de Redes\n2.1 Modelo OSI\n2.2 Modelo TCP/IP\n3 Programação com Sockets\n3.1 Modelo de Comunicação por Sockets\n3.2 Sockets TCP\n3.3 Sockets UDP\n4 Introdução aos Sistemas Distribuídos\n4.1 Caracterização de de sistemas distribuídos (transparência, abertura, escalabilidade e outros);\n4.2 Modelo de sistema;\n4.3 Arquitetura de aplicações distribuídas\n4.4 Comunicação interprocessos.\n5 Sistemas de Objetos Distribuídos\n5.1 RPC e IDL\n5.2 Modelo de objetos distribuídos\n5.3 Invocação remota de objetos\n5.4 Java RMI\n5.5 Coleta de lixo em objetos distribuídos\n5.6 Serviços de nome\n5.7 Plataforma de middleware para objetos distribuídos.\n6 Arquiteturas Orientadas a Serviços\n6.1 Modelo de arquiteturas orientadas a serviços\n6.2 Web services\n6.3 SOAP\n6.4 WSDL\n6.5 UDDI\n7 Camada de Aplicação no TCP/IP\n7.1 Visão geral\n7.2 Desenvolvimento de protocolos para camada de aplicação\n7.3 DNS\n7.4 HTTP\n7.5 Projeto de Protocolos baseados em TCP e UDP\n8 Camada de Transporte no TCP/IP\n8.1 Principais serviços e funcionalidades\n8.2 Protocolo UDP\n8.3 Protocolo TCP\n9 Camada de Rede no TCP/IP\n9.1 Principais serviços e funcionalidades\n9.2 Introdução ao Roteamento IP\n9.3 Endereçamento IP\n9.4 Endereços privados\n9.5 NAT\n9.6 ARP\n9.7 DHCP', 'A disciplina de Redes e Sistemas Distribuídos possui uma relação direta com as seguintes disciplinas na área de Ciência da Computação:\n1. Segurança – permite a compreensão ampla da métodos de diversos ataques computacionais aplicados em ambientes de rede', 141, 'Somente bibliografia básica e complementar.'),
(372, 'Média será calculada da seguinte maneira:\nMédia = 10% Seminarios + 40% Trabalhos + 50% Provas', 'Prova 1: 21/05/2013\nProva 2: 9/07/2013\n', '1. Compreender o funcionamento básico de redes de comunicação e de computadores.\n2. Compreender e saber os serviços suportados por redes de computadores, bem como o\nfuncionamento de protocolos de comunicação.\n3. Adquirir senso crítico com relação à influência dos protocolos e arquiteturas de redes de computadores no desenvolvimento de sistemas distribuídos.\n4. Saber caracterizar criticamente um sistema distribuído em relação às propriedades de\ntransparência, abertura, escalabilidade e flexibilidade, assim como identificar fatores de projeto dos sistemas que influenciam cada uma dessas propriedades.\n5. Compreender e saber aplicar os modelos de programação de objetos distribuídos e de web services a problemas práticos.', '1 Introdução a redes de comunicação e computadores\n1.1 Conceitos básicos\n1.2 Roteamento de Pacotes\n1.3 Atrasos na Comunicação\n2 Modelos de Camadas e Arquiteturas de Redes\n2.1 Modelo OSI\n2.2 Modelo TCP/IP\n3 Programação com Sockets\n3.1 Modelo de Comunicação por Sockets\n3.2 Sockets TCP\n3.3 Sockets UDP\n4 Introdução aos Sistemas Distribuídos\n4.1 Caracterização de de sistemas distribuídos (transparência, abertura, escalabilidade e outros);\n4.2 Modelo de sistema;\n4.3 Arquitetura de aplicações distribuídas\n4.4 Comunicação interprocessos.\n5 Sistemas de Objetos Distribuídos\n5.1 RPC e IDL\n5.2 Modelo de objetos distribuídos\n5.3 Invocação remota de objetos\n5.4 Java RMI\n5.5 Coleta de lixo em objetos distribuídos\n5.6 Serviços de nome\n5.7 Plataforma de middleware para objetos distribuídos.\n6 Arquiteturas Orientadas a Serviços\n6.1 Modelo de arquiteturas orientadas a serviços\n6.2 Web services\n6.3 SOAP\n6.4 WSDL\n6.5 UDDI\n7 Camada de Aplicação no TCP/IP\n7.1 Visão geral\n7.2 Desenvolvimento de protocolos para camada de aplicação\n7.3 DNS\n7.4 HTTP\n7.5 Projeto de Protocolos baseados em TCP e UDP\n8 Camada de Transporte no TCP/IP\n8.1 Principais serviços e funcionalidades\n8.2 Protocolo UDP\n8.3 Protocolo TCP\n9 Camada de Rede no TCP/IP\n9.1 Principais serviços e funcionalidades\n9.2 Introdução ao Roteamento IP\n9.3 Endereçamento IP\n9.4 Endereços privados\n9.5 NAT\n9.6 ARP\n9.7 DHCP', 'A disciplina de Redes e Sistemas Distribuídos possui uma relação direta com as seguintes disciplinas na área de Ciência da Computação:\n1. Segurança – permite a compreensão ampla da métodos de diversos ataques computacionais aplicados em ambientes de rede', 142, 'Somente bibliografia básica e complementar.'),
(373, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\nNF = 0,3*NP1 + 0,3*NP2 + 0,4*NT\nonde:\nNP1 representa a nota da primeira prova escrita (P1);\nNP2 representa a nota da segunda prova escrita (P2);\nNT representa a nota do trabalho.\n', '\\N', '- Apresentar os principais tipos de gerência de configuração;\n- Estudar as principais técnicas de gerência de configuração;\n- Enumerar as principais ferramentas de gerência de configuração.\n- Apresentar exemplos de politicas de gerência de configuração.', '\\N', 'Os conceitos desenvolvidos nesta disciplina são básicos para várias outras disciplinas do curso, uma vez que a gerência de configuração de software garante a integridade das informações desenvolvidas durante a construção de um sistema de informação!', 151, '\\N'),
(374, '2 Provas (P1 e P2)\n2 Exercícios (EXC e EXL)\n\nNF =0.3 x P1 + 0.4 x P2 + 0.2 x  EXC + 0.1 x EXL, onde EXC são trabalhos  e exercícios extraclasse, e EXL são exercícios de laboratório.', '03/06/2013 (Segunda) P1\n29/07/2013 (Segunda) P2', 'Capacitar o aluno a: Reconhecer, entender, e comparar as diferentes definições existentes do termo arquitetura de software; Conhecer a definição de Arquitetura de Software pelo Padrão ISO/IEEE 1471-2000; Conhecer os componentes de construção de um software e sua relação com outros softwares; Conhecer os modelos de arquiteturas;\nDesenvolver softwares aplicando o estilo apropriado; Desenvolver softwares aplicando os atributos de qualidade de software; Entender o conceito de transações distribuídas e conhecer os protocolos para coordenação de transações distribuídas (XA, MTC, etc);\nConhecer a linguagem de marcação XML, suas derivações e aplicações em arquiteturas de softwares; Conhecer os modelos de softwares em camadas e suas particularidades;\nDesenvolvedor aplicativos com utilização de servidores de aplicação; Conhecer os modelos e notações utilizadas para especificar Processos de Arquitetura de Software; Conhecer os conceitos de Arquiteturas Dirigidas por Modelos (MDA); Especificar arquiteturas de softwares conforme o domínio; Integrar softwares desenvolvidos em tecnologias diferentes; Conhecer protocolos para comunicação de softwares; Conhecer e desenvolver softwares baseado em arquitetura orientada a serviços (SOA); Conhecer e desenvolver aplicativos baseados em eventos, orientado a mensagens e utilizando MVC; Entender os conceitos de SOAP e WSDL; Desenvolver aplicativos com uso de Web Services; Conhecer e desenvolver aplicativos com o uso de ESB (Enterprise Service Bus), e outros. ', 'Introdução à Arquitetura de Software; Estilos Arquiteturais; Atributos de Qualidade de Software; Modelo de Software em Camadas; Tecnologias para Middleware; Requisitos Arquiteturais; Análise Arquitetural; Arquiteturas de Domínio Específico; Introdução ao XML; Model-View-Controller (MVC); Arquitetura Dirigida por Modelos (MDA); Webservices; Arquitetura Orientada a Serviços (SOA) e Barramento de Serviços Empresariais (ESB).', 'Requisitos de Software; Construção de Software; Projeto Detalhado de Software; Verificação e Validação; Manutenção de Software e Qualidade de Software.', 149, '- EJB 3 in Action Debu Panda et al, Manning Publications, 2008\n- Enterprise JavaBeans 3.0 Bill Burke & Richard Monson-Haefel, O''Reilly, 2006\n- Enterprise JavaBeans Technology: http://java.sun.com/products/ejb/\n- EJB 3 em Ação, Reza Rahman; Debu Panda; Lane, Derek, Alta Books, 2009.\n- Enterprise Java Beans 3.0, Bill Burke & Richard Monson-Haefel, Pearson, 2007.\n- EJB 3 Profissional - Java Persistence API, Merrick Schincariol, Ciência Moderna, 2008.'),
(375, 'A1 – Primeira avaliação individual – Valor: 10,0 pontos\nA2 – Segunda avaliação individual – Valor: 10,0 pontos\nT – Trabalho e Exercícios Individual e em Grupo – Valor: 10,00 pontos\nP – Projeto de Software – Valor: 10,00 pontos\n\n\nNota Final: ( ( (A1 + A2)', 'A1 - 10/05/2013			\nA2 - 04/07/2013\nAS - 26/07/2013		', 'Conceituar Manutenção de Software.\nConhecer os tipos e o ciclo de vida da Manutenção de Software.\nConfigurações e métricas: Norma ISO 14764.\n', '1.	Introdução \n1.1.	Conceito de Manutenção de Software \n1.2.	Tipos de Manutenção de Software \n1.3.	Manutenção de Software no Contexto dos Processos de Software \n2.	Manutenibilidade \n3.	Sistemas Legados \n4.	Reengenharia \n5.	Engenharia reversa\n6.	Processos \n7.	Configurações e Métricas \n8.	Norma ISO 14764\n9.	Refatoração\n10.	Testes de Software \nEstudos de Caso em Manutenção de Software \n', 'A manutenção de software pode ser considerada processo crucial na qualidade de software, além de ser fator integrante de todo o projeto de engenharia de software.', 153, 'x'),
(376, 'N1 - Atividade 1, com peso 2 + Prova Individual com peso 8 \nN2 – Atividade 2, com peso 2+ Prova Individual com peso 8 \nMédia Final: (N1 + N2)/2\n\nO aluno será considerado aprovado se obtiver MF ≥ 5,0 e no mínimo 75% de presença da carga horária total da di', '14/10/2013 - Prova Individual I\n16/12/2013 - Prova Individual II', 'A) Evidenciar a função da contabilidade, seus usuários e campo de aplicação;\nB) Posicionar os discentes no ambiente contábil, fortalecendo os conceitos sobre a representação contábil na empresa;\nC) Apresentar as demonstrações contábeis obrigatórias e sua importância na gestão das empresas.', 'I. Aspectos Fundamentais da Contabilidade\n   a) Conceitos e definições: contabilidade como planejamento e controle;\n   b) Campo de aplicação, finalidades e objetivos;\n   c) Usuários da informação contábil.\n\nII. Patrimônio\n   a) Definições e características da situação patrimonial;\n   b) Ativo e Passivo: conceitos, classificação, avaliação e mensuração;\n   c) Usuários da informação contábil.\n\nIII. O Estudo das Contas\n   a) Conceitos e características das contas patrimoniais e de resultados;\n   b) Estruturação de um plano de contas e os tipos aplicáveis nas empresas. Função e funcionamento das contas.\n   c) Agrupamento de contas do Balanço Patrimonial e da Demonstração de Resultado do Exercício.\n\nIV. Processo de Escrituração e Regime Contábil\n   a) Livros Fiscais e contábeis: obrigatórios e auxiliares;\n   b) Partidas dobradas: processo de contabilização, lançamentos contábeis, métodos e processo.\n   c) Regime de Caixa e de Competência;\n   d) Encerramento das contas de receitas e despesas.\n\nV. Demonstrações Contábeis\n   a) Balancete de verificação: processo de elaboração;\n   b) Balanço patrimonial: composição, estrutura e levantamento do demonstrativo;\n   c) Demonstração do resultado do exercício: classificação de receitas e despesas, processo de apuração do resultado e estruturação do demonstrativo.\n', 'Empreendedorismo - Planejamento Estratégico - Teoria Geral da Administração', 183, 'MARION, José Carlos. Contabilidade empresarial.12ª ed. Atlas. São Paulo, 2006. \n'),
(377, 'A avaliação final será dada a partir de trabalhos e provas e a nota final seguirá a seguinte fórmula:\n\nNF = 0,5 * TD + 0,3 * SM + 0.2 * AC\nTD = 0,3*(Entregas Semanais) + 0,2*(Primeira Entrega) + 0,2 * (Segunda Entrega) + 0,3*(Apresentação do Projeto)\n\n\nNF', 'A avaliação de conteúdo será realizada aos 26 dias do mês de julho.\nOs seminários ocorrerão nos dias 07 e 08 de Junho.\nO Trabalho de Desenvolvimento terá avaliação semanal, com dois grandes marcos:\nEntrega dia 07 e 08 de junho, da primeira parte;\nEntrega', 'Estimular a capacidade de abstração de problemas.\nPromover a prática do desenvolvimento de software de forma sistematizada.\nApresentar que possibilitam uma melhor gestão no processo de software.\nIncentivar o trabalho em grupo na solução de problemas de software.\nContribuir para a pesquisa e aprendizado relacionadas a Engenharia de Software.', 'Introdução a Engenharia de Software\n	- Conceitos de Engenharia de Software\n	- Históricos e Necessidades da Engenharia de Software\n	- Conceitos de produto de software e processo de software\n	- Técnicas e Ferramentas Case\n	- Engenharia de Sistemas\nGerência de Projetos de Software\n	- Planejamento do Projeto de Software\n	- Medidas de Qualidade\n	- Gestão de Riscos\n	- Acompanhamento de Projetos\nControle de Qualidade\n	- Modelos de Qualidade\nGerencia de Configuração\nProjeto de Software\n	- Levantamento de Requisitos\n	- Documentação\nTópicos avançados em engenharia de Software\n	- Métodos Formais e Reengenharia', 'Algoritmos e Estruturas de Dados.\n', 173, '.'),
(378, 'A avaliação será obtida a partir da composição das notas das provas, da apresentação de seminários e do trabalho de conclusão da disciplina, conforme tabela abaixo.\nN1 - Apresentação de trabalhos, participação em sala, apresentação de seminários, discussã', 'Entrega do artigo dia 9 de julho.', 'Mostrar a importância da administração de pessoas para o bom desempenho das organizações;\nApresentar as funções da área de Recursos Humanos;\nDiscutir aspectos do processo administrativo: planejar, organizar, dirigir e controlar os recursos humanos;\nDiscutir o papel social das organizações;\nDiscutir a importância do profissional de TI na Gestão de Recursos Humanos\n', 'Gestão de pessoas: \n	Recrutamento e Seleção; \n	Cargos e Salários; \nTreinamento e Desenvolvimento (T&D); \nPlano de Carreira; \n	Avaliação de Desempenho; \n	Benefícios Sociais; \n	Saúde e Segurança no Trabalho;\n	Perspectivas e tendências da gestão de pessoas', 'Na elaboração de um artigo científico relacionando tópicos da Gestão de Pessoas com as práticas de desenvolvimento de programas para atender necessidades da Gestão de Pessoas.', 185, 'CHIAVENATO, Idalberto. Gestão de Pessoas: o novo papel de recursos humanos nas organizações. 3ª edição. Rio de Janeiro. Elsevier, 2008.'),
(379, '1º bimestre\n1,0 (um) ponto de Resenha Crítica\n2,0 (dois) pontos de Dinâmica de Grupo\n7,0 (sete) pontos de Avaliação Individual\n\n2º bimestre\n1,0 (um) ponto de Resenha Crítica\n2,0 (dois) pontos de Trabalho em Grupo\n7,0 (sete) pontos de Avaliação Individual\n', '\\N', 'Fornecer elementos para o aperfeiçoamento da consciência crítica relacionada aos problemas organizacionais.\nDesenvolver a percepção sobre a influência dos modelos de gestão nas organizações contemporâneas.', 'Unidade I – Administração, administradores e organizações – conceitos e princípios.\nUnidade II – Áreas funcionais e ambiente organizacional: função Produção/Operação; função Financeira; função Marketing e Vendas; função Recursos Humanos/Pessoas; função Pesquisa e Desenvolvimento (P&D)/Inovação.\nUnidade III – Processo administrativo: planejamento; organização, direção e controle.\nUnidade IV – A evolução das teorias da administração: teoria clássica; abordagem humanística; abordagem sistêmica; abordagem contingencial.\nUnidade V – Tendências e perspectivas na Administração.', '\\N', 184, ' MOTTA, F. C. P.; VASCONCELOS, I. F. G. Teoria Geral da Administração. 3 ed. São Paulo: Thomson Learning, 2006.'),
(380, 'Avaliação 1 – Valor: 10,0 pontos\nAvaliação 1 – Valor: 10,0 pontos\nT – Teste – Valor: 10,0 pontos\n\nTestes1  : (T1.1 + T1.2) / 2\nP1 = (Avaliacao1 * 0.9)  + (Testes1 * 0.1)\n\nTestes2  : (T2.1 + T2.2) / 2\nP2 = (Avaliacao2 * 0.9)  + (Testes2 * 0.1)', 'Avaliação 1 = 28/05/2013\nAvaliação 2 = 26/07/2013\n', 'Capacitar o desenvolvimento de  programas modulares e de programas recursivos. Capacitar aos alunos quanto à compreensão e utilização  dos tipos mais comuns de passagens de parâmetros e de mecanismos de alocação de memória. Capacitar o aluno a utilizar ferramentas de apoio a programação como depuradores de código, gerenciadores de compilação, otimizadores de código. Ensinar os tipos básicos de acesso a arquivos e os comandos de uma linguagem de programação que possibilitam ler, gravar, e adicionar dados em arquivos, segundo as formas de acesso sequencial e indexada. Desenvolver a capacidade de utilizar sintaxe própria de linguagens de programação que permitam a criação de novos tipos de dados.', 'Estruturas de dados compostas homogêneas: vetores e matrizes.\n	Estruturas de dados heterogêneas: registros (structs) e registros variantes (union)\n	Modularização\n	Funções;\n	Escopo;\n	Passagens de parâmetros;\n	Retorno de função;\n	Recursividade\n	Cadeias de caracteres – implementação e funções para manipulação  de cadeias de   caracteres;\n	Pesquisa binária\n	O Tipo ponteiro\n	Alocação e liberação dinâmica de memória;\n	Listas ligadas por ponteiros: filas, pilhas;\n	Arquivos\n	Sequenciais;\n	Arquivos de texto;\n	Arquivos binários;\n	Arquivos indexados;\n	Ferramentas de Programação\n	Make\n	Depuradores\n	Pré-processado', 'O aluno deve aplicar e expandir os conhecimentos adquiridos na disciplina Programação de Computadores I. Os conceitos e habilidades de programação desenvolvidos nesta disciplina são básicos para várias outras disciplinas do curso, tais como: Estruturas de', 187, 'FEOFILOFF, Paulo. Algoritmos em Linguagem C,  Ed. Elsevier, 2009.'),
(381, 'Avaliação 1 – Valor: 10,0 pontos\nAvaliação 1 – Valor: 10,0 pontos\nT – Teste – Valor: 10,0 pontos\n\nTestes1  : (T1.1 + T1.2) / 2\nP1 = (Avaliacao1 * 0.9)  + (Testes1 * 0.1)\n\nTestes2  : (T2.1 + T2.2) / 2\nP2 = (Avaliacao2 * 0.9)  + (Testes2 * 0.1)\n\nNota final', 'Avaliação 1 = 03/06/2013\nAvaliação 2 = 24/07/2013', 'Despertar nos alunos a capacidade de resolução de problemas.', 'Entrega do conteúdo da disciplina e apresentação.\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; Desenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; Desenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação\nExpressões aritméticas e lógicas; estruturas de decisão\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação\nEstruturas de controle; estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação', '￼￼O aluno deve aplicar os conhecimentos de lógica de programação em outras disciplinas como programação imperativa.', 186, '-'),
(382, 'Prova 1 : 30% \nProva 2 : 50%\nProva 3:  20%\n\nNota final = P1 * 0,3 + P2 * 0,5 + P3 * 0,2', 'Data da realização das provas\nP1 = 30/09/2013\nP2 = 22/10/2013\nP3 = 03/12/2013', 'Despertar nos alunos a capacidade de resolução de problemas.', 'Entrega do conteúdo da disciplina e apresentação.\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; Desenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação\nLógica de programação; constantes; tipos de dados primitivos; variáveis; atribuição; Desenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação\nExpressões aritméticas e lógicas; estruturas de decisão\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação\nEstruturas de controle; estruturas de dados homogêneas e heterogêneas: vetores (arrays) e matrizes\nDesenvolvimento de pequenos programas, Transcrição de algoritmos para uma linguagem de programação', '￼￼O aluno deve aplicar os conhecimentos de lógica de programação em outras disciplinas, como programação imperativa.', 115, '.'),
(383, 'A avaliação da aprendizagem será feita por: (i) 2 (duas) Avaliações Teóricas; e (ii) Exercícios e trabalhos.\nAs avaliações teóricas serão aplicadas em sala de aula, sobre o conteúdo explorado durante o curso, em data previamente estabelecida.\nOs exercício', 'Data da realização das avaliações teóricas:\nAT1 – 16/Maio/2013\nAT2 – 11/Julho/2013', 'Introduzir métodos de ordenação e de busca, visando à construção de soluções usando os\nmétodos estudados. Implementar busca e ordenação em arquivos. Estudar a aplicação de funções de transformação na busca de dados. Entender o tratamento de colisões em  mecanismos de hashing. Investigar estruturas de árvores e várias de suas implementações.', 'Noções de complexidade de algoritmos.\nMétodos de ordenação: seleção, troca, distribuição, inserção, intercalação e cálculo de endereços.\nPesquisa de dados: sequencial, binária, hashing,\nÁrvores de pesquisa, árvores binárias de pesquisa, árvores AVL, árvores Patrícia, B- Trees.\nOrganização de arquivos.', 'Estruturas de Dados 1 e Banco de Dados 1.', 188, 'N. ZIVIANI, Projeto de Algoritmos com Implementações em JAVA e C++, Thomsom, 2007.'),
(384, '2 provas (P1 e P2)\n1 trabalho de implementação (T)\n\nNF = 0.6 x (P1+P2)/2 + 0.4 x T', 'P1: 13 de maio de 2013 (segunda)\nP2: 8 de julho de 2013 (segunda)', 'Ao final do curso, o aluno deverá ser capaz de compreender e implementar os principais algoritmos utilizados para gerência de processos e páginas em sistemas operacionais, assim como compreender a interrelação e interdependência dos componentes necessários para construção de um sistema operacional.', '1. Introdução aos Sistemas Operacionais\n2. Gerência de Processos\n3. Gerência de Memória\n4. Entrada/Saída\n5. Sistemas de Arquivos', 'O aluno deve aplicar os conhecimentos adquiridos através das disciplinas: Algoritmos e Programação 1 e 2.', 189, '.SILBERSCHATZ, Avi & GALVIN, Peter. Sistemas Operacionais Conceitos. Prentice-Hall. 2005'),
(385, 'A avaliação será realizada mediante de provas e atividades/exercícios/trabalhos. A média do discente resultará da seguinte fórmula:\nNF: (PT1 + PT2)*0,3 + TP*0,3 + LE* 0,1\nPT1: Prova teórica 1\nPT2: Prova teórica 2\nTP: Trabalho Prático\nLE: Lista de Exercíci', 'PT1: 20/05/2013\nPT2: 27/06/2013\nTP: 18/07/2013', 'Possibilitar os discentes a serem capazes de utilizar a programação modular, conhecendo algumas das principais técnicas utilizadas na implementação de estruturas de dados e algoritmos de ordenação em memória principal. Eles ainda deverão ser\ncapazes de efetuar análises simples de complexidade de algoritmos.', 'Introdução a Estrutura de Dados\n	- Conceitos de Programação Estruturada\n	- Tipos primitivos, tipos abstratos de dados\n	- Revisão de comandos, linguagem c\n	- Introdução a vetores e matrizes\n	- Características de Alocação Sequencial e Ligada\nListas lineares\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada\nPilhas\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada\nFilas\n	- Conceitos\n	- Operações\n	- Operações em alocação sequencial e ligada\nGrafos\n	- Conceitos\n	- Operações\n	- Representação matricial\n	- Operações em alocação sequencial e ligada\nTópicos avançados\n	- Listas Circulares e Duplamente Ligadas\n	- Estrutura em árvore', 'Algoritmos e Estruturas de Dados', 193, 'W. Celes, R. Cerqueira, J. L. Rangel. Introdução a Estruturas de Dados - com técnicas de programação em C. Ed. Campus - ISBN 85-352-1228-0.'),
(386, 'A avaliação final será dada a partir de trabalhos e provas e a nota final seguirá a seguinte fórmula:\n\nNF = 0,3 * TD + 0,2 * SM + 0.5 * AC\nAC = 0,1* A1 + 0,2*A2 + 0,2*A3\n\nNF = Nota Final\nTD = Trabalho de desenvolvimento de Software\nSM = Seminários Multi-t', 'A avaliação de conteúdo será realizada aos 26 dias do mês de julho.\nOs seminários ocorrerão nos dias 07 e 08 de Junho.\nO Trabalho de Desenvolvimento terá avaliação semanal, com dois grandes marcos:\nEntrega dia 07 e 08 de junho, da primeira parte;\nEntrega', 'Estimular a capacidade de abstração de problemas.\nPromover a prática do desenvolvimento de software de forma sistematizada.\nApresentar que possibilitam uma melhor gestão no processo de software.\nIncentivar o trabalho em grupo na solução de problemas de software.\nContribuir para a pesquisa e aprendizado relacionadas a Engenharia de Software.', 'Introdução a Engenharia de Software\n	- Conceitos de Engenharia de Software\n	- Históricos e Necessidades da Engenharia de Software\n	- Conceitos de produto de software e processo de software\n	- Técnicas e Ferramentas Case\n	- Engenharia de Sistemas\nGerência de Projetos de Software\n	- Planejamento do Projeto de Software\n	- Medidas de Qualidade\n	- Gestão de Riscos\n	- Acompanhamento de Projetos\nControle de Qualidade\n	- Modelos de Qualidade\nGerencia de Configuração\nProjeto de Software\n	- Levantamento de Requisitos\n	- Documentação\nTópicos avançados em engenharia de Software\n	- Métodos Formais e Reengenharia', 'Algoritmos e Estruturas de Dados.', 195, '.'),
(387, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por duas provas escritas individuais (graus N1 e N2; 10,0 pontos cada uma). A nota final será calculada como segue: ￼NF=0,5*P1+0,5*P2.\n\nCada prova', 'P1 - 29/05/2013\nP2 - 24/07/2013', '• Aprender os fundamentos da teoria de autômatos e linguagens formais, e como eles se relacionam aos princípios da ciência da computação.\n• Conhecer e compreender o relacionamento entre essa teoria e as disciplinas de natureza mais prática.\n• Aprender a distinguir os diversos tipos de linguagens formais e seus reconhecedores.\n• Ser capaz de projetar linguagens e gramáticas para a representação ou formalização de\nprocessos.\n• Ser capaz de especificar reconhecedores para linguagens que se apresentem.\n• Ter consciência da existência de problemas para os quais não existe solução computacional.\n• Ter consciência da dinâmica subjacente à disciplina, em termos dos novos autômatos e\nlinguagens que continuam surgindo.\n• Ter consciência da necessidade que a disciplina impõe de se proceder a provas formais, a fim de obter conhecimento confiável em seu domínio.', '1. Introdução\n	1.1. Conceitos Preliminares \n	1.2. Alfabetos e Linguagens \n    	1.3. Linguagens e Máquinas\n\n2. Autômatos Finitos\n	2.1. Autômatos Finitos Determinísticos.\n	2.2. Autômatos Finitos Não - Determinísticos\n	2.3. Autômatos Finitos Não-Determinísticos com movimentos vazios \n	2.4. Minimização de Autômatos Finitos\n          2.5. Equivalência entre Autômatos  \n\n3. Linguagens Regulares\n	3.1. Expressões Regulares\n	3.2. Autômatos Finitos e Expressões Regulares. \n	3.3. Propriedades das Linguagens Regulares   \n\n4. Linguagens Livres de Contexto Gramáticas Livres de Contexto\n         4.1. Árvores de análise sintática \n        4.2. Ambigüidade em gramáticas e linguagens\n         4.3. Propriedades das Linguagens Livres de Contexto \n        4.4. Formas Normais \n\n5. Máquinas de Turing \n	5.1. Definição formal e exemplos \n        5.2.Técnicas de programação, Extensões das máquinas de Turing \n        5.3. Reconhecimento de Linguagens \n        5.4. Hierarquia de Chomsky ', 'Linguagens Formais constitui o conhecimento-base para a construção e teoria de compiladores. Além disso, reconhecedores de linguagens são utilizados em qualquer tipo de software que realize reconhecimento de cadeias, como comandos de Sistemas Operacionais', 194, 'HOPCROFT, John E.; ULLMAN, Jeffrey D.; MOTWANI, Rajeev; Introdução à Teoria de Autômatos, Linguagens e Computação; tradução da 2a edição original; Rio de Janeiro: Campus; 2003.'),
(388, 'A avaliação da disciplina será realizada mediante duas provas escritas (P1, P2), e um trabalho\n(T1), podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa\ne/ou questões sobre trabalhos realizados em aula.\nO trabalh', 'P1: 15/05/2013\nP2: 31/07/2013\nT1: 27/07/2013', 'Estudar as técnicas envolvidas na análise léxica de uma linguagem de programação: modelagem de análise léxica por autômatos finitos, especificação de tokens por  expressões regulares, obtenção automática de analisadores léxicos a partir de expressões regulares. Estudar gramáticas livres de contextos apropriadas para a análise sintática. Estudar o processo de geração  automática de um analisador sintático a partir de uma gramática livre de contexto. Estudar análise semântica dirigida por sintaxe através dos formalismos de tradução dirigida por sintaxe e esquemas de tradução. Estudar os tipos de tradução dirigidas por sintaxes apropriados para ao tipo de análise\nsintática utilizado. Estudar implementações de tabelas de símbolos, geração de árvores sintáticas abstratas. Implementar os analisadores léxico, sintático e semântico e a geração de código para uma linguagem de programação.', 'Introdução à compilação.\nFases da compilação.\nAmbigüidade.\nRelações sobre gramáticas.\nAnálise léxica.\nTabelas de símbolos.\nAnálise sintática ascendente e descendente.\nAnálise semântica e geração de código para uma máquina virtual.\nIntrodução à otimização de código.', 'O aluno deve aplicar os conhecimentos adquiridos nas disciplinas: Linguagens de Programação, Linguagens Formais e  Autômatos, Arquitetura de Computadores (linguagens de montagem), Programação de Computadores I, Programação de Computadores II, Estruturas d', 196, 'PATTERSON, D. A. - Organização e Projeto de Computadores A Interface Hardware/Software – 3º Ed, 2005.\n\n'),
(389, '2 Provas (P1 e P2)\n2 Exercícios (EX1 e EX2)\n\nNF = 0.6 x MP + 0.4 x ME, onde MP é a média das provas e ME é a média dos exercícios.', '18/05/2013 (Sáb) P1\n18/07/2013 (Qui) P2', 'Ao final do curso, o aluno deverá:\n1. Saber caracterizar criticamente um sistema distribuído em relação às propriedades de\ntransparência, abertura, escalabilidade e flexibilidade, assim como identificar fatores de projeto dos sistemas que influenciam cada uma dessas propriedades.\n2. Compreender e saber aplicar os modelos de programação de objetos distribuídos e de web services a problemas práticos.\n3. Compreender os detalhes de funcionamento, projeto e implementação, dos sistemas de objetos distribuídos, serviços web, serviços e paradigmas para comunicação indireta.\n4. Compreender em detalhes os problemas de manutenção de estado global e tempo, coordenação e acordo e gerenciamento de transações em sistemas distribuídos. Compreender os principais algoritmos aplicados às soluções desses problemas.', '1. Caracterização e Modelos de Sistema para SD\n2. Comunicação Interprocessos\n3. Invocação Remota e Sistemas de Objetos Distribuídos\n4. Serviços Web\n5. Comunicação Indireta\n6. Serviços de Nomes\n7. Tempo e Estado Global\n8. Coordenação e Acordo\n9. Transações e Controle de Concorrência', 'A disciplina é fortemente dependente dos conteúdos apresentados na disciplina de Redes de Computadores. Os problemas discutidos da disciplina só podem ser adequadamente\ncompreendidos se feitos à luz da compreensão da complexidade de uma rede de computador', 191, '.'),
(390, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\n\nNF = (2 * NP1 + 3 * NP2 + 4 * NP3 + 1 * NT)/10;\n\nonde:\nNP1 representa a nota da primeira prova escrita ou prática, com peso 2;\nNP2, a nota da segunda prova escrita ou prática, com peso 3;', '- P1: 16/05/2013\n- P2: 13/06/2013\n- P3: 18/07/2013', 'Apresentar o estudo da lógica de programação e a construção e implementação de algoritmos coerentes e válidos.\n· Habilitar o estudante para o desenvolvimento de algoritmos a partir da descrição textual de problemas.\n· Capacitar o estudante a desenvolver algoritmos específicos para a manipulação de problemas numéricos e não-numéricos.\n· Habilitar o estudante para a implementação de algoritmos em uma linguagem de programação de alto nível.', '\n• Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas e\nrelacionamento com outras disciplinas do curso.\n• Conceitos Básicos de Computação. Histórico da Computação. Hardware. Software. Sistemas Operacionais, Linguagens de Programação.\n• Noções de Lógica, Lógica de Programação, Algoritmo.\n• Tipos primitivos. Constantes, Variáveis (Formação de Identificadores e Declaração de Variáveis).\n• Expressões (Aritméticas, Lógicas, Relacionais).\n• Comandos (Atribuição, Entrada e Saída, Blocos).\n• Estruturas de Controle Sequencial\n• Seleção (Simples, Composta, Encadeada, Múltipla Escolha)\n• Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)\n• Estruturas de Dados Homogêneas (Vetores e Matrizes)\n• Modularização', 'A disciplina Introdução à Computação permite que o aluno se capacite para o desenvolvimento de algoritmos e sua implementação em uma linguagem de programação de alto nível, visando aplicações futuras em diversos ramos da Física.', 198, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(391, 'A nota final (NF) do aluno na disciplina será obtida pela fórmula:\n\nNF = (2 * NP1 + 3 * NP2 + 4 * NP3 + 1 * NT)/10;\n\nonde:\nNP1 representa a nota da primeira prova escrita ou prática, com peso 2;\nNP2, a nota da segunda prova escrita ou prática, com peso 3;', '- P1: 16/05/2013\n- P2: 13/06/2013\n- P3: 18/07/2013', 'Apresentar o estudo da lógica de programação e a construção e implementação de algoritmos coerentes e válidos.\n· Habilitar o estudante para o desenvolvimento de algoritmos a partir da descrição textual de problemas.\n· Capacitar o estudante a desenvolver algoritmos específicos para a manipulação de problemas numéricos e não-numéricos.\n· Habilitar o estudante para a implementação de algoritmos em uma linguagem de programação de alto nível.', '\n• Apresentação da disciplina, conteúdos, critérios de avaliação, motivação, expectativas e\nrelacionamento com outras disciplinas do curso.\n• Conceitos Básicos de Computação. Histórico da Computação. Hardware. Software. Sistemas Operacionais, Linguagens de Programação.\n• Noções de Lógica, Lógica de Programação, Algoritmo.\n• Tipos primitivos. Constantes, Variáveis (Formação de Identificadores e Declaração de Variáveis).\n• Expressões (Aritméticas, Lógicas, Relacionais).\n• Comandos (Atribuição, Entrada e Saída, Blocos).\n• Estruturas de Controle Sequencial\n• Seleção (Simples, Composta, Encadeada, Múltipla Escolha)\n• Repetição (Com Teste no Início, Com Teste no Final, Com Variável de Controle)\n• Estruturas de Dados Homogêneas (Vetores e Matrizes)\n• Modularização', 'A disciplina Introdução à Computação permite que o aluno se capacite para o desenvolvimento de algoritmos e sua implementação em uma linguagem de programação de alto nível, visando aplicações futuras em diversos ramos da Física.', 197, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.');
INSERT INTO `plano` (`id`, `criterioavaliacao`, `datarealizacaoprovas`, `objetivosespecificos`, `programa`, `relacaooutrasdisciplinas`, `turma_id`, `bibliografiasugerida`) VALUES
(392, 'A avaliação da disciplina será realizada mediante três provas escritas (P1, P2 e P3), e diversos trabalhos, cuja média é T, podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa ou questões sobre trabalhos realizad', 'P1: 01/10/2013\nP2: 05/11/2013\nP3: 03/12/2013', 'Elaborar algoritmos a partir da descrição textual de pequenos problemas; Selecionar estruturas de dados simples para a implementação dos algoritmos; Desenvolver programas em uma linguagem de programação procedural de alto nível.', 'Apresentação da Disciplina: Identificação; Ementa; Conteúdo Programático; Objetivos; Procedimentos Didáticos; Avaliação da Aprendizagem; Bibliografias.\nVisão sobre algoritmos e linguagens de programação.\nElementos Fundamentais da Construção de Algoritmos:  Tipo de Dados; Formação de Identificadores; Constantes; Variáveis; Comando de Atribuição; Comandos de Entrada e Saída. \nExpressões e Operadores: Expressões Aritméticas; Expressões Lógicas.\nEstrutura Sequencial.\nEstruturas de Seleção: Simples; Compostas; Encadeada Heterogênea; Encadeada Homogênea; Múltipla Escolha.\nEstruturas de Repetição: Com Teste no Início; Com Teste no Final; Com Variável de Controle; Encadeada.\nEstruturas de Dados Simples: Variáveis Compostas Homogêneas (Vetores e Matrizes).\nModularização e Funções.\nDesenvolvimento e Implementação de Algoritmos em Linguagem de Programação.', 'Algoritmos e Programação 2', 199, '.'),
(393, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\nE – Exercícios – Valor: 10,0 pontos\nP1 – Prova prática individual – Valor: 10,0 pontos\nP2 – Prova prática individual – Valor: 10,0 pontos\nP3 –', '• P1 - 15/04/2013\n• P2 - 20/05/2013\n• P3 - 27/06/2013', '•  Fornecer ao aluno elementos básicos sobre computação, em particular o estudo de algoritmos e\nimplementação de programas. Ao final do curso o aluno deve ser capaz de:\n•  Compreender a estrutura lógica de uma linguagem de programação;\n•  Elaborar algoritmos a partir da descrição textual de pequenos problemas;\n•  Desenvolver programas em uma linguagem de programação de alto nível;\n•  Selecionar estruturas de dados simples para a implementação dos programas;\n•  Elaborar algoritmos específicos para a solução de problemas numéricos e não numéricos;\n•  Utilizar ferramentas para o desenvolvimento de programas.', '1. Introdução: Apresentação da disciplina, objetivos, ementa, conteúdo programático, bibliografia, avaliações.\n2. Conceitos Básicos da Computação e lógica de programação.\n3. Tipos primitivos, contantes e variáveis.\n4. Expressões aritméticas e lógicas\n5. Comandos: atribuição, entrada e saída.\n6. Estruturas de controle: Sequencial, seleção e repetição.\n7. Estrutura de dados homogêneas Unidimensionais e Multidimensionais.\n8. Funções', 'A disciplina de Introdução à Computação fornece os elementos básicos sobre computação e implementação de programas.', 202, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(394, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n	P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova escrita individual – Valor: 10,0 pontos\n	P3 – Prova escrita individual – Valor', 'P1: 11/09/2013 (4ª-feira)\nP2: 18/10/2013 (6ª-feira)\nP3: 29/11/2013 (2ª-feira)\n', 'Exercitar a prática de projeto, implementação e utilização de aplicações de Bancos de Dados.\nHabilitar o aluno a propor soluções computacionais para problemas de relativa complexidade na área de Banco de Dados.\nExercitar a capacidade de raciocínio lógico.\nExercitar a capacidade de expressão oral e escrita.', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados\n2. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacionais\n- Linguagens para BD relacionais (álgebra relacional)\n- SQL\n3. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML\n4. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 'Estruturas de Dados 2\nBanco de Dados 2', 192, 'COUGO, Paulo, Modelagem Conceitual e Projeto de Banco de Dados, Ed. Campus, Rio de Janeiro, 1997.'),
(395, 'A avaliação da aprendizagem será efetuada considerando exercícios resolvidos em aula,\nexercícios extra-classe e trabalhos. Será realizado trabalho em grupo e/ou individual, cuja\navaliação será parte da nota. Cada prova será realizada considerando todo o c', 'Prova 1: 16/5/2013\nProva 2: 23/07/2013', 'Discutir os principais modelos de Sistemas Distribuídos;\nInvestigar os principais mecanismos de transparência na comunicação distribuída;\nDiscutir os principais conceitos e requisitos para sincronização e coordenação de eventos distribuídos;\nEstudar os conceitos de objetos distribuídos;\nEstudar ferramentas para o desenvolvimento de aplicações distribuídas.', '1. Caracterização de sistemas distribuídos: compartilhamento de recursos; transparências de\ndistribuição; serviços; principais problemas e desafios; exemplos de sistemas distribuídos;\naplicações distribuídas.\n2. Modelos de sistema: arquitetura geral de sistemas distribuídos (middleware, cliente-servidor,\npeer-to-peer, agentes móveis); requisitos de projeto (desempenho, qualidade de serviço,\nconfiabilidade, transparência); modelos de interação; modelos de falha; modelos de segurança.\n3. Processos em sistemas distribuídos: comunicação interprocessos (API de sockets,\nrepresentação de dados, protocolo de requisição/resposta); processos clientes e processos\nservidores; uso de threads; código móvel e agentes.\n4. Objetos distribuídos: chamada de procedimentos remotos (RPC); modelo de objetos\ndistribuídos (interfaces, referência de objeto, operações, exceções, chamada de métodos\nremotos); uso e implementação de RMI; plataformas de middleware e processamento\ndistribuído aberto; Java RMI; CORBA; eventos e notificações.\n5. Serviços de nomes e serviços de diretórios: publicação e descoberta de serviços, principais\ntecnologias disponíveis.\n6. Replicação, transações e tolerância a falhas: comunicação confiável; replicação e\nmanutenção de consistência entre réplicas; transações distribuídas; comunicação de grupo.', 'Esta disciplina utiliza conceitos adquiridos nas disciplinas de Arquitetura de Computadores, Sistemas Operacionais e Redes de Computadores. A comunicação entre processos e as arquiteturas distribuídas são soluções para os problemas de disparidades nas arq', 190, 'TANENBAUM, A.S.; STEEN, M. – Sistemas Distribuídos: Princípios e Paradigmas, 2a. Edição. Pearson Education, 2007.'),
(396, 'A avaliação da disciplina será realizada mediante duas provas escritas (P1e P2), e alguns trabalhos, cuja média é T, podendo conter questões discursivas, objetivas de simples e múltipla escolha com justificativa ou questões sobre trabalhos realizados em s', 'P1: 12/06/2013\nP2: 24/07/2013', 'Ao final do curso o aluno deve ser capaz de:\nCompreender as estruturas lógicas para o desenvolvimento de algoritmos;\nElaborar algoritmos a partir da descrição textual de pequenos problemas;\nDesenvolver programas em uma linguagem de programação;\nSelecionar estruturas de dados simples para a construção dos programas;\nElaborar algoritmos específicos para a solução de problemas numéricos e não numéricos.', '1.Conceitos Preliminares\n1.1.Noções de Lógica\n1.2.Lógica de Programação\n2.Expressões e Operadores\n2.1.Expressões Aritméticas\n2.2.Expressões Lógicas\n3.Itens Fundamentais de uma Linguagem de Programação\n3.1.Tipo de Dados\n3.2.Formação de Identificadores\n3.3.Constantes\n3.4.Variáveis\n4.Comandos Básicos\n4.1.Comando de Atribuição\n4.2.Comandos de Entrada e Saída\n4.3.Estrutura Sequencial\n5.Estruturas de Seleção\n5.1.Simples\n5.2.Composta\n5.3.Encadeada\n5.3.1.Heterogênea\n5.3.2.Homogênea\n5.4.Múltipla Escolha\n6.Estrutura de Repetição\n6.1.Com Variável de Controle\n6.2.Com Teste no Início\n6.3.Com Teste no Final\n7.Estrutura de Dados\n7.1.Variáveis Compostas Homogêneas Unidimensionais\n7.2.Variáveis Compostas Homogêneas Multidimensionais\n8.Modularização\n9.Programação em uma linguagem de alto nível', 'A disciplina promove o desenvolvimento do raciocínio lógico e estruturado do aluno, que são aplicados diretamente em disciplinas subsequentes do curso, assim como, Cálculo Numérico e Equações Diferenciais, entre outras.', 203, 'FORBELLONE, A. L. V. e EBERSPACHER, H. F. Lógica de Programação – A Construção de Algoritmos e Estrutura de Dados. 3ª Edição. Prentice Hall. 2005.'),
(397, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n	P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova escrita individual – Valor: 10,0 pontos\n	P3 – Prova escrita individual – Valor', 'P1: 23/05/2013 (5ª-feira)\nP2: 17/06/2013 (2ª-feira)\nP3: 22/07/2013 (2ª-feira)', 'Exercitar a prática de projeto, implementação e utilização de aplicações de Bancos de Dados.\nHabilitar o aluno a propor soluções computacionais para problemas de relativa complexidade na área de Banco de Dados.\nExercitar a capacidade de raciocínio lógico.\nExercitar a capacidade de expressão oral e escrita.', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados\n2. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacionais\n- Linguagens para BD relacionais (álgebra relacional)\n- SQL\n3. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML\n4. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 'Algoritmos', 200, 'COUGO, Paulo, Modelagem Conceitual e Projeto de Banco de Dados, Ed. Campus, Rio de Janeiro, 1997.'),
(398, 'A avaliação da aprendizagem será efetuada considerando a nota final (NF) da disciplina a qual será composta por:\n	P1 – Prova escrita individual – Valor: 10,0 pontos\n	P2 – Prova escrita individual – Valor: 10,0 pontos\n	P3 – Prova escrita individual – Valor', 'P1: 23/05/2013 (5ª-feira)\nP2: 17/06/2013 (2ª-feira)\nP3: 22/07/2013 (2ª-feira)', 'Exercitar a prática de projeto, implementação e utilização de aplicações de Bancos de Dados.\nHabilitar o aluno a propor soluções computacionais para problemas de relativa complexidade na área de Banco de Dados.\nExercitar a capacidade de raciocínio lógico.\nExercitar a capacidade de expressão oral e escrita.', '1. Conceitos fundamentais para o projeto, utilização e implementação de banco de dados\n- Bancos de Dados e usuários de BD\n- Sistemas de Bancos de Dados\n- Modelos de Dados e Esquemas de BD\n- Arquiteturas de Sistemas de Bancos de Dados\n2. O Modelo Relacional\n- Conceitos, fundamentos, restrições de integridade\n- Esquemas de BD relacionais\n- Linguagens para BD relacionais (álgebra relacional)\n- SQL\n3. Modelagem de Dados usando o Modelo E/R\n- O Modelo de Entidades e Relacionamentos\n- Diagrama de Entidades e Relacionamentos\n- Dicionário de Dados\n- Modelo ER estendido e diagrama de classe UML\n4. Projeto de Banco de Dados Relacional\n- mapeamento a partir do modelo ER e EER\n- Dependências funcionais\n- Formas normais e normalização', 'Algoritmos', 201, '.'),
(399, 'Faremos exercícios e avaliações em uma das aulas semanais distribuídas da seguinte forma: Avaliação objetiva individual e Avaliação\nSubjetiva em grupos todas com pontuação. As pontuações serão agrupadas em dois conjuntos de notas:\n\nN1 fechada dia 8 outubr', 'Faremos exercícios e avaliações em UMA DAS AULAS SEMANAIS distribuídas da seguinte forma: Avaliação objetiva individual e Avaliação Subjetiva em grupos todas com pontuação.\n\nCaso o aluno não consiga obter M = 5 ou superior, fará uma avaliação substitutiva', 'Espera-se que os alunos sejam capazes de utilizar os conceitos matemáticos financeiros nas tomadas de decisões, em diversas áreas do\nconhecimento dando prioridade para uma abordagem prática aplicada ao mercado brasileiro.', '1. Conceitos básicos Fluxo de caixa. Juros. O valor do dinheiro no tempo. A Matemática financeira. Moeda estável e Inflação.\n2. Juros simples e compostos. Conceitos de Juros simples e crescimento linear. Juros compostos e crescimento exponencial\n3. Juros simples: fórmulas básicas. Capitalização simples. Desconto racional. Desconto comercial\n4. Juros compostos: capitalização e Desconto Capitalização e desconto racional. Desconto comercial.\n5. Taxas de juros. Taxa efetiva. Taxas proporcionais. Taxas equivalentes. Taxa nominal.\n6. Séria uniforme: prestações iguais. Dado PMT achar FV. Dado FV achar PMT. Dado PMT achar PV. Dado PV achar PMT.\n7. Valor presente liquido e taxa interna de retorno. Valor presente e taxa de desconto. Valor presente liquido e taxa interna de retorno.\n8. Equivalência de fluxos de caixa. Planos equivalentes de financiamento. Pagamento no final. Pagamento periódico de juros.\nPrestações iguais. Sistemas de amortizações constantes.', 'Matemática elementar, cálculo co uma variável real, álgebra linear', 204, 'CRESPO, A. A. Matemática Comercial financeira fácil.\n\nMaterial produzido pelo professor, disponibilizado aos alunos no seu site particular, www.igm.mat.br\n'),
(1000004, NULL, NULL, NULL, NULL, NULL, 91, NULL),
(1000021, 'Critério de avaliação \nA avaliação de aprendizagem será feita utilizando os seguintes itens de avaliação e percentuais:\n\nMF = (0,4 * MT) + (0,6 * MP) onde \n\nMT = Média das notas de trabalhos individuais e em grupo\nMP = Média das provas escritas individuai', '1ª. prova: 04/12/2012\n2ª. prova: 01/03/2013', '1. Fazer com que o aluno entende a aplicação de métodos de desenvolvimento de software dentro do ciclo de vida de software.\n2. Fazer com que o aluno entenda o paradigma orientado a objetos e as principais diferenças em relação ao paradigma de desenvolvimento estruturado.\n3. Habilitar o aluno a entender e aplicar um método de desenvolvimento usando o paradigma orientado a objetos, as ferramentas de modelagem da UML e o ciclo de vida iterativo e incremental.\n4. Mostrar ao aluno as principais diferenças entre os processos mais formais e os processos ágeis para o desenvolvimento de software e a implicação dessas diferenças na aplicação de métodos de desenvolvimento.', 'Unidade I – Paradigmas de Desenvolvimento de Software\n1.	Software, Ciclo de Vida de Software e Processo de Software.\n2.	Engenharia de Software e a visão em camadas: qualidade, processo, métodos, ferramentas e técnicas.\n3.	Engenharia de software e princípios básicos de desenvolvimento de Software.\n4.	Evolução histórica de métodos de desenvolvimento\n5.	Visão geral das diferenças entre Paradigma Estruturado e Paradigma Orientado a Objetos.\n6.	Detalhamento dos conceitos do Paradigma Orientado a Objetos (abstração, encapsulamento, classes, métodos, objetos, herança, polimorfismo, delegação).\n7.	UML como ferramenta para modelagem orientada a objetos.\nProva\nUnidade II – Processo e Método de Desenvolvimento Orientado a Objetos. \n1.	Abordagem iterativa e incremental.\n2.	Etapas e artefatos produzidos.\n3.	Levantamento e Especificação de Requisitos.\n4.	Casos de uso.\n5.	Construção de modelo de análise e de desenho de software.\n6.	Mapeamento de modelo de projeto para implementação.\n7.	Processos Formais x Processos Ágeis\n8.	Práticas ágeis e contexto de sua aplicação.\n9.	Impacto das práticas ágeis nos métodos de desenvolvimento.\n', 'O aluno deve aplicar os conhecimentos adquiridos na disciplina Introdução à Engenharia de Software para entender o contexto em que um método de desenvolvimento de software é aplicado nas organizações, como esse método se encaixa dentro do ciclo de vida de', 1000001, 'Utilizando UML e Padrões - Uma Introdução a Análise e Projeto Orientado a Objetos, Craig Larman, 3ª Edição, Editora Bookman, 2007'),
(1000022, NULL, NULL, NULL, NULL, NULL, 180, NULL),
(1000023, NULL, NULL, NULL, NULL, NULL, 181, NULL),
(1000024, NULL, NULL, NULL, NULL, NULL, 178, NULL);

-- --------------------------------------------------------

--
-- Estrutura da tabela `professor`
--

CREATE TABLE IF NOT EXISTS `professor` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `usuario_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `usuario_id` (`usuario_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1000001 ;

--
-- Extraindo dados da tabela `professor`
--

INSERT INTO `professor` (`id`, `usuario_id`) VALUES
(17, 111),
(47, 112),
(8, 113),
(21, 114),
(5, 115),
(13, 116),
(50, 117),
(29, 118),
(38, 119),
(12, 120),
(39, 121),
(49, 122),
(30, 123),
(10, 128),
(43, 129),
(14, 130),
(27, 131),
(3, 132),
(26, 133),
(34, 134),
(70, 1004),
(67, 1006),
(64, 1007),
(19, 1008),
(53, 1019),
(32, 1021),
(31, 1022),
(1, 1023),
(15, 1024),
(44, 1025),
(54, 1026),
(41, 1028),
(48, 1030),
(73, 1034),
(16, 1039),
(23, 1046),
(37, 1047),
(36, 1048),
(4, 1049),
(74, 1072),
(28, 1079),
(33, 1080),
(42, 1081),
(6, 1082),
(40, 1083),
(45, 1084),
(52, 1086),
(2, 1087),
(46, 1090),
(25, 1091),
(9, 1092),
(78, 1147),
(68, 1403),
(18, 1610),
(7, 1611),
(11, 1613),
(22, 1615),
(1000000, 1788),
(20, 1855),
(59, 1859),
(58, 2182),
(72, 2232),
(71, 2237),
(84, 2285);

-- --------------------------------------------------------

--
-- Estrutura da tabela `reqementa_disciplina`
--

CREATE TABLE IF NOT EXISTS `reqementa_disciplina` (
  `Disciplina_id` int(10) unsigned NOT NULL,
  `Req_Ementa_Requerimento_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Disciplina_id`,`Req_Ementa_Requerimento_id`),
  KEY `Disciplina_has_Req_Ementa_FKIndex1` (`Disciplina_id`),
  KEY `Disciplina_has_Req_Ementa_FKIndex2` (`Req_Ementa_Requerimento_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `reqementa_disciplina`
--

INSERT INTO `reqementa_disciplina` (`Disciplina_id`, `Req_Ementa_Requerimento_id`) VALUES
(35, 1000270),
(35, 1000389),
(36, 1000270),
(36, 1000364),
(36, 1000389),
(37, 1000389),
(39, 1000389),
(91, 1000389),
(132, 1000412);

-- --------------------------------------------------------

--
-- Estrutura da tabela `requerimento`
--

CREATE TABLE IF NOT EXISTS `requerimento` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `usuario_id` int(10) unsigned DEFAULT NULL,
  `data_abertura` datetime DEFAULT NULL,
  `status_req` int(11) NOT NULL,
  `data_fechamento` datetime DEFAULT NULL,
  `justificativa` text COLLATE utf8_unicode_ci,
  `tipo` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `usuario_id` (`usuario_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1000416 ;

--
-- Extraindo dados da tabela `requerimento`
--

INSERT INTO `requerimento` (`id`, `usuario_id`, `data_abertura`, `status_req`, `data_fechamento`, `justificativa`, `tipo`) VALUES
(1000249, 2182, '2013-11-26 11:17:02', 1, NULL, NULL, 4),
(1000250, 2182, '2013-11-26 11:20:10', 1, NULL, NULL, 5),
(1000251, 2182, '2013-11-26 11:24:08', 1, NULL, NULL, 5),
(1000252, 2182, '2013-11-26 11:28:34', 1, NULL, NULL, 4),
(1000253, 2182, '2013-11-26 11:31:50', 1, NULL, NULL, 4),
(1000254, 2182, '2013-11-26 11:36:52', 1, NULL, NULL, 4),
(1000255, 2182, '2013-11-26 11:39:14', 1, NULL, NULL, 4),
(1000256, 2182, '2013-11-26 11:42:33', 1, NULL, NULL, 5),
(1000257, 2182, '2013-11-26 11:50:38', 1, NULL, NULL, 4),
(1000258, 2182, '2013-11-26 11:55:43', 1, NULL, NULL, 4),
(1000259, 2182, '2013-11-26 11:57:18', 1, NULL, NULL, 5),
(1000260, 2182, '2013-11-27 09:28:05', 1, NULL, NULL, 4),
(1000261, 2182, '2013-11-27 09:39:00', 1, NULL, NULL, 4),
(1000262, 2182, '2013-11-27 09:41:58', 1, NULL, NULL, 5),
(1000263, 2182, '2013-11-27 09:45:05', 1, NULL, NULL, 4),
(1000264, 2182, '2013-11-27 09:45:20', 1, NULL, NULL, 4),
(1000265, 2182, '2013-11-27 09:51:57', 1, NULL, NULL, 5),
(1000266, 2182, '2013-11-27 09:56:50', 1, NULL, NULL, 4),
(1000267, 2182, '2013-11-27 09:57:48', 1, NULL, NULL, 4),
(1000268, 2182, '2013-11-27 09:58:28', 1, NULL, NULL, 5),
(1000269, 2182, '2013-11-27 09:59:21', 1, NULL, NULL, 5),
(1000270, 2182, '2013-11-27 10:01:27', 1, NULL, NULL, 6),
(1000271, 2182, '2013-11-27 10:08:53', 1, NULL, NULL, 4),
(1000272, 2182, '2013-11-27 10:16:52', 1, NULL, NULL, 4),
(1000273, 2182, '2013-11-27 10:20:36', 1, NULL, NULL, 5),
(1000274, 2182, '2013-11-27 10:22:52', 1, NULL, NULL, 4),
(1000275, 2182, '2013-11-27 10:28:45', 1, NULL, NULL, 4),
(1000276, 2182, '2013-11-27 10:33:08', 1, NULL, NULL, 4),
(1000277, 2182, '2013-11-27 10:50:34', 1, NULL, NULL, 5),
(1000278, 2182, '2013-11-27 10:52:16', 1, NULL, NULL, 4),
(1000279, 2182, '2013-11-27 10:52:42', 1, NULL, NULL, 5),
(1000280, 2182, '2013-11-27 10:54:31', 1, NULL, NULL, 4),
(1000281, 2182, '2013-11-27 11:03:20', 1, NULL, NULL, 5),
(1000285, 2182, '2013-11-28 08:44:50', 1, NULL, NULL, 4),
(1000286, 2182, '2013-11-28 08:46:47', 1, NULL, NULL, 4),
(1000287, 2182, '2013-11-28 10:36:15', 1, NULL, NULL, 4),
(1000288, 2182, '2013-11-28 10:38:32', 1, NULL, NULL, 4),
(1000289, 2182, '2013-11-28 10:40:21', 1, NULL, NULL, 5),
(1000290, 2182, '2013-11-28 10:41:47', 1, NULL, NULL, 4),
(1000291, 2182, '2013-11-28 10:45:50', 1, NULL, NULL, 5),
(1000292, 2182, '2013-11-28 10:51:00', 1, NULL, NULL, 5),
(1000293, 2182, '2013-11-28 10:51:43', 1, NULL, NULL, 5),
(1000294, 2182, '2013-11-28 10:52:28', 1, NULL, NULL, 5),
(1000295, 2182, '2013-11-28 10:52:59', 1, NULL, NULL, 4),
(1000296, 2182, '2013-11-28 10:53:32', 1, NULL, NULL, 5),
(1000297, 2182, '2013-11-28 10:54:51', 1, NULL, NULL, 5),
(1000298, 2182, '2013-11-28 10:56:18', 1, NULL, NULL, 5),
(1000299, 2182, '2013-11-28 10:58:36', 1, NULL, NULL, 5),
(1000300, 2182, '2013-11-28 11:00:15', 1, NULL, NULL, 4),
(1000301, 2182, '2013-11-28 11:03:37', 1, NULL, NULL, 5),
(1000302, 2182, '2013-11-28 11:07:38', 1, NULL, NULL, 4),
(1000303, 2182, '2013-11-28 11:09:50', 1, NULL, NULL, 4),
(1000304, 2182, '2013-11-28 11:12:15', 1, NULL, NULL, 4),
(1000305, 2182, '2013-11-28 11:15:02', 1, NULL, NULL, 4),
(1000306, 2182, '2013-11-28 11:17:12', 1, NULL, NULL, 4),
(1000307, 2182, '2013-11-28 11:38:08', 1, NULL, NULL, 4),
(1000308, 2182, '2013-11-28 11:38:24', 1, NULL, NULL, 4),
(1000309, 2182, '2013-11-28 11:38:47', 1, NULL, NULL, 5),
(1000310, 2182, '2013-11-28 11:51:34', 1, NULL, NULL, 4),
(1000311, 2182, '2013-11-28 11:51:54', 1, NULL, NULL, 4),
(1000312, 2182, '2013-11-28 11:55:04', 1, NULL, NULL, 4),
(1000313, 2182, '2013-11-28 11:56:14', 1, NULL, NULL, 5),
(1000314, 2182, '2013-11-28 11:56:52', 1, NULL, NULL, 5),
(1000315, 2182, '2013-11-28 11:57:42', 1, NULL, NULL, 4),
(1000316, 2182, '2013-11-28 11:58:27', 1, NULL, NULL, 4),
(1000317, 2182, '2013-11-28 11:58:53', 1, NULL, NULL, 4),
(1000318, 2182, '2013-11-28 15:12:40', 1, NULL, NULL, 4),
(1000319, 2182, '2013-11-28 15:14:02', 1, NULL, NULL, 4),
(1000320, 2182, '2013-11-28 15:15:38', 1, NULL, NULL, 4),
(1000321, 2182, '2013-11-28 15:17:51', 1, NULL, NULL, 4),
(1000322, 2182, '2013-11-28 15:28:35', 1, NULL, NULL, 4),
(1000323, 2182, '2013-11-28 15:31:01', 1, NULL, NULL, 4),
(1000324, 2182, '2013-11-28 15:35:22', 1, NULL, NULL, 4),
(1000325, 2182, '2013-11-28 15:48:52', 1, NULL, NULL, 4),
(1000326, 2182, '2013-11-28 15:51:52', 1, NULL, NULL, 4),
(1000327, 2182, '2013-11-28 16:00:56', 1, NULL, NULL, 4),
(1000328, 2182, '2013-11-28 16:07:30', 1, NULL, NULL, 4),
(1000329, 2182, '2013-11-28 16:07:55', 1, NULL, NULL, 4),
(1000330, 2182, '2013-11-28 16:18:22', 1, NULL, NULL, 4),
(1000331, 2182, '2013-11-28 16:20:46', 1, NULL, NULL, 4),
(1000332, 2182, '2013-11-28 16:21:37', 1, NULL, NULL, 5),
(1000333, 2182, '2013-11-28 16:16:38', 1, NULL, NULL, 4),
(1000334, 2182, '2013-11-28 16:34:00', 1, NULL, NULL, 4),
(1000335, 2182, '2013-11-28 16:52:06', 1, NULL, NULL, 5),
(1000336, 2182, '2013-11-28 16:53:54', 1, NULL, NULL, 4),
(1000337, 2182, '2013-11-28 16:56:26', 1, NULL, NULL, 4),
(1000338, 2182, '2013-11-28 16:57:35', 1, NULL, NULL, 4),
(1000339, 2182, '2013-11-28 17:46:47', 1, NULL, NULL, 4),
(1000340, 2182, '2013-11-28 17:51:23', 1, NULL, NULL, 4),
(1000341, 2182, '2013-11-28 17:54:28', 1, NULL, NULL, 4),
(1000342, 2182, '2013-11-28 17:55:26', 1, NULL, NULL, 4),
(1000343, 2182, '2013-11-28 18:00:12', 1, NULL, NULL, 4),
(1000344, 2182, '2013-11-28 17:58:46', 1, NULL, NULL, 4),
(1000345, 2182, '2013-11-28 17:58:55', 1, NULL, NULL, 5),
(1000347, 2182, '2013-11-28 18:04:00', 2, '2013-11-28 18:07:16', NULL, 7),
(1000348, 2182, '2013-11-29 08:23:12', 1, NULL, NULL, 4),
(1000349, 2182, '2013-11-29 08:24:02', 1, NULL, NULL, 4),
(1000350, 2182, '2013-11-29 08:25:55', 1, NULL, NULL, 4),
(1000351, 2182, '2013-11-29 08:35:33', 1, NULL, NULL, 4),
(1000352, 2182, '2013-11-29 08:43:57', 1, NULL, NULL, 4),
(1000353, 2182, '2013-11-29 08:45:55', 1, NULL, NULL, 4),
(1000354, 2182, '2013-11-29 08:46:11', 1, NULL, NULL, 4),
(1000355, 2182, '2013-11-29 08:48:22', 1, NULL, NULL, 4),
(1000356, 2182, '2013-11-29 08:50:24', 1, NULL, NULL, 5),
(1000357, 2182, '2013-11-29 08:49:21', 1, NULL, NULL, 4),
(1000358, 2182, '2013-11-29 08:52:15', 1, NULL, NULL, 4),
(1000359, 2182, '2013-11-29 09:02:42', 1, NULL, NULL, 4),
(1000360, 2182, '2013-11-29 08:57:14', 1, NULL, NULL, 4),
(1000361, 2182, '2013-11-29 08:57:26', 1, NULL, NULL, 4),
(1000362, 2182, '2013-11-29 08:57:50', 1, NULL, NULL, 5),
(1000363, 2182, '2013-11-29 09:08:13', 1, NULL, NULL, 4),
(1000364, 2182, '2013-11-29 09:07:01', 1, NULL, NULL, 6),
(1000365, 2182, '2013-11-29 09:10:00', 1, NULL, NULL, 7),
(1000366, 2182, '2013-11-29 09:10:19', 1, NULL, NULL, 4),
(1000367, 2182, '2013-11-29 09:11:54', 1, NULL, NULL, 4),
(1000368, 2182, '2013-11-29 09:13:54', 1, NULL, NULL, 4),
(1000369, 2182, '2013-11-29 09:16:27', 1, NULL, NULL, 4),
(1000370, 2182, '2013-11-29 09:21:23', 1, NULL, NULL, 7),
(1000371, 2182, '2013-11-29 09:21:27', 1, NULL, NULL, 4),
(1000372, 2182, '2013-12-02 09:29:16', 1, NULL, NULL, 4),
(1000373, 2182, '2013-12-02 11:22:49', 1, NULL, NULL, 4),
(1000374, 2182, '2013-12-02 13:56:53', 1, NULL, NULL, 4),
(1000375, 1788, '2013-12-02 14:44:31', 2, '2013-12-02 14:48:43', NULL, 4),
(1000376, 1788, '2013-12-02 14:46:20', 4, NULL, NULL, 4),
(1000377, 1788, '2013-12-02 14:51:51', 2, '2013-12-02 15:06:19', NULL, 7),
(1000378, 2182, '2013-12-02 14:49:23', 2, '2013-12-02 14:49:56', 'Please teacher!!!!', 3),
(1000379, 2182, '2013-12-02 15:22:39', 1, NULL, 'adfasd', 3),
(1000380, 2182, '2013-12-02 16:33:49', 1, NULL, NULL, 5),
(1000381, 1448, '2013-12-02 20:06:22', 2, '2013-12-04 10:45:58', NULL, 4),
(1000382, 1448, '2013-12-02 20:06:44', 1, NULL, NULL, 5),
(1000383, 1448, '2013-12-02 20:07:29', 5, NULL, NULL, 7),
(1000384, 1857, '2013-12-03 11:08:56', 2, '2013-12-03 11:18:15', NULL, 4),
(1000385, 1857, '2013-12-03 11:11:35', 1, NULL, NULL, 4),
(1000386, 1857, '2013-12-03 12:53:14', 4, NULL, NULL, 4),
(1000387, 1857, '2013-12-03 13:48:22', 1, NULL, NULL, 5),
(1000388, 1857, '2013-12-03 13:54:54', 1, NULL, NULL, 5),
(1000389, 1857, '2013-12-03 14:06:51', 3, '2013-12-03 14:08:28', NULL, 6),
(1000390, 1857, '2013-12-03 14:19:49', 1, NULL, NULL, 7),
(1000391, 2182, '2014-01-07 15:22:35', 1, NULL, NULL, 7),
(1000392, 2182, '2014-01-09 15:47:05', 1, NULL, 'ok', 3),
(1000393, 2182, '2014-01-09 15:54:06', 1, NULL, '12', 3),
(1000399, 2182, '2014-01-10 10:48:58', 1, NULL, NULL, 8),
(1000403, 2182, '2014-01-10 14:47:24', 1, NULL, 'Agora vai', 3),
(1000404, 2182, '2014-01-10 14:48:09', 1, NULL, 'aaaaa', 3),
(1000405, 2182, '2014-01-10 14:54:16', 2, '2014-01-16 14:43:14', 'aaaaa', 3),
(1000408, 2182, '2014-01-10 17:07:39', 1, NULL, NULL, 8),
(1000409, 2182, '2014-01-10 17:10:50', 1, NULL, NULL, 8),
(1000410, 2182, '2014-01-10 17:14:08', 1, NULL, NULL, 8),
(1000411, 1072, '2014-01-14 15:29:05', 1, NULL, 'ok', 1),
(1000412, 1072, '2014-01-14 15:29:56', 1, NULL, NULL, 6),
(1000413, 2182, '2014-01-14 15:32:11', 1, NULL, 'ttt', 2),
(1000414, 2182, '2014-01-14 15:32:26', 1, NULL, 'tre', 1),
(1000415, 1072, '2014-01-15 09:53:08', 1, NULL, NULL, 8);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_acrescimodisciplina_turma`
--

CREATE TABLE IF NOT EXISTS `req_acrescimodisciplina_turma` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `Req_Acrescimo_Disciplina_Requerimento_id` int(10) unsigned NOT NULL,
  `Turma_id` int(10) unsigned NOT NULL,
  `status_disciplina` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `Req_Acrescimo_Disciplina_Requerimento_id` (`Req_Acrescimo_Disciplina_Requerimento_id`,`Turma_id`),
  KEY `Req_Acrescimo_Disciplina_has_Turma_FKIndex1` (`Req_Acrescimo_Disciplina_Requerimento_id`),
  KEY `Req_AcrescimoDisciplina_Turma_FKIndex2` (`Turma_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=3 ;

--
-- Extraindo dados da tabela `req_acrescimodisciplina_turma`
--

INSERT INTO `req_acrescimodisciplina_turma` (`id`, `Req_Acrescimo_Disciplina_Requerimento_id`, `Turma_id`, `status_disciplina`) VALUES
(1, 1000411, 147, 1),
(2, 1000414, 27, 1);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_acrescimo_disciplina`
--

CREATE TABLE IF NOT EXISTS `req_acrescimo_disciplina` (
  `Requerimento_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Requerimento_id`),
  KEY `Req_Acrescimo_Disciplina_FKIndex1` (`Requerimento_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `req_acrescimo_disciplina`
--

INSERT INTO `req_acrescimo_disciplina` (`Requerimento_id`) VALUES
(1000411),
(1000414);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_assinatura`
--

CREATE TABLE IF NOT EXISTS `req_assinatura` (
  `Requerimento_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Requerimento_id`),
  KEY `Req_Assinatura_FKIndex1` (`Requerimento_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `req_assinatura`
--

INSERT INTO `req_assinatura` (`Requerimento_id`) VALUES
(1000347),
(1000365),
(1000370),
(1000377),
(1000383),
(1000390);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_cancelamentodisciplina_turma`
--

CREATE TABLE IF NOT EXISTS `req_cancelamentodisciplina_turma` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `Req_Cancelamento_Disciplina_Requerimento_id` int(10) unsigned NOT NULL,
  `Turma_id` int(10) unsigned NOT NULL,
  `status_disciplina` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `Req_Cancelamento_Disciplina_Requerimento_id` (`Req_Cancelamento_Disciplina_Requerimento_id`,`Turma_id`),
  KEY `Req_Cancelamento_Disciplina_has_Turma_FKIndex1` (`Req_Cancelamento_Disciplina_Requerimento_id`),
  KEY `Req_Cancelamento_Disciplina_has_Turma_FKIndex2` (`Turma_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=3 ;

--
-- Extraindo dados da tabela `req_cancelamentodisciplina_turma`
--

INSERT INTO `req_cancelamentodisciplina_turma` (`id`, `Req_Cancelamento_Disciplina_Requerimento_id`, `Turma_id`, `status_disciplina`) VALUES
(1, 1000413, 13, 1),
(2, 1000413, 7, 1);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_cancelamento_disciplina`
--

CREATE TABLE IF NOT EXISTS `req_cancelamento_disciplina` (
  `Requerimento_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Requerimento_id`),
  KEY `Req_Cancelamento_Disciplina_FKIndex1` (`Requerimento_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `req_cancelamento_disciplina`
--

INSERT INTO `req_cancelamento_disciplina` (`Requerimento_id`) VALUES
(1000413);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_declaracao_matricula`
--

CREATE TABLE IF NOT EXISTS `req_declaracao_matricula` (
  `Requerimento_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Requerimento_id`),
  KEY `Req_Declaracao_Matricula_FKIndex1` (`Requerimento_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `req_declaracao_matricula`
--

INSERT INTO `req_declaracao_matricula` (`Requerimento_id`) VALUES
(1000249),
(1000252),
(1000253),
(1000254),
(1000255),
(1000257),
(1000258),
(1000260),
(1000261),
(1000263),
(1000264),
(1000266),
(1000267),
(1000271),
(1000272),
(1000274),
(1000275),
(1000276),
(1000278),
(1000280),
(1000285),
(1000286),
(1000287),
(1000288),
(1000290),
(1000295),
(1000300),
(1000302),
(1000303),
(1000304),
(1000305),
(1000306),
(1000307),
(1000308),
(1000310),
(1000311),
(1000312),
(1000315),
(1000316),
(1000317),
(1000318),
(1000319),
(1000320),
(1000321),
(1000322),
(1000323),
(1000324),
(1000325),
(1000326),
(1000327),
(1000328),
(1000329),
(1000330),
(1000331),
(1000333),
(1000334),
(1000336),
(1000337),
(1000338),
(1000339),
(1000340),
(1000341),
(1000342),
(1000343),
(1000344),
(1000348),
(1000349),
(1000350),
(1000351),
(1000352),
(1000353),
(1000354),
(1000355),
(1000357),
(1000358),
(1000359),
(1000360),
(1000361),
(1000363),
(1000366),
(1000367),
(1000368),
(1000369),
(1000371),
(1000372),
(1000373),
(1000374),
(1000375),
(1000376),
(1000381),
(1000384),
(1000385),
(1000386);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_ementa`
--

CREATE TABLE IF NOT EXISTS `req_ementa` (
  `Requerimento_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Requerimento_id`),
  KEY `Req_Ementa_FKIndex1` (`Requerimento_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `req_ementa`
--

INSERT INTO `req_ementa` (`Requerimento_id`) VALUES
(1000270),
(1000364),
(1000389),
(1000412);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_extratoacademico`
--

CREATE TABLE IF NOT EXISTS `req_extratoacademico` (
  `Requerimento_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Requerimento_id`),
  KEY `Req_ExtratoAcademico_FKIndex1` (`Requerimento_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `req_extratoacademico`
--

INSERT INTO `req_extratoacademico` (`Requerimento_id`) VALUES
(1000250),
(1000251),
(1000256),
(1000259),
(1000262),
(1000265),
(1000268),
(1000269),
(1000273),
(1000277),
(1000279),
(1000281),
(1000289),
(1000291),
(1000292),
(1000293),
(1000294),
(1000296),
(1000297),
(1000298),
(1000299),
(1000301),
(1000309),
(1000313),
(1000314),
(1000332),
(1000335),
(1000345),
(1000356),
(1000362),
(1000380),
(1000382),
(1000387),
(1000388);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_plano`
--

CREATE TABLE IF NOT EXISTS `req_plano` (
  `Requerimento_id` int(10) unsigned NOT NULL,
  `Plano_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Requerimento_id`),
  KEY `Req_Plano_2_FKIndex1` (`Requerimento_id`),
  KEY `Req_Plano_FKIndex2` (`Plano_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `req_plano`
--

INSERT INTO `req_plano` (`Requerimento_id`, `Plano_id`) VALUES
(1000391, 203),
(1000399, 1000004),
(1000408, 1000021),
(1000409, 1000022),
(1000410, 1000023),
(1000415, 1000024);

-- --------------------------------------------------------

--
-- Estrutura da tabela `req_segunda_chamada`
--

CREATE TABLE IF NOT EXISTS `req_segunda_chamada` (
  `Requerimento_id` int(10) unsigned NOT NULL,
  `Turma_id` int(10) unsigned NOT NULL,
  `data_prova` date DEFAULT NULL,
  PRIMARY KEY (`Requerimento_id`),
  KEY `Req_Segunda_Chamada_FKIndex1` (`Requerimento_id`),
  KEY `Req_Segunda_Chamada_FKIndex2` (`Turma_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `req_segunda_chamada`
--

INSERT INTO `req_segunda_chamada` (`Requerimento_id`, `Turma_id`, `data_prova`) VALUES
(1000378, 29, '2013-12-05'),
(1000379, 29, '2013-12-03'),
(1000392, 3, '2014-01-09'),
(1000393, 27, '2014-01-22'),
(1000403, 7, '2014-01-10'),
(1000404, 3, '2014-01-10'),
(1000405, 1000001, '2014-01-16');

-- --------------------------------------------------------

--
-- Estrutura da tabela `sequence`
--

CREATE TABLE IF NOT EXISTS `sequence` (
  `SEQ_NAME` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `SEQ_COUNT` decimal(38,0) DEFAULT NULL,
  PRIMARY KEY (`SEQ_NAME`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `sequence`
--

INSERT INTO `sequence` (`SEQ_NAME`, `SEQ_COUNT`) VALUES
('tab_id_curso', '1000010'),
('SEQ_GEN', '900'),
('tab_id_professor', '1000000'),
('tab_id_turma', '1000000'),
('tab_id_disciplina', '1000003'),
('tab_id_plano', '1000024');

-- --------------------------------------------------------

--
-- Estrutura da tabela `turma`
--

CREATE TABLE IF NOT EXISTS `turma` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ano` int(11) DEFAULT NULL,
  `nome` varchar(5) COLLATE utf8_unicode_ci DEFAULT NULL,
  `semestre` int(11) DEFAULT NULL,
  `disciplina_id` int(10) unsigned DEFAULT NULL,
  `professor_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `professor_id` (`professor_id`),
  KEY `disciplina_id` (`disciplina_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1000002 ;

--
-- Extraindo dados da tabela `turma`
--

INSERT INTO `turma` (`id`, `ano`, `nome`, `semestre`, `disciplina_id`, `professor_id`) VALUES
(1, 2013, 'A', 2, 152, 10),
(2, 2013, 'B', 2, 152, 10),
(3, 2013, 'A', 2, 7, 70),
(4, 2013, 'A', 1, 33, 53),
(5, 2013, 'A', 1, 34, 53),
(6, 2013, 'A', 1, 14, 70),
(7, 2013, 'A', 2, 12, 70),
(8, 2013, 'A', 1, 1, 70),
(9, 2013, 'A', 1, 31, 27),
(10, 2013, 'A', 1, 9, 1),
(11, 2013, 'A', 1, 5, 12),
(12, 2013, 'A', 1, 32, 13),
(13, 2013, 'A', 2, 13, 13),
(14, 2013, 'A', 1, 6, 64),
(15, 2013, 'A', 1, 29, 17),
(16, 2013, 'A', 1, 30, 17),
(17, 2013, 'A', 1, 16, 8),
(18, 2013, 'B', 1, 20, 2),
(19, 2013, 'A', 1, 11, 20),
(20, 2013, 'A', 1, 20, 2),
(21, 2013, 'A', 1, 10, 27),
(22, 2013, 'A', 1, 24, 20),
(23, 2013, 'A', 1, 3, 29),
(24, 2013, 'A', 1, 28, 29),
(25, 2013, 'A', 1, 19, 33),
(27, 2013, 'A', 2, 23, 78),
(28, 2013, 'A', 1, 25, 31),
(29, 2013, 'A', 1, 15, 74),
(30, 2013, 'A', 1, 17, 13),
(31, 2013, 'A', 1, 8, 71),
(32, 2013, 'A', 1, 18, 45),
(33, 2013, 'A', 1, 21, 78),
(34, 2013, 'A', 1, 4, 49),
(35, 2013, 'A', 1, 26, 70),
(36, 2013, 'A', 1, 27, 47),
(37, 2013, 'A', 1, 22, 47),
(38, 2013, 'A', 1, 2, 78),
(39, 2013, 'A', 2, 151, 38),
(40, 2013, 'B', 2, 151, 58),
(41, 2013, 'A', 2, 164, 58),
(42, 2013, 'A', 2, 138, 58),
(43, 2013, 'A', 2, 134, 58),
(44, 2013, 'A', 2, 132, 58),
(45, 2013, 'A', 2, 141, 74),
(46, 2013, 'A', 2, 146, 58),
(48, 2013, 'A', 2, 135, 58),
(49, 2013, 'A', 2, 140, 9),
(51, 2013, 'A', 2, 144, 58),
(52, 2013, 'B', 2, 132, 74),
(53, 2013, 'A', 2, 149, 72),
(54, 2013, 'A', 2, 147, 14),
(55, 2013, 'A', 1, 66, 58),
(56, 2013, 'A', 1, 51, 58),
(57, 2013, 'A', 1, 40, 58),
(58, 2013, 'B', 1, 40, 58),
(59, 2013, 'A', 1, 48, 58),
(60, 2013, 'A', 1, 67, 58),
(61, 2013, 'A', 1, 53, 58),
(62, 2013, 'A', 1, 36, 58),
(63, 2013, 'B', 1, 36, 58),
(64, 2013, 'A', 1, 75, 58),
(65, 2013, 'A', 1, 76, 58),
(66, 2013, 'A', 1, 56, 58),
(67, 2013, 'A', 1, 77, 58),
(68, 2013, 'A', 1, 78, 58),
(69, 2013, 'A', 1, 63, 58),
(70, 2013, 'A', 1, 79, 58),
(71, 2013, 'A', 1, 73, 58),
(72, 2013, 'A', 1, 71, 58),
(73, 2013, 'A', 1, 35, 58),
(74, 2013, 'A', 1, 62, 58),
(75, 2013, 'B', 1, 62, 58),
(76, 2013, 'A', 1, 38, 58),
(77, 2013, 'B', 1, 38, 58),
(78, 2013, 'A', 1, 70, 58),
(79, 2013, 'A', 1, 41, 58),
(80, 2013, 'B', 1, 41, 58),
(81, 2013, 'A', 2, 82, 58),
(82, 2013, 'A', 2, 90, 58),
(83, 2013, 'A', 2, 83, 58),
(84, 2013, 'C', 2, 88, 58),
(85, 2013, 'C', 2, 89, 58),
(86, 2013, 'LN', 2, 130, 11),
(87, 2013, 'LV', 2, 130, 58),
(88, 2013, 'A', 2, 153, 48),
(90, 2013, 'A', 2, 160, 58),
(91, 2013, 'A', 2, 160, 58),
(92, 2013, 'A', 2, 158, 58),
(93, 2013, 'A', 2, 160, 58),
(94, 2013, 'A', 1, 99, 67),
(95, 2013, 'A', 1, 98, 84),
(96, 2013, 'A', 1, 92, 46),
(97, 2013, 'A', 1, 118, 70),
(98, 2013, 'A', 1, 116, 46),
(99, 2013, 'A', 1, 93, 71),
(100, 2013, 'A', 1, 110, 12),
(101, 2013, 'A', 2, 107, 15),
(102, 2013, 'A', 1, 119, 15),
(103, 2013, 'A', 1, 112, 19),
(104, 2013, 'A', 1, 124, 28),
(105, 2013, 'A', 1, 94, 73),
(106, 2013, 'A', 1, 105, 23),
(107, 2013, 'A', 1, 102, 74),
(108, 2013, 'A', 1, 116, 58),
(109, 2013, 'A', 1, 96, 39),
(110, 2013, 'A', 1, 125, 52),
(111, 2013, 'A', 1, 100, 44),
(112, 2013, 'A', 1, 106, 23),
(113, 2013, 'A', 1, 121, 72),
(114, 2013, 'A', 1, 108, 32),
(115, 2013, 'B', 1, 108, 32),
(116, 2013, 'A', 1, 126, 9),
(117, 2013, 'A', 1, 95, 39),
(118, 2013, 'A', 1, 91, 41),
(119, 2013, 'A', 1, 111, 42),
(120, 2013, 'B', 1, 111, 42),
(121, 2013, 'A', 1, 115, 72),
(122, 2013, 'A', 1, 103, 1),
(123, 2013, 'A', 1, 127, 44),
(124, 2013, 'A', 1, 101, 71),
(125, 2013, 'A', 1, 109, 67),
(126, 2013, 'A', 1, 117, 52),
(127, 2013, 'A', 1, 120, 37),
(128, 2013, 'A', 1, 122, 37),
(129, 2013, 'A', 2, 139, 84),
(130, 2013, 'A', 2, 165, 64),
(131, 2013, 'A', 2, 114, 58),
(132, 2013, 'A', 1, 60, 19),
(133, 2013, 'A', 1, 58, 11),
(134, 2013, 'B', 1, 58, 11),
(135, 2013, 'A', 1, 55, 16),
(136, 2013, 'B', 1, 55, 16),
(137, 2013, 'A', 1, 54, 40),
(138, 2013, 'A', 1, 47, 1),
(139, 2013, 'A', 1, 72, 54),
(140, 2013, 'B', 1, 72, 54),
(141, 2013, 'A', 1, 69, 50),
(142, 2013, 'B', 1, 69, 50),
(143, 2013, 'A', 1, 46, 7),
(144, 2013, 'B', 1, 46, 7),
(145, 2013, 'A', 1, 57, 6),
(146, 2013, 'B', 1, 57, 6),
(147, 2013, 'A', 2, 37, 58),
(148, 2013, 'B', 2, 37, 58),
(149, 2013, 'A', 1, 39, 73),
(150, 2013, 'A', 1, 50, 30),
(151, 2013, 'A', 1, 49, 72),
(152, 2013, 'A', 1, 74, 5),
(153, 2013, 'A', 2, 59, 58),
(154, 2013, 'A', 1, 68, 15),
(155, 2013, 'A', 1, 45, 21),
(156, 2013, 'A', 1, 42, 47),
(157, 2013, 'A', 1, 43, 21),
(158, 2013, 'A', 1, 44, 5),
(159, 2013, 'A', 1, 52, 30),
(160, 2013, 'A', 2, 148, 58),
(161, 2013, 'A', 2, 162, 58),
(162, 2013, 'A', 2, 131, 58),
(163, 2013, 'C', 2, 131, 58),
(164, 2013, 'A', 2, 161, 58),
(165, 2013, 'B', 2, 131, 58),
(166, 2013, 'A', 2, 143, 58),
(167, 2013, 'A', 2, 144, 50),
(168, 2013, 'A', 2, 163, 48),
(169, 2013, 'A', 2, 143, 50),
(171, 2013, 'A', 2, 136, 49),
(172, 2013, 'A', 2, 150, 58),
(173, 2013, 'A', 2, 137, 58),
(174, 2013, 'A', 2, 166, 8),
(175, 2013, 'A', 2, 167, 3),
(176, 2013, 'A', 2, 156, 7),
(177, 2013, 'A', 2, 157, 58),
(178, 2013, 'A', 2, 155, 74),
(179, 2013, 'A', 2, 159, 58),
(180, 2013, 'A', 2, 154, 58),
(181, 2013, 'A', 2, 168, 58),
(182, 2013, 'A', 2, 169, 58),
(183, 2013, 'A', 2, 104, 58),
(184, 2013, 'A', 2, 123, 58),
(185, 2013, 'A', 2, 129, 58),
(186, 2013, 'C', 1, 108, 84),
(187, 2013, 'C', 1, 115, 84),
(188, 2013, 'A', 2, 170, 58),
(189, 2013, 'A', 2, 171, 58),
(190, 2013, 'A', 2, 172, 58),
(191, 2013, 'B', 2, 172, 58),
(192, 2013, 'A', 2, 134, 64),
(193, 2013, 'A', 2, 138, 45),
(194, 2013, 'A', 2, 175, 58),
(195, 2013, 'A', 2, 137, 58),
(196, 2013, 'A', 2, 177, 58),
(197, 2013, 'A', 2, 178, 58),
(198, 2013, 'A', 2, 179, 58),
(199, 2013, 'A', 2, 148, 3),
(200, 2013, 'A', 2, 180, 58),
(201, 2013, 'A', 2, 181, 58),
(202, 2013, 'A', 2, 85, 37),
(203, 2013, 'C', 2, 152, 38),
(204, 2013, 'A', 2, 113, 58),
(1000001, 2013, 'A', 2, 62, 58);

-- --------------------------------------------------------

--
-- Estrutura da tabela `unidade`
--

CREATE TABLE IF NOT EXISTS `unidade` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `nome` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=12 ;

--
-- Extraindo dados da tabela `unidade`
--

INSERT INTO `unidade` (`id`, `nome`) VALUES
(1, 'Escola de Engenharia Elétrica e da Computação'),
(2, 'Faculdade de Administração, Ciências Contábeis e Ciências Econômicas'),
(3, 'Faculdade de Comunicação e Biblioteconomia'),
(4, 'Faculdade de Direito'),
(5, 'Faculdade de Letras'),
(6, 'Instituto de Física'),
(7, 'Instituto de Informática'),
(8, 'Instituto de Matemática e Estatística'),
(9, 'Escola de Engenharia Civil e Ambiental'),
(10, 'Escola de Agronomia e de Engenharia de Alimentos'),
(11, 'Instituto de Química');

-- --------------------------------------------------------

--
-- Estrutura da tabela `usuario`
--

CREATE TABLE IF NOT EXISTS `usuario` (
  `id` int(10) unsigned NOT NULL,
  `telefone_celular` varchar(20) COLLATE utf8_unicode_ci DEFAULT NULL,
  `telefone_residencial` varchar(20) COLLATE utf8_unicode_ci DEFAULT NULL,
  `telefone_comercial` varchar(20) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Extraindo dados da tabela `usuario`
--

INSERT INTO `usuario` (`id`, `telefone_celular`, `telefone_residencial`, `telefone_comercial`) VALUES
(111, NULL, NULL, NULL),
(112, NULL, NULL, NULL),
(113, NULL, NULL, NULL),
(114, NULL, NULL, NULL),
(115, NULL, NULL, NULL),
(116, NULL, NULL, NULL),
(117, NULL, NULL, NULL),
(118, NULL, NULL, NULL),
(119, NULL, NULL, NULL),
(120, NULL, NULL, NULL),
(121, NULL, NULL, NULL),
(122, NULL, NULL, NULL),
(123, NULL, NULL, NULL),
(128, NULL, NULL, NULL),
(129, NULL, NULL, NULL),
(130, NULL, NULL, NULL),
(131, NULL, NULL, NULL),
(132, NULL, NULL, NULL),
(133, NULL, NULL, NULL),
(134, NULL, NULL, NULL),
(204, NULL, NULL, NULL),
(1004, NULL, NULL, NULL),
(1006, NULL, NULL, NULL),
(1007, NULL, NULL, NULL),
(1008, NULL, NULL, NULL),
(1010, NULL, NULL, NULL),
(1019, NULL, NULL, NULL),
(1021, NULL, NULL, NULL),
(1022, NULL, NULL, NULL),
(1023, NULL, NULL, NULL),
(1024, NULL, NULL, NULL),
(1025, NULL, NULL, NULL),
(1026, NULL, NULL, NULL),
(1028, NULL, NULL, NULL),
(1030, NULL, NULL, NULL),
(1034, NULL, NULL, NULL),
(1039, NULL, NULL, NULL),
(1042, NULL, NULL, NULL),
(1046, NULL, NULL, NULL),
(1047, NULL, NULL, NULL),
(1048, NULL, NULL, NULL),
(1049, NULL, NULL, NULL),
(1050, NULL, NULL, NULL),
(1072, NULL, NULL, NULL),
(1079, NULL, NULL, NULL),
(1080, NULL, NULL, NULL),
(1081, NULL, NULL, NULL),
(1082, NULL, NULL, NULL),
(1083, NULL, NULL, NULL),
(1084, NULL, NULL, NULL),
(1086, NULL, NULL, NULL),
(1087, NULL, NULL, NULL),
(1090, NULL, NULL, NULL),
(1091, NULL, NULL, NULL),
(1092, NULL, NULL, NULL),
(1147, NULL, NULL, NULL),
(1403, NULL, NULL, NULL),
(1448, '', '', ''),
(1459, NULL, NULL, NULL),
(1610, NULL, NULL, NULL),
(1611, NULL, NULL, NULL),
(1613, NULL, NULL, NULL),
(1615, NULL, NULL, NULL),
(1788, '(62) 32222222', '(62) 22222222', ''),
(1855, NULL, NULL, NULL),
(1857, '(23) 333222222', '', ''),
(1859, NULL, NULL, NULL),
(1997, NULL, NULL, NULL),
(2182, '(62) 84227198', '(62) 41417198', '(62) 35211245'),
(2232, NULL, NULL, NULL),
(2237, NULL, NULL, NULL),
(2285, NULL, NULL, NULL);

-- --------------------------------------------------------

--
-- Estrutura da tabela `usuario_perfil`
--

CREATE TABLE IF NOT EXISTS `usuario_perfil` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Perfil_id` int(10) unsigned NOT NULL,
  `Usuario_id` int(10) unsigned NOT NULL,
  `Curso_id` int(10) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uc_perfil_usuario` (`Perfil_id`,`Usuario_id`),
  KEY `Perfil_has_Usuario_FKIndex1` (`Perfil_id`),
  KEY `Perfil_has_Usuario_FKIndex2` (`Usuario_id`),
  KEY `Usuario_Perfil_FKIndex3` (`Curso_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=283 ;

--
-- Extraindo dados da tabela `usuario_perfil`
--

INSERT INTO `usuario_perfil` (`id`, `Perfil_id`, `Usuario_id`, `Curso_id`) VALUES
(1, 1, 2182, NULL),
(182, 5, 2182, NULL),
(194, 4, 2182, 4),
(198, 6, 2182, 1000000),
(199, 7, 2182, NULL),
(200, 2, 2182, 1),
(201, 1, 1788, NULL),
(202, 1, 1997, NULL),
(203, 2, 1788, 1),
(204, 2, 1042, 1000000),
(205, 2, 1050, 1000000),
(206, 1, 1072, NULL),
(207, 5, 1087, NULL),
(208, 5, 132, NULL),
(209, 5, 1049, NULL),
(210, 5, 115, NULL),
(211, 5, 1082, NULL),
(212, 5, 1611, NULL),
(213, 5, 113, NULL),
(214, 5, 1092, NULL),
(215, 5, 128, NULL),
(216, 5, 1613, NULL),
(217, 5, 120, NULL),
(218, 5, 116, NULL),
(219, 5, 130, NULL),
(220, 5, 1024, NULL),
(221, 5, 1039, NULL),
(222, 5, 111, NULL),
(223, 5, 1610, NULL),
(224, 5, 1008, NULL),
(225, 5, 1855, NULL),
(226, 5, 114, NULL),
(227, 5, 1615, NULL),
(228, 5, 1091, NULL),
(229, 5, 133, NULL),
(230, 5, 131, NULL),
(231, 5, 118, NULL),
(232, 5, 123, NULL),
(233, 5, 1022, NULL),
(234, 5, 1080, NULL),
(235, 5, 134, NULL),
(236, 5, 1048, NULL),
(237, 5, 119, NULL),
(238, 5, 121, NULL),
(239, 5, 1083, NULL),
(240, 5, 1028, NULL),
(241, 5, 1081, NULL),
(242, 5, 129, NULL),
(243, 5, 1025, NULL),
(244, 5, 1084, NULL),
(245, 5, 1090, NULL),
(246, 5, 112, NULL),
(247, 5, 1030, NULL),
(248, 5, 122, NULL),
(249, 5, 117, NULL),
(250, 5, 1086, NULL),
(251, 5, 1019, NULL),
(252, 5, 1026, NULL),
(253, 5, 1046, NULL),
(254, 5, 1079, NULL),
(255, 5, 1021, NULL),
(256, 5, 1047, NULL),
(257, 5, 1023, NULL),
(258, 5, 1859, NULL),
(259, 5, 1007, NULL),
(260, 5, 1006, NULL),
(261, 5, 1403, NULL),
(262, 5, 1004, NULL),
(263, 5, 2237, NULL),
(264, 5, 2232, NULL),
(265, 5, 1034, NULL),
(266, 5, 1072, NULL),
(267, 5, 1147, NULL),
(268, 5, 2285, NULL),
(269, 6, 1788, 1),
(270, 4, 1788, 1),
(271, 3, 1021, 4),
(272, 1, 1021, NULL),
(273, 7, 111, NULL),
(274, 6, 204, 1000000),
(275, 2, 1448, 1000000),
(276, 2, 1857, 1000000),
(277, 2, 1459, 1000000),
(278, 1, 1022, NULL),
(279, 6, 1021, 4),
(280, 5, 1788, NULL),
(281, 3, 2182, 13),
(282, 2, 1072, 2);

--
-- Constraints for dumped tables
--

--
-- Limitadores para a tabela `anexos`
--
ALTER TABLE `anexos`
  ADD CONSTRAINT `anexos_ibfk_1` FOREIGN KEY (`Req_Segunda_Chamada_Requerimento_id`) REFERENCES `req_segunda_chamada` (`Requerimento_id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `curso`
--
ALTER TABLE `curso`
  ADD CONSTRAINT `curso_ibfk_1` FOREIGN KEY (`unidade_id`) REFERENCES `unidade` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `disciplina`
--
ALTER TABLE `disciplina`
  ADD CONSTRAINT `disciplina_ibfk_1` FOREIGN KEY (`curso_id`) REFERENCES `curso` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `itemcronograma`
--
ALTER TABLE `itemcronograma`
  ADD CONSTRAINT `itemcronograma_ibfk_1` FOREIGN KEY (`Plano_id`) REFERENCES `plano` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `itemcronograma_ibfk_2` FOREIGN KEY (`plano_id`) REFERENCES `plano` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `justificativa`
--
ALTER TABLE `justificativa`
  ADD CONSTRAINT `justificativa_ibfk_1` FOREIGN KEY (`Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `parecer`
--
ALTER TABLE `parecer`
  ADD CONSTRAINT `parecer_ibfk_1` FOREIGN KEY (`requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `parecer_ibfk_2` FOREIGN KEY (`usuario_id`) REFERENCES `usuario` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `plano`
--
ALTER TABLE `plano`
  ADD CONSTRAINT `plano_ibfk_1` FOREIGN KEY (`turma_id`) REFERENCES `turma` (`id`);

--
-- Limitadores para a tabela `professor`
--
ALTER TABLE `professor`
  ADD CONSTRAINT `professor_ibfk_1` FOREIGN KEY (`usuario_id`) REFERENCES `usuario` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `reqementa_disciplina`
--
ALTER TABLE `reqementa_disciplina`
  ADD CONSTRAINT `reqementa_disciplina_ibfk_1` FOREIGN KEY (`Disciplina_id`) REFERENCES `disciplina` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `reqementa_disciplina_ibfk_2` FOREIGN KEY (`Req_Ementa_Requerimento_id`) REFERENCES `req_ementa` (`Requerimento_id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `requerimento`
--
ALTER TABLE `requerimento`
  ADD CONSTRAINT `requerimento_ibfk_1` FOREIGN KEY (`usuario_id`) REFERENCES `usuario` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_acrescimodisciplina_turma`
--
ALTER TABLE `req_acrescimodisciplina_turma`
  ADD CONSTRAINT `req_acrescimodisciplina_turma_ibfk_1` FOREIGN KEY (`Req_Acrescimo_Disciplina_Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `req_acrescimodisciplina_turma_ibfk_2` FOREIGN KEY (`Turma_id`) REFERENCES `turma` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_acrescimo_disciplina`
--
ALTER TABLE `req_acrescimo_disciplina`
  ADD CONSTRAINT `req_acrescimo_disciplina_ibfk_1` FOREIGN KEY (`Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_assinatura`
--
ALTER TABLE `req_assinatura`
  ADD CONSTRAINT `req_assinatura_ibfk_1` FOREIGN KEY (`Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_cancelamentodisciplina_turma`
--
ALTER TABLE `req_cancelamentodisciplina_turma`
  ADD CONSTRAINT `req_cancelamentodisciplina_turma_ibfk_1` FOREIGN KEY (`Req_Cancelamento_Disciplina_Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `req_cancelamentodisciplina_turma_ibfk_2` FOREIGN KEY (`Turma_id`) REFERENCES `turma` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_cancelamento_disciplina`
--
ALTER TABLE `req_cancelamento_disciplina`
  ADD CONSTRAINT `req_cancelamento_disciplina_ibfk_1` FOREIGN KEY (`Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_declaracao_matricula`
--
ALTER TABLE `req_declaracao_matricula`
  ADD CONSTRAINT `req_declaracao_matricula_ibfk_1` FOREIGN KEY (`Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_ementa`
--
ALTER TABLE `req_ementa`
  ADD CONSTRAINT `req_ementa_ibfk_1` FOREIGN KEY (`Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_extratoacademico`
--
ALTER TABLE `req_extratoacademico`
  ADD CONSTRAINT `req_extratoacademico_ibfk_1` FOREIGN KEY (`Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_plano`
--
ALTER TABLE `req_plano`
  ADD CONSTRAINT `req_plano_ibfk_1` FOREIGN KEY (`Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `req_plano_ibfk_2` FOREIGN KEY (`Plano_id`) REFERENCES `plano` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `req_segunda_chamada`
--
ALTER TABLE `req_segunda_chamada`
  ADD CONSTRAINT `req_segunda_chamada_ibfk_1` FOREIGN KEY (`Requerimento_id`) REFERENCES `requerimento` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `req_segunda_chamada_ibfk_2` FOREIGN KEY (`Turma_id`) REFERENCES `turma` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `turma`
--
ALTER TABLE `turma`
  ADD CONSTRAINT `turma_ibfk_1` FOREIGN KEY (`professor_id`) REFERENCES `professor` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `turma_ibfk_2` FOREIGN KEY (`disciplina_id`) REFERENCES `disciplina` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Limitadores para a tabela `usuario_perfil`
--
ALTER TABLE `usuario_perfil`
  ADD CONSTRAINT `usuario_perfil_ibfk_1` FOREIGN KEY (`Perfil_id`) REFERENCES `perfil` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `usuario_perfil_ibfk_2` FOREIGN KEY (`Usuario_id`) REFERENCES `usuario` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `usuario_perfil_ibfk_3` FOREIGN KEY (`Curso_id`) REFERENCES `curso` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
